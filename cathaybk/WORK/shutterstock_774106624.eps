%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: temp.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Halai Mikhail
%%CreationDate: 12/13/17
%%BoundingBox: 0 0 480 270
%%HiResBoundingBox: 0 0 480 270
%%CropBox: 0 0 480 270
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.2 x242 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=288 GradRes=144 Text=0 Stroke=1 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2017-12-13T13:43:40+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-12-13T13:43:41+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-12-13T13:43:41+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>144</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAkAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A80lSOvy6jNwwMSGsUOxV&#xA;2KuxVeOmZMOSC7JodirsVdirsVVkRCqkqSSTU+PXIkt8YggbIW8VRQhSDWlT8zlcuaJxAjy6r7PS&#xA;rq7iMkT26qG4kTXNvA1QAdllkRqb9aUxpxMmeMDR4vhGR+4FXHl3UAaiayBHQ/X7L/qtjTD83Dun&#xA;/pJ/8Si/qnmb/q5xf9xO1/6r4OANv8pnvyf6Wf6lhs/MxZv9yUZ+Htqlr/1XzX6nH6/h5NkO0j35&#xA;P9Lk/UpCz8z1H+5OH/uKWv8A1XzGGM+XzC/yme/J/pcn6l97BrtnEJZNWR0LBSIb+GZhXvwimdvw&#xA;zJryckaniIAnPfvEh96BOo6kHVf0lMQa1b1X2/4bI/BvJlYHiH5/tWS6rqqNRdQnceIlf/mrCGvJ&#xA;lnE0Jk/FZ+mNW/5bbj/ka/8AXDQa/Hyfzj81Ce4uJ35zyvK9KcnYsaeFTiwlMyNk2p4WK7JIdiq+&#xA;Lqcsx81KrlyHYqqxfYf6Ml0KFwUmtO2VsgG+De3fuO2Np4SivrGmf8sb/wDI7/m3LuPH/N+39jTw&#xA;y7/sd9Y0z/ljf/kd/wA248eP+b9v7F4Zd/2O+saZ/wAsb/8AI7/m3Hjx/wA37f2Lwy7/ALHfWNM/&#xA;5Y3/AOR3/NuPHj/m/b+xeGXf9ilcS2bqBBA0TV3Jk51HyoMjOUTyFfFlEHqVMdMthySXZNDsVVrS&#xA;zubuX0rdOclOVKgbD5kZbhwTyy4Yiy15MsYC5ckZ/hzWf+Wf/h0/5qzL/kvUfzftH62j89i7/sLv&#xA;8Oaz/wAs/wDw6f8ANWP8l6j+b9o/Wv57F3/YVdPLus8E/cN1PRk9+m+QPZeo/m/aP1uRDXYaHqPy&#xA;P6kLeeW9aIFLdjv3dKdT75E9k6gn6ftj+tE9fh4fqPPuP6kN/hrW/wDlm/4eP/mrH+SNT/N+2P62&#xA;n8/h/nfYf1O/w1rf/LN/w8f/ADVj/JGp/m/bH9a/n8P877D+pBXdlc2cvpXCcJKBuNQdj8icw8+n&#xA;nilwzFFvxZYzFxNhCkfG2xPw9v45p9X9fwcmClmKOar8zWLsVdirsVdirYFSBiqq0EqgsRsPcYbb&#xA;JYZAWXCCUgEDY9NxjYSMEiLpuGNzVgKjp1GTjMA7sY4pSFhtnCkqeoy3xAwlEg0WvUXHxAxpXgdS&#xA;jAe2SEwQqvai3NxH9ZJEHIeqV+1x70yzDwcY4/pvf3MMnFwnh+pOLp/KCWh+rR3E10CKc34qRXf9&#xA;nwzZagaIQ/d8Rl5uHi/MmXq4RFjH1p/AZofELsKd9afwGPiFad9afwGPiFad9afwGPiFad9afwGP&#xA;iFaXi5enQZl45mkEO+sv4DJcZRTvrL+Ax4ytKkWoXMLc4XMb0pyQlTT5g5OGeUDcTR8mMoCQoi1X&#xA;9Oar/wAtUv8AyMf+uW/ns38+XzLD8vj/AJo+Qd+nNV/5apf+Rj/1x/PZv58vmV/L4/5o+QV01/Uw&#xA;qA3swoTUc226++ROtzfzpfMt8MOKhsPkP1PQdGX8o7rRLSbW/N2rW2rOtby2h9Uxo9T9ki1k/wCJ&#xA;HLY6ufWcx8S8n2hl7UGSUcODFPHxeknhsjv+sfcivqP5Ff8AU561/wAlv+yPJ/m5f6pP5l1/jdtf&#xA;8o2H/Y/9VHfUfyK/6nPWv+S3/ZHj+bl/qk/mV8btr/lGw/7H/qo8483jRF8w3SaFfT6jpKCMWt3d&#xA;cvVYGNS/LkkR2kLAfCMxM2QzlZJl73q+zDmOCJzRjjy73GPLma6npXVIZCQ2x6jfNRq/r+Ds4pho&#xA;nl++1h5VtZLeMwhS/wBZuIrcHlWnEysnLp2ynFjMjs4mr1sMAHEJG/5sTL7gU4/5V3rv/LTpv/cQ&#xA;tP8Aqpmf4B8vmHB/lzD/ADcn/Kuf/Eu/5V3rv/LTpv8A3ELT/qpj4B8vmF/lzD/Nyf8AKuf/ABKO&#xA;h8n6/FEsYbSW4ilTf2lT/wAlMyoTlEVUWmXa2Am6y/8AKuf/ABK//CnmDx0n/pPtP+quS8WXdFH8&#xA;q4O7L/yrn/xLKrb8udMe3iebV9LSVkUyJ9fs9mIqR9rscxzqsl/TH8fF7PBHsOWOJlnzCRAscEtj&#xA;1/gVR+W2jgg/prTP+k+z/wCasH5rJ/Mj+Pi3DH2Df+MZv9JL/iENqn5Y6MYprmXXbBURC7rFqFox&#xA;ogr8KhiSdugzGySnI3Tnxn2JIcHj5d/6Mv8AiWMpo3kwIANYagH8y/0ym5dzuIdmdlAV+YPzH6ls&#xA;OieS1UhdZYiv8yj/AI1wmUu5ji7L7JiNtQfmP1Kcmg+SGck6y1T7r/zTjxS7mqfZHZBNnUH5j9S3&#xA;9AeR/wDq9P8Aev8AzTjxy7mH8jdkf8pJ+z/iV8eieSUrTWWNfdf+aclHLMdF/kbsf/lJP2f8SlXm&#xA;BNNtJI002UXMBRWaY0rzJIK7AdgDlkMpPN0HbGl02GYjp5+JDh5+e+3TySf60/gMn4hdNSjldhLs&#xA;bCuxsK7GwrsbCr16Zl4yOFiXZOwrsbCuxsK7GwrsbCuxsK7GwrsbCuxsK7GwqnJ9rNbq/r+DKK3M&#xA;cc2S/MywxdjYWnY2FdjYV2NhXY2FdjYV2NhXY2FdjYV2NhXY2FVnK+gtCa7bGtOmC2w/So4bDWr/&#xA;AFWz/wCWxf8AgH/ph/K4/wDVB8pfqavEn/N+0O+q2f8Ay2L/AMA/9MfyuP8A1QfKX6l8Sf8AN+0O&#xA;+q2f/LYv/AP/AEx/K4/9UHyl+pfEn/N+0O+q2f8Ay2L/AMA/9MfyuP8A1QfKX6l8Sf8AN+0O+q2f&#xA;/LYv/AP/AEx/K4/9UHyl+pfEn/N+0KckaI3FHEi9nAI/A5PwwNgeId7MEnmKW0OPCUuoceEq6hx4&#xA;SrqHHhKuoceEq1kSEuxV2Kt0OS4Sh1DjwlVjA1zFzRNsg1Q5VwlK4oojUgnkSaim335Iw2ZECmlB&#xA;32rtgESgNUODhKFWC2lnJCFARufUkSMfQXK1yUcUj/aEGVK36Luv54P+kiD/AJryX5eXl8x+tjxj&#xA;8Au/Rd1/PB/0kQf814/l5eXzH614x+AXfou6/ng/6SIP+a8fy8vL5j9a8Y/ALv0Xdfzwf9JEH/Ne&#xA;P5eXl8x+teMfgF36Luv54P8ApIg/5rx/Ly8vmP1rxj8Au/Rd1/PB/wBJEH/NeP5eXl8x+teMfgF3&#xA;6Luv54P+kiD/AJrx/Ly8vmP1rxj8AvTfLv5PeUtS0Oyv77zha2N1cxh5rTnbsY2qfhr6w/VmZj0M&#xA;CLMqPw/W8hr/AGk1WHNKENPKcYnY+rf/AGLD/PvlzT/L2rHTdO1SPVrVY43F1HwoSw3X4HcbfPMP&#xA;NhEJUDb0fZWuyarTDJkh4cr+nf8ATTF6HK+EueyXy7p93eWbtBDp7LG5UtdkLJWgO1T03zMx4jIc&#xA;wPewMCeQl8EzPl/VSdodGH+zX+uWflj/ADo/NicMu6SheaRqlrbPO1tpMgSlUiKs5qQNhX3yM8PC&#xA;LuKY6eZNVJLPXvv+rXZ/8i1/5qzH4m38lPz+bvXvv+rXZ/8AItf+aseJfyU/P5rlnvqf8cyz/wCR&#xA;a/8ANWZeM7IOin5/Nd619/1bLP8A5Fr/AM1ZYj8lPz+bvWvv+rZZ/wDItf8AmrFfyU/P5pbqAmMw&#xA;eWCOAsNkiAC7d6AnCAg4jDYoWmPCxdTHhVaRvlUom0upkeEq6mPCVby5DsCrW65jZubILcqSqs37&#xA;lByJoT8NNh9OTJ9I3Zk+kbrF77V2yIYhbgQuKMAGIIDfZPjhpaK3ArsVdirsVdirsVdirYIB339s&#xA;VbLKRstPfFJLYZafZxW1LMdXYq7FXYq7FVRSKZmYZCgxLdR45fxDvQ6o8ceId6uqPHHiHerqjxx4&#xA;h3q6o8ceId6uqPHHiHerqjxx4h3q6o8ceId6tVHjlRmL5pdUeODjHeq1uuY+U2UhblSVRmrCg5E0&#xA;J+EjYfTlhPpG7Mn0jdavfau2QDEMy8teRvLuraRFfXvmq00u4kLhrOYRc1CsQCeU0Z+ICv2c2em0&#xA;GLJASlljA9xr9YcTLqJRlQiT+PcnEn5YeUvRjB89WVN6VEPHr+z/AKTmSey8ND99H7P+KRLVzoei&#xA;X4+Cn/yq/wAof9T1p/3Q/wDZTkf5Lw/6tH7P+KYfm5/zD+PgxLzboOm6JqUdrp+rQ6xC8KytdQce&#xA;KsWZTGeDyioCg9e+a7V6eOKVRkJiuY/tLk4chmLI4UkzFbXYVbxV2KtYFTAJo/1cEyP6/Dcb050+&#xA;XjmyEdL4fOXHX2/JxicvFyFWl+a1yXYqif0fP/ND/wAj4f8AmvG27wJd8f8ATR/W79Hz/wA0P/I+&#xA;H/mvG18CXfH/AE0f1u/R8/8AND/yPh/5rxtfAl3x/wBNH9a2SzmjQuzREDqFliY/crE4olhIF7f6&#xA;YfrUMWpsZKPNW8sQ7FVa3uFh5coI5uVKepy2p4cWXL8OYQu4xl77/QQ1zgZdSPcrfpCL/lht/uk/&#xA;5ry/85H/AFPH/sv+Ka/AP86X2fqd+kIv+WG3+6T/AJrx/OR/1PH/ALL/AIpfAP8AOl9n6nfpCL/l&#xA;ht/uk/5rx/OR/wBTx/7L/il8A/zpfZ+pZNeRyxlBawxE/toH5D72IyvLqRKNCEI+Yu/tkWcMRBvi&#xA;J+X6kNmK2tZUeaWsCuxV2KqjMDCi8ySCfgpsMmT6QLZk+kC1gI8K5BiGsUK0v9xF9vv9r7PX9nJy&#xA;5BnLkFHIMHYq7FW8KuxV2KtYFdiqrDbyTAlCgp15yIn3cytcWcMZlyr5gfeqfo+f+aH/AJHw/wDN&#xA;eNs/Al3x/wBNH9aGxaW141+IEjwBp/XCK6oK+sP8rf8ABD/mnJ3DuPz/AGIourD/ACt/wQ/5pxuH&#xA;cfn+xaLbmGv2T9DD/mnDIw7j8/2JN94aBh/lb/gh/wA04YmN8j8/2Iop15cm8mo8/wDiK3vpkIX6&#xA;uLKSNSDvy58x8qUy+Bx9Qfm6/XR1ZA8CUB38QP2Unf1v8m/+WDXP+Rttk7w90nXeH2t/PwfKSnd3&#xA;H5TPZXIsrLWEvTE4tWlltzGJSp4FwN+PKlaZGRxVsJW3YMXafGOOWHgsXQldda82HuqgbeOY7viF&#xA;mLF2KuxV2KtZUeaWsCuxV2Kri7Gm/TFkZlF6bq13p1ybi3SB5CpSlzbW90lCQdo7hJUrt1pXDE01&#xA;5Y8Yok/AmP3UmZ8760TU2+l/9wjS/wDsmyXiHy+Qcc6OB6z/ANPP/ilSTztrPoxf6PpvfZtI0vj1&#xA;/Z/0bLJZDQ/UGUtFChvk/wBPP/ilL/G2s/8ALPpf/cI0v/smyHiHy+QYfkod8/8ATz/4pUbzrqL2&#xA;rxvb6YGcFarpGmKaHbZltgR8wcichvp8g5ENJhEOc+L+vP8A4pCya+7MB6VpwIYNSytQdx7RVyPE&#xA;XJOPDxAi698v1pTIVLsV+zXbtiGGQgyNcluFg7FWsCuxV2KuxVPvrflv/ljf/P8A2edP4ug/1M/j&#xA;/Odd4eo/nD8fB31vy3/yxv8A5/7PHxdB/qZ/H+cvh6j+cPx8HfW/Lf8Ayxv/AJ/7PHxdB/qZ/H+c&#xA;vh6j+cPx8HfW/Lf/ACxv/n/s8fF0H+pn8f5y+HqP5w/HwVvrflv0H/0U9RtQcvo+PJ+Joa+g/j/O&#xA;bvD1HAfVH9P3KIuvLf8AyxyfcP8AmvIxy6H/AFM/j/OafD1H84fj4N/WvLf/ACxyfd/zfk/E0P8A&#xA;qZ/H+cjw9R/OH4+CW3htXuHa2QxwmnBD1Gwr3PfNbqI4pTJgKi5eISEakbKyJV3yjw49zfEtyqKd&#xA;O+Phx7lkVLivhh8OPcwt3FfDHw49y27ivhj4ce5bdxXwx8OPcttcV8MqOON8k27ivhg8OPctpo3m&#xA;rWgf71f+AX+mYuWIB2cwa7L3tf4q1r/fy/8AAL/TIAJ/O5e9d/inWf8Afq/8Av8ATMrwosfz2Xvd&#xA;/inWf9+r/wAAv9MfCiv57L3rv8Vat/OP+BXw+WDwgz/Pz/H9i7/FuscQpkBC9BxX6e2JxBI7Ryfi&#xA;v1Lf8V6zXaVadvgTt9GPgxY/yhl7/sCyXzNq8sbRvKpRwVYcFGx69sIxRYy12UiifsSvivhk/Dj3&#xA;OJa8QORURkg9DQ4+HHuTRZFoWuaFaWKW91pcdzOpYtMyRkkE1G7AnbOh7O1ulx4xCeISkOtR/S6z&#xA;U6XLOdxmYju3Quu3+nX1xHJZWa2kapxZFVVqak1+EDKNflw5pA44CAry/Q36XFOESJS4ks4jwzA8&#xA;OPc5NrZFXgdshPHGuSQVJVTkKjau+UDHG+SklOPrflv/AJY3/wA/9nm58XQf6mfx/nOD4eo/nD8f&#xA;BC0GYDmuoMVdQYq6gxVW29BxVOo2p8X0ZPp0br9B5fpUQBkY82lugyxDqDFXUGKuoMVdQYq6gxVD&#xA;XH959GVT5pUsirWVHmlWWzu2UMsEjKdwQjEEfdkbDkR0uUixCRHuKx7C+5f7zy/8A39MxMx9TMaP&#xA;N/Ml/pS19Qvv+WeX/gG/plYO6fyeb+ZL/Slf9Qvv+WeX/gG/pmbYY/k838yX+lKk6OjFXUqw6qRQ&#xA;j6DhaJQMTRFFdby+jcRTcQ/pur8D0PE1ocBZ4MvhzjOr4SDXuZN/jr/tV233f2ZX4Xm9f/ox/wBo&#xA;xfj4O/x1/wBqu2+7+zHwvNf9GP8AtGL8fBV/xjMDT9FWnUj7S9hyP4ZCh3lyD7UT/wCUfD8x0F/d&#xA;+rm2POMppTSrTfiBUqPt/Z/z7d8nwjvKB7UzP/IfD06j+Ll+OnWlw/MW5UBRp1tRdht4fRkxj83H&#xA;Ptf/ALRjWw+eOT0/Rdtv7f2ZPHi80j2ws14GJP8AXfOX5d6jpCWv+G5LfUYoqfWY5GoZjHTkR6tK&#xA;ct+mZWKAj1JeN7a7R1+rmB+7xwjO/SBdd3093m86yTWqxfYf6MPQq3QZWrqDFV3HL/BRbuOPgrbu&#xA;OPgrbRFMrnCkqoatu+6D4htT4voxvZuB9B5fpURgjzaW8mh2KuxV2KtgVyUY2Vb45Z4SLXPFpJ4m&#xA;WWdZKfEEjQrX2JcfqxOGHUn5ftYky6U39S0qlfUuqf8AGKP/AKqZHwsXefkP1tnhZv5q1bTSHFVl&#xA;uiP+MUf/AFUys4cV85fIfrWMMshYA/HwTq18zT20MdpDeXASFQqL9WhJCgbbl8rOlwne5fL9r0Om&#xA;9pu0sMBigY1AUBQ5fJdL5vvEPxXtwK/8u0H/ADXmNk0uC+cvkP1t8va7tWPOUfkP+JU/8aXH/LfP&#xA;/wBI0H/NeQGkwd8vkP1sf9GXaf8AOj8h/wASvPnS5oaX09e3+jQf815lfk8PfL5ftY/6Mu0/50fk&#xA;P+JYze3Vxe3Ul1cNymlILsABWgp0HyyAwAOk1esyajKcuQ3OXNQ44fB83Ht3HHwfNbdxx8HzW3cc&#xA;fB81tdxyXg+aLdxw+D5rarbr+8H0fryyGHzTE7hWmT94e3t9GWjF5pyn1FYF3x8JgCqxL8D/AEYf&#xA;C2K23xyHgrbuOPgraI+sp/yzxf8AD/8ANWZnij+bH7f1tXhnvP2fqUWNWJoBU1oOgykmy2BrFWmy&#xA;jMkNiQiMx0FCQa032yq9qbBPalo64Y82DeTVwG+SgLKG6DLuAIdQY8AVtQK5PHAWgrqDL+EIQ1wB&#xA;6n0ZCUBaUWF+AbdvBso4A7UXX9qlbD9307+B/hkJwFtWm+lVsRY/pI/XRJ9X4nl6IHOtNqcvfBKH&#xA;p2b9H4P5j99xcFfw8+Xmj7seTNuY1H6PR/jmHOBvo7nP/JNC/wAz/sP0oankj/tZf8kMAhLycW+x&#xA;/wDoJ/6VpRII+benX06nhy607VpmfwB5ydcR4fp6W1QY8AYuoMeAK6gx4ArqDHgCuoMPAFXUGHgC&#xA;q92gV1HprHVFNFNQduuHgDOfNThoHB7Drjw0xid1V2BckDbwOEJmQTYVRcpX/eeL/h/+asu8UfzY&#xA;/b+tpGM95+z9SrFcpwf/AEeLt/P/AM1Y+KK+mP2/rXwz3n7P1Kkt0hK/uIT8I6Bx/wAbYJZR/Nj9&#xA;v62c4H+d936lP6yn/LPF/wAP/wA1YPFH82P2/rYeGe8/Z+pGnWHKn/cdaAEdRD/bmOy8A8/UloRy&#xA;KhSR40w22CBPRwRiKgEj2GNqIk8gsfrlOXogLcpSvQlSGXZhuCMyIRFKJEGwv5y0pU0p+Fa/rydB&#xA;lxyrmfx+1vlNXct+1Xr3+1/bkoAWpnPvPX9v7Wqe2ZFBqVbW0nupDHAnNwORFQNq07keONBhkyCA&#xA;sooaFqtf7j/hk/rkoVbSdXj7/vXfoLVP98f8Mn9cv2R+bx9/3oefQdV5/wBx2/mT+uQlS/m8ff8A&#xA;eqDStT40+rHp/vxf+asr4XMHamGq3+1TbStRtLdpZrciNdywkXvt0BwGAJTg1kAK3N+9RtLi3hnd&#xA;57X1w4AVeZUinuMeAUznxcdiwvvNS00sF/RtD13mY/wzBzACTXmEyK4j96G+vab/ANW8f8jG/plY&#xA;LR4U/wCd9i/69pv/AFbx/wAjG/pmUx8Kf877HfXtN/6t4/5GN/TFfCn/ADvsd9e03/q3j/kY39MV&#xA;8Kf877Ho/wDyo/zj/wBWq0/6S/8Am3J8BeU/0X6P+fP/AEjv+VH+cf8Aq1Wn/SX/AM248BX/AEX6&#xA;P+fP/SIe6/Ifz3KymGytYABuBchq/eMeAtkPbHRDnKR/zXH8gPzA4f3FrWn+/wBf6YOEuV/ox0Fc&#xA;5f6VWm/IDz+eNLW0T4BULcA1269MaLZL2v0Ar6uX81F2P5MfmBDAsZ0vS5OIp6kjKzH5nBKBtx4e&#xA;1ugO/FP5Nt+UH5g1P+4nSeviP64eAtJ9rtDf1ZPkrxfkp+ZEiqy6TpBDdByFcgdnKx+0WkmARKe/&#xA;kxHzBp2seXNVm0nU9N09LyNUkYRpzXi/TcHCdg7ns7LDWQ48RlVkb7cktuNWdCnKwsDUADjD/bkS&#xA;b6uwzaWUastHUZQCTp9jQb/3X9uQ4gp0MgLv7WSxeafIwt1DeXySFAO432yg453zeth2nouAfuei&#xA;6LzV5E9MU8vFR4VGA4597LH2noeHbDS+08y+Q5EPHQBGAehIxlCfenT9oaGQ2w0wfUlt5r2ee3Cw&#xA;wTTO0MPdEZiVU/6o2yWQ8nmM8YyySlHaMpGh3C0HLGEfjyDe4ysFx5x4TTh0zKhyayrC8uwgQTOE&#xA;CemFDGnDnz4/Ln8Xzx8ON3X45fc2jUZAK4jVVz6XxV89/evOoX7sS1xIxb1C1XJr6opJ3/b7+OSx&#xA;4oA8h/Zy+TKWrynnKXXr/O+r59e9TlmllfnK5d6AcmJJoooNz4AZkxiAKDRPJKZuRsrcLFteuTx8&#xA;0FvL0Ie4/vPoyElUsCVdpEKKAdxTxyADkSyDhAtzSIWUhthWvXEBlLJEkboe7ZWlBBqKZgagephk&#xA;kCdlHKRzYLsy2LsVdiqbf4t81f8AV5vv+kmb/mrDZcL+TdN/qeP/AEsf1O/xb5q/6vN9/wBJM3/N&#xA;WNlf5N03+p4/9LH9Tv8AFvmr/q833/STN/zVjZX+TdN/qeP/AEsf1L/8X+bKU/TV9T/mJl/5qwp/&#xA;k/T/AOpw/wBLH9SvdebfNiOg/S15H8Cmi3UrV26/axZz7P04/wAlj/0sf1KUfm/zWDQazff9JMv/&#xA;ADVgLAdn6cf5OH+lj+pd/izzT/1eb7/pJm/5qw2j+TtN/qcP9LH9SZaf5p8ykRFtU1Jt9zHczcvo&#xA;+PKyd3a6bszS8IPgx+EQlkl7d3t3PNeSzXUpoOcztJJQHYFmJO2E/SjT4ceORjGNR7hssvOPKKg7&#xA;DAS36qrjs24Tg3wN0P8An1ysM5CNHYp2vkzzD6NPSH2enJKdMhxi3Yx7NlwV4mLl/qmP9aHg8v3o&#xA;jCtPApFdhNEe/wA8TMW3YOxc3CPXj/08P1q2n6FdxRt/pFuKnp6sTf8AG2CcwW3SdjZYRPrx/wCn&#xA;gf8AfId9CveKD1rXZq7zRV+n48ryzDjnsbN/Oxc/58P+KQ9z5fvmlqJbU7dRPEPw55WJhqy9iZib&#xA;4sX/ACsh/wAUs/w9fBamS223/wB6Iv8AmrMqGQU0S7DzDfix/wDKyH/FJZlzpmx1ycOaldlyHYq2&#xA;vXJ4+aC3l6EPcf3n0ZCSqWBLsVdiqlJ9rNfqvqZRW5jjmyXZlsXYq7FXYq7FW8VbwqqTSI7AogjA&#xA;ABA3qR33wpkbVbWyvZwXgt5JUGxZEZhXwqBgapZYR2JAV/0Vqn/LHP8A8i3/AKYWP5jH/Oj8wzL8&#xA;v/y91PzJcSQi6XSzboHL3QePlUkcUPA1PjlR5tmo7ZxabHE+qdn+CiQp+afy81TyzfLA10mpfWVM&#xA;glsg8gWjUo/w7HJEelxey+2cWplOXqx0f4qBKQXWnam5j/0a4NNv7ph/xrkQSXZ6jVYiR6x9iYxe&#xA;U9cntxKkbBXBoHKofDcMARlXFR5O3x6PxcfFHLjo9+SA+wm2WPrXlVojH/iOdVotSLIAgIOHX6t3&#xA;7++VCW928pIagxMfBjVD7PT3/PvKUDTPy6Wo/Tt2KFq1t5Oo3b/dPbD4gLfHPrYChDl+jn16L7Kz&#xA;/LKFWUeYblQadYHP/MnGUiWem1uqgCBED5frYdPNDz4xzco1kPAlaHiCaE7DtkJElz45LiLO7cOq&#xA;zWkzvB6cnqAAmRA3TwrmVpNXPBfCBv3i3E1mGOU7k/DZEDzLf0/u4P8AkUubSPa2UjlD/ShwfyEO&#xA;+Xzb/wAS3/8AvuD/AJFLkv5Vy90P9KF/IQ75fNw8y3/++4P+RS4R2tk7o/6UL+Qh3y+bf+Jb7/fc&#xA;H/Ipcn/K0+6P+lCPyEO+Xzd/iW+/33B/yKXH+Vp90f8AShfyEO+Xzd/iW+/33B/yKXH+Vp90f9Kv&#xA;5CHfL5u/xNff77g/5FLh/lefdH/Sr+Qh3y+aV6rqU15MjSqilFoOChep70zD1OvlkIuvgHIw6cYx&#xA;taB55j/mG6nc8fzC07nj+YWlKRmLGgrQVOa3Van1/BnGKz1Mxxqt08K/1MzPzLGnepj+ZWnepj+Z&#xA;Wnepj+ZWnepj+ZWnepj+ZWk/n81xS2DWo0y2QtH6frKo5janLp1ysZN7t6XN7QRngOLwMQuPDxVv&#xA;y58uaRc8u/MvM0j9O1vUrKNorWb04yS5Xip3IAr8QPhkhnJ5NGXSY8huQsoz/FOu/wDLT/wkf/NO&#xA;S8WTV/J+H+b9p/Wi7Hzl5gWaNPrBIH8kacv1ZDjJLl4MGONAR+/9bUPm/X1aVxcbk9408f8AVwmZ&#xA;4WuOmxRkTw8/M/rVE8568zgPcIEb4WYxRkgEgkiqmh27ZXxFnLFjo+kcvP8AXty5s5PmTyk5IHmG&#xA;SrlthZD9scaAfV+37PvkeXUtBz5pH+5x73/shX87p07i8t+tXPHj6r8aFacjTiW5EfItv88jwR7n&#xA;P8fJVcRqq59Luvnv72zeXZJJnkJJYk8m6uKP3/aGx8cHhx7gyOpy/wA6XXqeux+Y596kqM32QTTr&#xA;QVybSAS36Uv8jfccU8B7nelL/I33HFeA9y8RS0+w33HMmHJiYHub9KX+RvuOTteA9zRjkAqVIHjQ&#xA;4rwnuW4sXYq7FXYqhrj+8+jK580qWQVsAk0G5PQYqi/0Rq3/ACxT/wDIp/6YOIN3gZP5p+SmdH1b&#xA;k3+g3J+HtE/9M1uqPr+DZDBk/my+Sl+h9X/5Ybj/AJFP/TMUc18DJ/NPyX/ofVv+WK4/5FP/AEzN&#xA;sMfAyfzT8nfofVv+WK4/5FP/AExsL4GT+afk79D6t/yxXH/Ip/6Y2F8DJ/NPyd+h9W/5Yrj/AJFP&#xA;/TGwvgZP5p+ShPb3ED8J4nieleLqVNPGhxYSgYmiKU8LFdkkOxVVtnZJQ605KQwqARUGvQ7ZZDew&#xA;yhMxkJDmDaINzKV4/DTjx+yvTlz8PHLOENh1MyK25VyHK+Lu7/1cl639yrl1ZQxLmoRBvIKN2/2u&#xA;2IgGX5zJd7fxfwx/i59P7OlLYjVHJ67ZZ0LjOytW0d0dXRirqQVYGhBG4IIwEXsWUZGJBBoh/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:cd01ade3-befc-4c76-a05f-c59b27d2221e</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:cd01ade3-befc-4c76-a05f-c59b27d2221e</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:888f43e4-3ec7-4f74-bea9-129840ce89bd</stRef:instanceID>
            <stRef:documentID>xmp.did:888f43e4-3ec7-4f74-bea9-129840ce89bd</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:740f1638-69fc-4aae-8128-9ff9a2ad243e</stEvt:instanceID>
                  <stEvt:when>2017-07-23T21:49:23+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3f424217-ccf4-4bd2-af02-1a462ca6cf5b</stEvt:instanceID>
                  <stEvt:when>2017-07-24T00:43:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d6608d31-f074-4ed5-ab10-8f96de58b4c0</stEvt:instanceID>
                  <stEvt:when>2017-08-07T22:05:14+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c7b5498a-654f-480d-a0da-e418a272dacd</stEvt:instanceID>
                  <stEvt:when>2017-09-21T23:57:30+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:84b6dece-f9be-4167-b243-fa4d1621c992</stEvt:instanceID>
                  <stEvt:when>2017-09-22T00:08:09+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:12a5ffce-f7b1-4b07-83b7-391734a34861</stEvt:instanceID>
                  <stEvt:when>2017-09-23T23:27:27+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8d716e1e-22b8-4a4f-a2b7-3ce04125e629</stEvt:instanceID>
                  <stEvt:when>2017-09-24T23:29:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3dd1fbbd-64b1-4e16-862f-4e74bbe679e2</stEvt:instanceID>
                  <stEvt:when>2017-09-24T23:31:22+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3e71451f-ac42-4866-a367-1c01ccebd8f0</stEvt:instanceID>
                  <stEvt:when>2017-09-24T23:32:30+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2a9b15cd-8a90-4544-bd8a-4c89489386c9</stEvt:instanceID>
                  <stEvt:when>2017-11-11T12:36:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b4787833-c698-4ecb-841b-5b691c175bb3</stEvt:instanceID>
                  <stEvt:when>2017-11-12T01:18:52+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:37a6dd33-a89d-4822-b334-2004aebba08c</stEvt:instanceID>
                  <stEvt:when>2017-12-13T10:35:15+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cd01ade3-befc-4c76-a05f-c59b27d2221e</stEvt:instanceID>
                  <stEvt:when>2017-12-13T13:43:41+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>480.000000</stDim:w>
            <stDim:h>270.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -270 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 270 li
480 270 li
480 0 li
cp
clp
0 270 mo
480 270 li
480 0 li
0 0 li
0 270 li
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
gsave
0 270 mo
480 270 li
480 0 li
0 0 li
0 270 li
clp
432.2 72.0016 mo
323.651 72.0016 li
323.651 71.9873 li
432.2 71.9873 li
432.2 72.0016 li
.32549 .533333 1 rgb
f
78.5186 89.9229 mo
12.2304 89.9229 li
12.2304 88.4946 li
40.9301 88.4946 li
40.9301 88.3544 li
78.5186 88.3544 li
78.5186 89.9229 li
78.5186 87.8158 mo
40.9301 87.8158 li
40.9301 85.0741 li
12.2304 85.0741 li
12.2304 82.0703 li
20.0938 82.0703 li
20.0938 81.522 li
12.2304 81.522 li
12.2304 81.2579 li
20.0938 81.2579 li
20.0938 80.7089 li
12.2304 80.7089 li
12.2304 80.4452 li
20.0938 80.4452 li
20.0938 79.8965 li
12.2304 79.8965 li
12.2304 79.6324 li
20.0938 79.6324 li
20.0938 79.0839 li
12.2304 79.0839 li
12.2304 78.857 li
78.5186 78.857 li
78.5186 87.8158 li
78.5186 78.3188 mo
20.0938 78.3188 li
20.0938 78.2715 li
12.2304 78.2715 li
12.2304 72.0016 li
78.5186 72.0016 li
78.5186 78.3188 li
0 0 .054902 rgb
f
20.0938 82.0703 mo
12.2304 82.0703 li
12.2304 81.522 li
20.0938 81.522 li
20.0938 82.0703 li
20.0938 81.2579 mo
12.2304 81.2579 li
12.2304 80.7089 li
20.0938 80.7089 li
20.0938 81.2579 li
20.0938 80.4452 mo
12.2304 80.4452 li
12.2304 79.8965 li
20.0938 79.8965 li
20.0938 80.4452 li
20.0938 79.6324 mo
12.2304 79.6324 li
12.2304 79.0839 li
20.0938 79.0839 li
20.0938 79.6324 li
20.0938 78.3188 mo
12.2304 78.3188 li
12.2304 78.2715 li
20.0938 78.2715 li
20.0938 78.3188 li
.0509804 .0156863 .0745098 rgb
f
78.5186 78.857 mo
12.2304 78.857 li
12.2304 78.8197 li
20.0938 78.8197 li
20.0938 78.3188 li
78.5186 78.3188 li
78.5186 78.857 li
.509804 1 .992157 rgb
f
20.0938 78.8197 mo
12.2304 78.8197 li
12.2304 78.3188 li
20.0938 78.3188 li
20.0938 78.8197 li
.533333 1 .992157 rgb
f
12.2304 108.569 mo
0 108.569 li
0 89.9229 li
12.2304 89.9229 li
12.2304 108.569 li
12.2304 72.0016 mo
0 72.0016 li
0 71.1699 li
12.2304 71.1699 li
12.2304 72.0016 li
0 0 0 rgb
f
12.2304 89.9229 mo
0 89.9229 li
0 82.0703 li
.3912 82.0703 li
.3912 81.522 li
0 81.522 li
0 81.2579 li
.3912 81.2579 li
.3912 80.7089 li
0 80.7089 li
0 80.4452 li
.3912 80.4452 li
.3912 79.8965 li
0 79.8965 li
0 79.6324 li
.3912 79.6324 li
.3912 79.0839 li
0 79.0839 li
0 78.8197 li
.3912 78.8197 li
.3912 78.2715 li
0 78.2715 li
0 72.0016 li
12.2304 72.0016 li
12.2304 78.2715 li
6.79452 78.2715 li
6.79452 78.3188 li
4.81202 78.3188 li
4.81202 78.857 li
12.2304 78.857 li
12.2304 79.0839 li
6.79452 79.0839 li
6.79452 79.6324 li
12.2304 79.6324 li
12.2304 79.8965 li
6.79452 79.8965 li
6.79452 80.4452 li
12.2304 80.4452 li
12.2304 80.7089 li
6.79452 80.7089 li
6.79452 81.2579 li
12.2304 81.2579 li
12.2304 81.522 li
6.79452 81.522 li
6.79452 82.0703 li
12.2304 82.0703 li
12.2304 85.0741 li
6.49159 85.0741 li
6.49159 88.4946 li
12.2304 88.4946 li
12.2304 89.9229 li
0 0 .054902 rgb
f
12.2304 82.0703 mo
6.79452 82.0703 li
6.79452 81.522 li
12.2304 81.522 li
12.2304 82.0703 li
.3912 82.0703 mo
0 82.0703 li
0 81.522 li
.3912 81.522 li
.3912 82.0703 li
12.2304 81.2579 mo
6.79452 81.2579 li
6.79452 80.7089 li
12.2304 80.7089 li
12.2304 81.2579 li
.3912 81.2579 mo
0 81.2579 li
0 80.7089 li
.3912 80.7089 li
.3912 81.2579 li
12.2304 80.4452 mo
6.79452 80.4452 li
6.79452 79.8965 li
12.2304 79.8965 li
12.2304 80.4452 li
.3912 80.4452 mo
0 80.4452 li
0 79.8965 li
.3912 79.8965 li
.3912 80.4452 li
12.2304 79.6324 mo
6.79452 79.6324 li
6.79452 79.0839 li
12.2304 79.0839 li
12.2304 79.6324 li
.3912 79.6324 mo
0 79.6324 li
0 79.0839 li
.3912 79.0839 li
.3912 79.6324 li
.3912 78.8197 mo
0 78.8197 li
0 78.2715 li
.3912 78.2715 li
.3912 78.8197 li
12.2304 78.3188 mo
6.79452 78.3188 li
6.79452 78.2715 li
12.2304 78.2715 li
12.2304 78.3188 li
.0509804 .0156863 .0745098 rgb
f
12.2304 78.857 mo
4.81202 78.857 li
4.81202 78.3188 li
6.79452 78.3188 li
6.79452 78.8197 li
12.2304 78.8197 li
12.2304 78.857 li
.509804 1 .992157 rgb
f
12.2304 78.8197 mo
6.79452 78.8197 li
6.79452 78.3188 li
12.2304 78.3188 li
12.2304 78.8197 li
.533333 1 .992157 rgb
f
22.5161 124.955 mo
12.2304 124.955 li
12.2304 117.821 li
22.5161 117.821 li
22.5161 124.955 li
22.5161 117.528 mo
12.2304 117.528 li
12.2304 108.569 li
22.5161 108.569 li
22.5161 117.528 li
0 0 0 rgb
f
12.2304 124.955 mo
0 124.955 li
0 117.821 li
12.2304 117.821 li
12.2304 124.955 li
12.2304 117.528 mo
0 117.528 li
0 108.569 li
12.2304 108.569 li
12.2304 117.528 li
f
64.75 124.955 mo
60.7805 124.955 li
60.4573 124.534 60.2651 124.007 60.2651 123.435 cv
60.2651 122.054 61.3842 120.935 62.7652 120.935 cv
64.146 120.935 65.2655 122.054 65.2655 123.435 cv
65.2655 124.007 65.0733 124.534 64.75 124.955 cv
.0666667 0 .0823529 rgb
f
78.5186 68.7964 mo
12.2304 68.7964 li
12.2304 58.602 li
78.5186 58.602 li
78.5186 68.7964 li
0 0 0 rgb
f
78.5186 58.602 mo
12.2304 58.602 li
12.2304 35.7037 li
78.5186 35.7037 li
78.5186 58.602 li
0 0 .0941176 rgb
f
12.2304 68.7964 mo
0 68.7964 li
0 58.602 li
12.2304 58.602 li
12.2304 68.7964 li
0 0 0 rgb
f
12.2304 58.602 mo
0 58.602 li
0 35.7037 li
12.2304 35.7037 li
12.2304 58.602 li
0 0 .0941176 rgb
f
78.5186 35.7037 mo
12.2304 35.7037 li
12.2304 31.2782 li
78.5186 31.2782 li
78.5186 35.7037 li
.0352941 .0352941 .188235 rgb
f
78.5186 31.2782 mo
12.2304 31.2782 li
12.2304 21.1611 li
68.7066 21.1611 li
68.7066 20.439 li
12.2304 20.439 li
12.2304 0 li
78.5186 0 li
78.5186 31.2782 li
.0392157 .0392157 .203922 rgb
f
12.2304 35.7037 mo
0 35.7037 li
0 31.2782 li
12.2304 31.2782 li
12.2304 35.7037 li
.0352941 .0352941 .188235 rgb
f
12.2304 31.2782 mo
0 31.2782 li
0 21.1611 li
12.2304 21.1611 li
12.2304 31.2782 li
12.2304 20.439 mo
0 20.439 li
0 0 li
12.2304 0 li
12.2304 20.439 li
7.45317 11.2916 mo
6.77678 11.2916 6.22853 11.8398 6.22853 12.5162 cv
6.22853 13.1924 6.77678 13.7406 7.45317 13.7406 cv
8.12933 13.7406 8.6778 13.1924 8.6778 12.5162 cv
8.6778 11.8398 8.12933 11.2916 7.45317 11.2916 cv
1.94286 11.2916 mo
1.26669 11.2916 .718222 11.8398 .718222 12.5162 cv
.718222 13.1924 1.26669 13.7406 1.94286 13.7406 cv
2.61924 13.7406 3.16749 13.1924 3.16749 12.5162 cv
3.16749 11.8398 2.61924 11.2916 1.94286 11.2916 cv
.0392157 .0392157 .203922 rgb
f
7.45317 13.7406 mo
6.77678 13.7406 6.22853 13.1924 6.22853 12.5162 cv
6.22853 11.8398 6.77678 11.2916 7.45317 11.2916 cv
8.12933 11.2916 8.6778 11.8398 8.6778 12.5162 cv
8.6778 13.1924 8.12933 13.7406 7.45317 13.7406 cv
1.94286 13.7406 mo
1.26669 13.7406 .718222 13.1924 .718222 12.5162 cv
.718222 11.8398 1.26669 11.2916 1.94286 11.2916 cv
2.61924 11.2916 3.16749 11.8398 3.16749 12.5162 cv
3.16749 13.1924 2.61924 13.7406 1.94286 13.7406 cv
.231373 .0588235 .231373 rgb
f
68.7066 21.1611 mo
12.2304 21.1611 li
12.2304 20.439 li
68.7066 20.439 li
68.7066 21.1611 li
.211765 .454902 1 rgb
f
12.2304 21.1611 mo
0 21.1611 li
0 20.439 li
12.2304 20.439 li
12.2304 21.1611 li
f
78.5186 88.3544 mo
40.9301 88.3544 li
40.9301 87.8158 li
78.5186 87.8158 li
78.5186 88.3544 li
1 .219608 .462745 rgb
f
432.2 89.9229 mo
323.01 89.9229 li
322.923 88.6206 321.84 87.5913 320.516 87.5913 cv
319.191 87.5913 318.108 88.6206 318.021 89.9229 cv
297.458 89.9229 li
298.273 89.5108 298.831 88.666 298.831 87.691 cv
298.831 86.3102 297.712 85.1909 296.331 85.1909 cv
294.95 85.1909 293.831 86.3102 293.831 87.691 cv
293.831 88.666 294.389 89.5108 295.204 89.9229 cv
278.26 89.9229 li
277.824 89.1896 277.024 88.6983 276.109 88.6983 cv
275.194 88.6983 274.394 89.1896 273.958 89.9229 cv
245.554 89.9229 li
245.554 72.0016 li
293.927 72.0016 li
293.865 72.2205 293.831 72.4518 293.831 72.6909 cv
293.831 74.0713 294.95 75.191 296.331 75.191 cv
297.712 75.191 298.831 74.0713 298.831 72.6909 cv
298.831 72.4518 298.798 72.2205 298.735 72.0016 cv
323.651 72.0016 li
323.651 72.5253 li
432.2 72.5253 li
432.2 89.9229 li
276.109 81.1983 mo
274.728 81.1983 273.608 82.3173 273.608 83.6981 cv
273.608 85.0785 274.728 86.1982 276.109 86.1982 cv
277.489 86.1982 278.609 85.0785 278.609 83.6981 cv
278.609 82.3173 277.489 81.1983 276.109 81.1983 cv
296.331 77.6908 mo
294.95 77.6908 293.831 78.8101 293.831 80.1909 cv
293.831 81.5713 294.95 82.691 296.331 82.691 cv
297.712 82.691 298.831 81.5713 298.831 80.1909 cv
298.831 78.8101 297.712 77.6908 296.331 77.6908 cv
276.109 73.6982 mo
274.728 73.6982 273.608 74.8173 273.608 76.1983 cv
273.608 77.5787 274.728 78.6982 276.109 78.6982 cv
277.489 78.6982 278.609 77.5787 278.609 76.1983 cv
278.609 74.8173 277.489 73.6982 276.109 73.6982 cv
0 0 .054902 rgb
f
432.2 72.5253 mo
323.651 72.5253 li
323.651 72.0016 li
432.2 72.0016 li
432.2 72.5253 li
.32549 .533333 1 rgb
f
40.9301 88.4946 mo
12.2304 88.4946 li
12.2304 88.3544 li
40.9301 88.3544 li
40.9301 88.4946 li
40.9301 87.8158 mo
12.2304 87.8158 li
12.2304 85.0741 li
40.9301 85.0741 li
40.9301 87.8158 li
.203922 .329412 .639216 rgb
f
12.2304 88.4946 mo
6.49159 88.4946 li
6.49159 85.0741 li
12.2304 85.0741 li
12.2304 87.8158 li
6.55227 87.8158 li
6.55227 88.3544 li
12.2304 88.3544 li
12.2304 88.4946 li
f
40.9301 88.3544 mo
12.2304 88.3544 li
12.2304 87.8158 li
40.9301 87.8158 li
40.9301 88.3544 li
1 .478431 .796078 rgb
f
12.2304 88.3544 mo
6.55227 88.3544 li
6.55227 87.8158 li
12.2304 87.8158 li
12.2304 88.3544 li
f
112.331 124.955 mo
85.5727 124.955 li
85.5727 102.887 li
211.847 102.887 li
211.847 116.673 li
112.331 116.673 li
112.331 124.955 li
127.517 108.539 mo
127.517 109.706 li
190.405 109.706 li
190.405 108.539 li
127.517 108.539 li
0 0 .0431373 rgb
f
350.161 103.026 mo
321.925 103.026 li
321.524 102.752 321.039 102.591 320.516 102.591 cv
319.993 102.591 319.507 102.752 319.106 103.026 cv
304.606 103.026 li
304.606 97.7607 li
318.021 97.7607 li
318.108 99.0621 319.192 100.091 320.516 100.091 cv
321.84 100.091 322.923 99.0621 323.01 97.7607 cv
350.161 97.7607 li
350.161 103.026 li
.376471 .568627 1 rgb
f
245.554 102.887 mo
211.847 102.887 li
211.847 89.9229 li
245.554 89.9229 li
245.554 102.887 li
85.5727 102.887 mo
78.5186 102.887 li
78.5186 89.9229 li
85.5727 89.9229 li
85.5727 102.887 li
210.255 85.165 mo
168.66 85.165 li
168.66 72.0016 li
78.5186 72.0016 li
78.5186 71.1699 li
79.1045 71.1699 li
79.1045 71.107 li
147.012 71.107 li
147.012 58.602 li
222.214 58.602 li
222.214 71.107 li
245.554 71.107 li
245.554 72.0016 li
210.255 72.0016 li
210.255 85.165 li
0 0 .101961 rgb
f
222.214 58.602 mo
147.012 58.602 li
147.012 35.7037 li
184.88 35.7037 li
184.88 33.5943 li
188.948 33.5943 li
188.948 31.4088 li
222.214 31.4088 li
222.214 35.8145 li
183.126 35.8145 li
183.126 41.0801 li
183.881 41.0801 li
183.881 41.5445 li
188.948 41.5445 li
188.948 41.0801 li
222.214 41.0801 li
222.214 58.602 li
176.375 36.1783 mo
176.375 41.5445 li
181.441 41.5445 li
181.441 36.1783 li
176.375 36.1783 li
168.868 36.1783 mo
168.868 41.5445 li
173.935 41.5445 li
173.935 36.1783 li
168.868 36.1783 li
0 0 .188235 rgb
f
222.214 26.4752 mo
184.88 26.4752 li
184.88 25.644 li
188.948 25.644 li
188.948 21.1421 li
222.214 21.1421 li
222.214 26.4752 li
.00392157 .00392157 .203922 rgb
f
222.214 31.4088 mo
188.948 31.4088 li
188.948 31.2782 li
222.214 31.2782 li
222.214 31.4088 li
0 .254902 .862745 rgb
f
222.214 31.2782 mo
188.948 31.2782 li
188.948 28.2279 li
184.88 28.2279 li
184.88 26.4752 li
222.214 26.4752 li
222.214 31.2782 li
.00392157 .258824 .866667 rgb
f
85.5727 89.9229 mo
78.5186 89.9229 li
78.5186 88.3544 li
85.5727 88.3544 li
85.5727 89.9229 li
85.5727 87.8158 mo
78.5186 87.8158 li
78.5186 78.857 li
124.377 78.857 li
124.377 78.3188 li
78.5186 78.3188 li
78.5186 72.0016 li
168.66 72.0016 li
168.66 85.165 li
85.5727 85.165 li
85.5727 87.8158 li
0 0 .152941 rgb
f
124.377 78.857 mo
78.5186 78.857 li
78.5186 78.3188 li
124.377 78.3188 li
124.377 78.857 li
.509804 1 .992157 rgb
f
147.012 71.107 mo
79.1045 71.107 li
79.1045 68.7964 li
78.5186 68.7964 li
78.5186 58.602 li
147.012 58.602 li
147.012 71.107 li
0 0 .101961 rgb
f
147.012 58.602 mo
78.5186 58.602 li
78.5186 35.7037 li
147.012 35.7037 li
147.012 58.602 li
0 0 .188235 rgb
f
184.88 35.7037 mo
147.012 35.7037 li
147.012 31.4088 li
168.868 31.4088 li
168.868 33.5943 li
173.935 33.5943 li
173.935 31.4088 li
176.375 31.4088 li
176.375 33.5943 li
181.441 33.5943 li
181.441 31.4088 li
183.881 31.4088 li
183.881 33.5943 li
184.88 33.5943 li
184.88 35.7037 li
.0352941 .0352941 .270588 rgb
f
184.88 26.4752 mo
147.012 26.4752 li
147.012 0 li
171.444 0 li
171.444 4.37701 li
168.868 4.37701 li
168.868 9.7432 li
171.444 9.7432 li
171.444 12.3272 li
168.868 12.3272 li
168.868 17.6938 li
171.444 17.6938 li
171.444 20.2773 li
168.868 20.2773 li
168.868 25.644 li
173.935 25.644 li
173.935 21.1421 li
176.375 21.1421 li
176.375 25.644 li
181.441 25.644 li
181.441 21.1421 li
183.881 21.1421 li
183.881 25.644 li
184.88 25.644 li
184.88 26.4752 li
.0392157 .0392157 .286274 rgb
f
183.881 31.4088 mo
181.441 31.4088 li
181.441 31.2782 li
183.881 31.2782 li
183.881 31.4088 li
176.375 31.4088 mo
173.935 31.4088 li
173.935 31.2782 li
176.375 31.2782 li
176.375 31.4088 li
168.868 31.4088 mo
147.012 31.4088 li
147.012 31.2782 li
168.868 31.2782 li
168.868 31.4088 li
.0352941 .282353 .878431 rgb
f
183.881 31.2782 mo
181.441 31.2782 li
181.441 28.2279 li
176.375 28.2279 li
176.375 31.2782 li
173.935 31.2782 li
173.935 28.2279 li
168.868 28.2279 li
168.868 31.2782 li
147.012 31.2782 li
147.012 26.4752 li
184.88 26.4752 li
184.88 28.2279 li
183.881 28.2279 li
183.881 31.2782 li
.0392157 .286274 .878431 rgb
f
147.012 35.7037 mo
78.5186 35.7037 li
78.5186 31.2782 li
130.261 31.2782 li
130.261 31.4088 li
147.012 31.4088 li
147.012 35.7037 li
.0352941 .0352941 .270588 rgb
f
130.261 31.2782 mo
78.5186 31.2782 li
78.5186 0 li
147.012 0 li
147.012 26.4752 li
130.261 26.4752 li
130.261 31.2782 li
.0392157 .0392157 .286274 rgb
f
147.012 31.4088 mo
130.261 31.4088 li
130.261 31.2782 li
147.012 31.2782 li
147.012 31.4088 li
.0352941 .282353 .878431 rgb
f
147.012 31.2782 mo
130.261 31.2782 li
130.261 26.4752 li
147.012 26.4752 li
147.012 31.2782 li
.0392157 .286274 .878431 rgb
f
222.214 21.1421 mo
188.948 21.1421 li
188.948 20.2773 li
184.88 20.2773 li
184.88 17.6938 li
188.948 17.6938 li
188.948 12.3272 li
184.88 12.3272 li
184.88 9.7432 li
188.948 9.7432 li
188.948 4.37701 li
184.88 4.37701 li
184.88 0 li
222.214 0 li
222.214 11.9419 li
200.798 11.9419 li
200.798 12.6641 li
222.214 12.6641 li
222.214 21.1421 li
.00392157 .00392157 .203922 rgb
f
183.881 21.1421 mo
181.441 21.1421 li
181.441 20.2773 li
176.375 20.2773 li
176.375 21.1421 li
173.935 21.1421 li
173.935 20.2773 li
171.444 20.2773 li
171.444 17.6938 li
173.935 17.6938 li
173.935 12.3272 li
171.444 12.3272 li
171.444 9.7432 li
173.935 9.7432 li
173.935 4.37701 li
171.444 4.37701 li
171.444 0 li
184.88 0 li
184.88 4.37701 li
183.881 4.37701 li
183.881 9.7432 li
184.88 9.7432 li
184.88 12.3272 li
183.881 12.3272 li
183.881 17.6938 li
184.88 17.6938 li
184.88 20.2773 li
183.881 20.2773 li
183.881 21.1421 li
176.375 12.3272 mo
176.375 17.6938 li
181.441 17.6938 li
181.441 12.3272 li
176.375 12.3272 li
176.375 4.37701 mo
176.375 9.7432 li
181.441 9.7432 li
181.441 4.37701 li
176.375 4.37701 li
.0392157 .0392157 .286274 rgb
f
222.214 12.6641 mo
200.798 12.6641 li
200.798 11.9419 li
222.214 11.9419 li
222.214 12.6641 li
.12549 .847059 .87451 rgb
f
85.5727 88.3544 mo
78.5186 88.3544 li
78.5186 87.8158 li
85.5727 87.8158 li
85.5727 88.3544 li
1 .219608 .517647 rgb
f
245.554 89.9229 mo
211.847 89.9229 li
211.847 85.165 li
210.255 85.165 li
210.255 72.0016 li
245.554 72.0016 li
245.554 89.9229 li
0 0 .152941 rgb
f
211.847 102.887 mo
85.5727 102.887 li
85.5727 89.9229 li
168.66 89.9229 li
168.66 85.165 li
210.255 85.165 li
210.255 89.9229 li
211.847 89.9229 li
211.847 102.887 li
0 0 .141176 rgb
f
168.66 89.9229 mo
85.5727 89.9229 li
85.5727 88.3544 li
126.117 88.3544 li
126.117 87.8158 li
85.5727 87.8158 li
85.5727 85.165 li
168.66 85.165 li
168.66 89.9229 li
0 0 .188235 rgb
f
126.117 88.3544 mo
85.5727 88.3544 li
85.5727 87.8158 li
126.117 87.8158 li
126.117 88.3544 li
1 .219608 .537255 rgb
f
211.847 89.9229 mo
210.255 89.9229 li
210.255 85.165 li
211.847 85.165 li
211.847 89.9229 li
0 0 .188235 rgb
f
188.948 41.5445 mo
183.881 41.5445 li
183.881 41.0801 li
188.948 41.0801 li
188.948 41.5445 li
181.441 41.5445 mo
176.375 41.5445 li
176.375 36.1783 li
181.441 36.1783 li
181.441 41.5445 li
173.935 41.5445 mo
168.868 41.5445 li
168.868 36.1783 li
173.935 36.1783 li
173.935 41.5445 li
188.948 33.5943 mo
184.88 33.5943 li
184.88 31.4088 li
188.948 31.4088 li
188.948 33.5943 li
.145098 .00392157 .207843 rgb
f
188.948 31.4088 mo
184.88 31.4088 li
184.88 31.2782 li
188.948 31.2782 li
188.948 31.4088 li
.145098 .258824 .866667 rgb
f
188.948 31.2782 mo
184.88 31.2782 li
184.88 28.2279 li
188.948 28.2279 li
188.948 31.2782 li
.14902 .262745 .870588 rgb
f
184.88 33.5943 mo
183.881 33.5943 li
183.881 31.4088 li
184.88 31.4088 li
184.88 33.5943 li
.176471 .0392157 .290196 rgb
f
184.88 31.4088 mo
183.881 31.4088 li
183.881 31.2782 li
184.88 31.2782 li
184.88 31.4088 li
.176471 .286274 .878431 rgb
f
184.88 31.2782 mo
183.881 31.2782 li
183.881 28.2279 li
184.88 28.2279 li
184.88 31.2782 li
.176471 .290196 .882353 rgb
f
181.441 33.5943 mo
176.375 33.5943 li
176.375 31.4088 li
181.441 31.4088 li
181.441 33.5943 li
.176471 .0392157 .290196 rgb
f
181.441 31.4088 mo
176.375 31.4088 li
176.375 31.2782 li
181.441 31.2782 li
181.441 31.4088 li
.176471 .286274 .878431 rgb
f
181.441 31.2782 mo
176.375 31.2782 li
176.375 28.2279 li
181.441 28.2279 li
181.441 31.2782 li
.176471 .290196 .882353 rgb
f
173.935 33.5943 mo
168.868 33.5943 li
168.868 31.4088 li
173.935 31.4088 li
173.935 33.5943 li
.176471 .0392157 .290196 rgb
f
173.935 31.4088 mo
168.868 31.4088 li
168.868 31.2782 li
173.935 31.2782 li
173.935 31.4088 li
.176471 .286274 .878431 rgb
f
173.935 31.2782 mo
168.868 31.2782 li
168.868 28.2279 li
173.935 28.2279 li
173.935 31.2782 li
.176471 .290196 .882353 rgb
f
188.948 25.644 mo
184.88 25.644 li
184.88 21.1421 li
188.948 21.1421 li
188.948 25.644 li
.14902 .00784314 .223529 rgb
f
184.88 25.644 mo
183.881 25.644 li
183.881 21.1421 li
184.88 21.1421 li
184.88 25.644 li
.176471 .0431373 .301961 rgb
f
188.948 21.1421 mo
184.88 21.1421 li
184.88 20.2773 li
188.948 20.2773 li
188.948 21.1421 li
.14902 .00784314 .223529 rgb
f
184.88 21.1421 mo
183.881 21.1421 li
183.881 20.2773 li
184.88 20.2773 li
184.88 21.1421 li
.176471 .0431373 .301961 rgb
f
181.441 25.644 mo
176.375 25.644 li
176.375 21.1421 li
181.441 21.1421 li
181.441 25.644 li
f
181.441 21.1421 mo
176.375 21.1421 li
176.375 20.2773 li
181.441 20.2773 li
181.441 21.1421 li
f
173.935 25.644 mo
168.868 25.644 li
168.868 20.2773 li
171.444 20.2773 li
171.444 21.1421 li
173.935 21.1421 li
173.935 25.644 li
f
173.935 21.1421 mo
171.444 21.1421 li
171.444 20.2773 li
173.935 20.2773 li
173.935 21.1421 li
f
188.948 17.6938 mo
184.88 17.6938 li
184.88 12.3272 li
188.948 12.3272 li
188.948 17.6938 li
.14902 .00784314 .223529 rgb
f
184.88 17.6938 mo
183.881 17.6938 li
183.881 12.3272 li
184.88 12.3272 li
184.88 17.6938 li
181.441 17.6938 mo
176.375 17.6938 li
176.375 12.3272 li
181.441 12.3272 li
181.441 17.6938 li
.176471 .0431373 .301961 rgb
f
171.444 17.6938 mo
168.868 17.6938 li
168.868 12.3272 li
171.444 12.3272 li
171.444 17.6938 li
f
173.935 17.6938 mo
171.444 17.6938 li
171.444 12.3272 li
173.935 12.3272 li
173.935 17.6938 li
f
188.948 9.7432 mo
184.88 9.7432 li
184.88 4.37701 li
188.948 4.37701 li
188.948 9.7432 li
.14902 .00784314 .223529 rgb
f
184.88 9.7432 mo
183.881 9.7432 li
183.881 4.37701 li
184.88 4.37701 li
184.88 9.7432 li
181.441 9.7432 mo
176.375 9.7432 li
176.375 4.37701 li
181.441 4.37701 li
181.441 9.7432 li
.176471 .0431373 .301961 rgb
f
171.444 9.7432 mo
168.868 9.7432 li
168.868 4.37701 li
171.444 4.37701 li
171.444 9.7432 li
f
173.935 9.7432 mo
171.444 9.7432 li
171.444 4.37701 li
173.935 4.37701 li
173.935 9.7432 li
f
222.214 41.0801 mo
188.948 41.0801 li
188.948 36.1783 li
183.881 36.1783 li
183.881 41.0801 li
183.126 41.0801 li
183.126 35.8145 li
222.214 35.8145 li
222.214 41.0801 li
0 1 .984314 rgb
f
188.948 41.0801 mo
183.881 41.0801 li
183.881 36.1783 li
188.948 36.1783 li
188.948 41.0801 li
.145098 1 .984314 rgb
f
56.5113 117.821 mo
22.5161 117.821 li
22.5161 117.528 li
56.5113 117.528 li
56.5113 117.821 li
.901961 .184314 .376471 rgb
f
22.5161 117.821 mo
12.2304 117.821 li
12.2304 117.528 li
22.5161 117.528 li
22.5161 117.821 li
f
12.2304 117.821 mo
0 117.821 li
0 117.528 li
12.2304 117.528 li
12.2304 117.821 li
f
271.927 124.955 mo
211.847 124.955 li
211.847 116.673 li
271.927 116.673 li
271.927 120.95 li
269.653 120.95 li
269.653 121.249 li
271.927 121.249 li
271.927 121.393 li
269.653 121.393 li
269.653 121.691 li
271.927 121.691 li
271.927 121.836 li
269.653 121.836 li
269.653 122.134 li
271.927 122.134 li
271.927 122.278 li
269.653 122.278 li
269.653 122.577 li
271.927 122.577 li
271.927 122.721 li
269.653 122.721 li
269.653 123.019 li
271.927 123.019 li
271.927 124.955 li
0 0 0 rgb
f
211.847 124.955 mo
112.331 124.955 li
112.331 116.673 li
211.847 116.673 li
211.847 124.955 li
0 0 .0431373 rgb
f
271.927 123.019 mo
269.653 123.019 li
269.653 122.721 li
271.927 122.721 li
271.927 123.019 li
271.927 122.577 mo
269.653 122.577 li
269.653 122.278 li
271.927 122.278 li
271.927 122.577 li
271.927 122.134 mo
269.653 122.134 li
269.653 121.836 li
271.927 121.836 li
271.927 122.134 li
271.927 121.691 mo
269.653 121.691 li
269.653 121.393 li
271.927 121.393 li
271.927 121.691 li
271.927 121.249 mo
269.653 121.249 li
269.653 120.95 li
271.927 120.95 li
271.927 121.249 li
.129412 0 .0196078 rgb
f
480 108.569 mo
432.2 108.569 li
432.2 89.9229 li
480 89.9229 li
480 108.569 li
437.154 95.4414 mo
437.154 100.407 li
448.561 100.407 li
448.561 95.4414 li
437.154 95.4414 li
0 0 0 rgb
f
480 72.0016 mo
459.76 72.0016 li
459.76 71.107 li
480 71.107 li
480 72.0016 li
457.939 72.0016 mo
457.062 72.0016 li
457.062 71.107 li
457.939 71.107 li
457.939 72.0016 li
455.241 72.0016 mo
454.636 72.0016 li
454.636 71.107 li
455.241 71.107 li
455.241 72.0016 li
438.265 71.9873 mo
432.2 71.9873 li
432.2 71.107 li
438.265 71.107 li
438.265 71.9873 li
f
438.265 72.0016 mo
432.2 72.0016 li
432.2 71.9873 li
438.265 71.9873 li
438.265 72.0016 li
.32549 .533333 1 rgb
f
480 89.9229 mo
432.2 89.9229 li
432.2 72.5253 li
438.265 72.5253 li
438.265 73.3232 li
452.544 73.3232 li
452.544 73.8467 li
454.364 73.8467 li
454.364 73.3232 li
454.636 73.3232 li
454.636 72.0016 li
455.241 72.0016 li
455.241 73.8467 li
457.062 73.8467 li
457.062 72.0016 li
457.939 72.0016 li
457.939 73.8467 li
459.76 73.8467 li
459.76 72.0016 li
480 72.0016 li
480 78.2715 li
467.092 78.2715 li
467.092 78.8197 li
480 78.8197 li
480 79.0839 li
467.092 79.0839 li
467.092 79.6324 li
480 79.6324 li
480 79.8965 li
467.092 79.8965 li
467.092 80.4452 li
480 80.4452 li
480 80.7089 li
467.092 80.7089 li
467.092 81.2579 li
480 81.2579 li
480 81.522 li
467.092 81.522 li
467.092 82.0703 li
480 82.0703 li
480 89.9229 li
447.389 81.522 mo
447.389 82.0703 li
460.688 82.0703 li
460.688 81.522 li
447.389 81.522 li
447.389 80.7089 mo
447.389 81.2579 li
460.688 81.2579 li
460.688 80.7089 li
447.389 80.7089 li
447.389 79.8965 mo
447.389 80.4452 li
460.688 80.4452 li
460.688 79.8965 li
447.389 79.8965 li
447.389 79.0839 mo
447.389 79.6324 li
460.688 79.6324 li
460.688 79.0839 li
447.389 79.0839 li
447.389 78.2715 mo
447.389 78.8197 li
460.688 78.8197 li
460.688 78.2715 li
447.389 78.2715 li
0 0 .054902 rgb
f
438.265 72.5253 mo
432.2 72.5253 li
432.2 72.0016 li
438.265 72.0016 li
438.265 72.5253 li
.32549 .533333 1 rgb
f
480 82.0703 mo
467.092 82.0703 li
467.092 81.522 li
480 81.522 li
480 82.0703 li
460.688 82.0703 mo
447.389 82.0703 li
447.389 81.522 li
460.688 81.522 li
460.688 82.0703 li
.0509804 .0156863 .0745098 rgb
f
480 81.2579 mo
467.092 81.2579 li
467.092 80.7089 li
480 80.7089 li
480 81.2579 li
460.688 81.2579 mo
447.389 81.2579 li
447.389 80.7089 li
460.688 80.7089 li
460.688 81.2579 li
f
480 80.4452 mo
467.092 80.4452 li
467.092 79.8965 li
480 79.8965 li
480 80.4452 li
460.688 80.4452 mo
447.389 80.4452 li
447.389 79.8965 li
460.688 79.8965 li
460.688 80.4452 li
f
480 79.6324 mo
467.092 79.6324 li
467.092 79.0839 li
480 79.0839 li
480 79.6324 li
460.688 79.6324 mo
447.389 79.6324 li
447.389 79.0839 li
460.688 79.0839 li
460.688 79.6324 li
f
480 78.8197 mo
467.092 78.8197 li
467.092 78.2715 li
480 78.2715 li
480 78.8197 li
460.688 78.8197 mo
447.389 78.8197 li
447.389 78.2715 li
460.688 78.2715 li
460.688 78.8197 li
f
459.76 72.0016 mo
457.939 72.0016 li
457.939 71.107 li
459.76 71.107 li
459.76 72.0016 li
.12549 .0313725 .0431373 rgb
f
459.76 73.8467 mo
457.939 73.8467 li
457.939 72.0016 li
459.76 72.0016 li
459.76 73.8467 li
.12549 .0313725 .0980392 rgb
f
457.062 72.0016 mo
455.241 72.0016 li
455.241 71.107 li
457.062 71.107 li
457.062 72.0016 li
.12549 .0313725 .0431373 rgb
f
457.062 73.8467 mo
455.241 73.8467 li
455.241 72.0016 li
457.062 72.0016 li
457.062 73.8467 li
454.364 73.8467 mo
452.544 73.8467 li
452.544 73.3232 li
454.364 73.3232 li
454.364 73.8467 li
.12549 .0313725 .0980392 rgb
f
454.636 72.0016 mo
454.364 72.0016 li
454.364 71.107 li
454.636 71.107 li
454.636 72.0016 li
452.544 72.0016 mo
443.217 72.0016 li
443.217 71.9873 li
438.265 71.9873 li
438.265 71.107 li
452.544 71.107 li
452.544 72.0016 li
.0156863 1 .984314 rgb
f
443.217 72.0016 mo
438.265 72.0016 li
438.265 71.9873 li
443.217 71.9873 li
443.217 72.0016 li
.337255 1 1 rgb
f
454.636 73.3232 mo
454.364 73.3232 li
454.364 72.0016 li
454.636 72.0016 li
454.636 73.3232 li
452.544 73.3232 mo
438.265 73.3232 li
438.265 72.5253 li
443.217 72.5253 li
443.217 72.0016 li
452.544 72.0016 li
452.544 73.3232 li
.0156863 1 .984314 rgb
f
443.217 72.5253 mo
438.265 72.5253 li
438.265 72.0016 li
443.217 72.0016 li
443.217 72.5253 li
.337255 1 1 rgb
f
454.364 72.0016 mo
452.544 72.0016 li
452.544 71.107 li
454.364 71.107 li
454.364 72.0016 li
.137255 1 .984314 rgb
f
454.364 73.3232 mo
452.544 73.3232 li
452.544 72.0016 li
454.364 72.0016 li
454.364 73.3232 li
f
269.388 172.1 mo
244.237 172.1 li
244.237 169.049 li
269.388 169.049 li
269.388 172.1 li
269.388 164.399 mo
244.237 164.399 li
244.237 139.005 li
269.388 139.005 li
269.388 164.399 li
240.334 136.986 mo
211.847 136.986 li
211.847 126.434 li
271.927 126.434 li
271.927 135.416 li
240.334 135.416 li
240.334 136.986 li
85.5727 136.986 mo
70.5593 136.986 li
70.1109 136.315 69.3463 135.874 68.4786 135.874 cv
67.6111 135.874 66.8466 136.315 66.3982 136.986 cv
64.8032 136.986 li
64.35 136.35 63.6061 135.935 62.7652 135.935 cv
61.9243 135.935 61.1805 136.35 60.7273 136.986 cv
22.5161 136.986 li
22.5161 124.955 li
60.7805 124.955 li
61.2374 125.551 61.9564 125.935 62.7652 125.935 cv
63.574 125.935 64.293 125.551 64.75 124.955 cv
85.5727 124.955 li
85.5727 126.148 li
26.0097 126.148 li
26.0097 126.442 li
85.5727 126.442 li
85.5727 136.986 li
62.7652 128.435 mo
61.3842 128.435 60.2651 129.554 60.2651 130.935 cv
60.2651 132.315 61.3842 133.435 62.7652 133.435 cv
64.146 133.435 65.2655 132.315 65.2655 130.935 cv
65.2655 129.554 64.146 128.435 62.7652 128.435 cv
0 0 0 rgb
f
85.5727 126.442 mo
26.0097 126.442 li
26.0097 126.148 li
85.5727 126.148 li
85.5727 126.442 li
0 .305882 1 rgb
f
22.5161 136.986 mo
12.2304 136.986 li
12.2304 124.955 li
22.5161 124.955 li
22.5161 136.986 li
0 0 0 rgb
f
12.2304 136.986 mo
0 136.986 li
0 124.955 li
12.2304 124.955 li
12.2304 136.986 li
f
269.388 172.157 mo
244.237 172.157 li
244.237 172.1 li
269.388 172.1 li
269.388 172.157 li
.133333 .27451 .6 rgb
f
244.237 172.1 mo
243.819 172.1 li
243.819 169.049 li
244.237 169.049 li
244.237 172.1 li
244.237 164.399 mo
243.819 164.399 li
243.819 139.005 li
244.237 139.005 li
244.237 164.399 li
0 0 .0941176 rgb
f
244.237 172.157 mo
243.819 172.157 li
243.819 172.1 li
244.237 172.1 li
244.237 172.157 li
.133333 .27451 .639216 rgb
f
64.8032 136.986 mo
60.7273 136.986 li
61.1805 136.35 61.9243 135.935 62.7652 135.935 cv
63.6061 135.935 64.35 136.35 64.8032 136.986 cv
62.7652 133.435 mo
61.3842 133.435 60.2651 132.315 60.2651 130.935 cv
60.2651 129.554 61.3842 128.435 62.7652 128.435 cv
64.146 128.435 65.2655 129.554 65.2655 130.935 cv
65.2655 132.315 64.146 133.435 62.7652 133.435 cv
62.7652 125.935 mo
61.9564 125.935 61.2374 125.551 60.7805 124.955 cv
64.75 124.955 li
64.293 125.551 63.574 125.935 62.7652 125.935 cv
.0666667 0 .0823529 rgb
f
211.847 136.986 mo
143.545 136.986 li
143.545 135.338 li
139.715 135.338 li
139.715 136.986 li
137.87 136.986 li
137.87 135.338 li
134.04 135.338 li
134.04 136.986 li
132.195 136.986 li
132.195 135.338 li
128.365 135.338 li
128.365 136.986 li
85.5727 136.986 li
85.5727 126.442 li
98.3276 126.442 li
98.3276 128.732 li
132.766 128.732 li
132.766 126.434 li
134.04 126.434 li
134.04 128.496 li
137.87 128.496 li
137.87 126.434 li
139.715 126.434 li
139.715 128.496 li
143.545 128.496 li
143.545 126.434 li
211.847 126.434 li
211.847 136.986 li
139.715 130.174 mo
139.715 133.66 li
143.545 133.66 li
143.545 130.174 li
139.715 130.174 li
134.04 130.174 mo
134.04 133.66 li
137.87 133.66 li
137.87 130.174 li
134.04 130.174 li
128.365 130.174 mo
128.365 133.66 li
132.195 133.66 li
132.195 130.174 li
128.365 130.174 li
98.3276 126.148 mo
85.5727 126.148 li
85.5727 124.955 li
112.331 124.955 li
112.331 125.311 li
98.3276 125.311 li
98.3276 126.148 li
0 0 .0431373 rgb
f
98.3276 126.442 mo
85.5727 126.442 li
85.5727 126.148 li
98.3276 126.148 li
98.3276 126.442 li
0 .305882 1 rgb
f
143.545 136.986 mo
139.715 136.986 li
139.715 135.338 li
143.545 135.338 li
143.545 136.986 li
137.87 136.986 mo
134.04 136.986 li
134.04 135.338 li
137.87 135.338 li
137.87 136.986 li
132.195 136.986 mo
128.365 136.986 li
128.365 135.338 li
132.195 135.338 li
132.195 136.986 li
143.545 133.66 mo
139.715 133.66 li
139.715 130.174 li
143.545 130.174 li
143.545 133.66 li
137.87 133.66 mo
134.04 133.66 li
134.04 130.174 li
137.87 130.174 li
137.87 133.66 li
132.195 133.66 mo
128.365 133.66 li
128.365 130.174 li
132.195 130.174 li
132.195 133.66 li
143.545 128.496 mo
139.715 128.496 li
139.715 126.434 li
143.545 126.434 li
143.545 128.496 li
137.87 128.496 mo
134.04 128.496 li
134.04 126.434 li
137.87 126.434 li
137.87 128.496 li
.0666667 .0156863 .0666667 rgb
f
132.766 128.732 mo
98.3276 128.732 li
98.3276 126.442 li
105.333 126.442 li
105.333 126.148 li
98.3276 126.148 li
98.3276 125.311 li
112.331 125.311 li
112.331 126.434 li
128.365 126.434 li
128.365 128.496 li
132.195 128.496 li
132.195 126.434 li
132.766 126.434 li
132.766 128.732 li
0 .933333 .921569 rgb
f
105.333 126.442 mo
98.3276 126.442 li
98.3276 126.148 li
105.333 126.148 li
105.333 126.442 li
0 .952941 1 rgb
f
132.195 128.496 mo
128.365 128.496 li
128.365 126.434 li
132.195 126.434 li
132.195 128.496 li
.0666667 .933333 .921569 rgb
f
271.927 126.434 mo
211.847 126.434 li
211.847 124.955 li
271.927 124.955 li
271.927 126.434 li
0 0 0 rgb
f
211.847 126.434 mo
143.545 126.434 li
143.545 125.01 li
139.715 125.01 li
139.715 126.434 li
137.87 126.434 li
137.87 125.01 li
134.04 125.01 li
134.04 126.434 li
132.766 126.434 li
132.766 125.311 li
132.195 125.311 li
132.195 125.01 li
128.365 125.01 li
128.365 125.311 li
112.331 125.311 li
112.331 124.955 li
211.847 124.955 li
211.847 126.434 li
0 0 .0431373 rgb
f
143.545 126.434 mo
139.715 126.434 li
139.715 125.01 li
143.545 125.01 li
143.545 126.434 li
137.87 126.434 mo
134.04 126.434 li
134.04 125.01 li
137.87 125.01 li
137.87 126.434 li
132.195 125.311 mo
128.365 125.311 li
128.365 125.01 li
132.195 125.01 li
132.195 125.311 li
.0666667 .0156863 .0666667 rgb
f
132.766 126.434 mo
132.195 126.434 li
132.195 125.311 li
132.766 125.311 li
132.766 126.434 li
128.365 126.434 mo
112.331 126.434 li
112.331 125.311 li
128.365 125.311 li
128.365 126.434 li
0 .933333 .921569 rgb
f
132.195 126.434 mo
128.365 126.434 li
128.365 125.311 li
132.195 125.311 li
132.195 126.434 li
.0666667 .933333 .921569 rgb
f
190.405 109.706 mo
127.517 109.706 li
127.517 108.539 li
190.405 108.539 li
190.405 109.706 li
0 .305882 1 rgb
f
432.2 135.391 mo
422.367 135.391 li
422.367 108.569 li
432.2 108.569 li
432.2 135.391 li
380.541 116.673 mo
271.927 116.673 li
271.927 108.569 li
275.314 108.569 li
275.564 108.653 275.831 108.698 276.109 108.698 cv
276.387 108.698 276.654 108.653 276.904 108.569 cv
294.428 108.569 li
294.056 109.006 293.831 109.572 293.831 110.191 cv
293.831 111.572 294.95 112.691 296.331 112.691 cv
297.712 112.691 298.831 111.572 298.831 110.191 cv
298.831 109.572 298.606 109.006 298.234 108.569 cv
380.541 108.569 li
380.541 116.673 li
276.109 111.198 mo
274.728 111.198 273.608 112.317 273.608 113.698 cv
273.608 115.079 274.728 116.198 276.109 116.198 cv
277.489 116.198 278.609 115.079 278.609 113.698 cv
278.609 112.317 277.489 111.198 276.109 111.198 cv
320.516 110.091 mo
319.135 110.091 318.016 111.21 318.016 112.591 cv
318.016 113.972 319.135 115.091 320.516 115.091 cv
321.897 115.091 323.016 113.972 323.016 112.591 cv
323.016 111.21 321.897 110.091 320.516 110.091 cv
0 0 0 rgb
f
380.541 124.955 mo
377.79 124.955 li
377.79 123.936 li
370.795 123.936 li
370.795 124.955 li
367.427 124.955 li
367.427 123.936 li
360.432 123.936 li
360.432 124.955 li
357.064 124.955 li
357.064 123.936 li
350.068 123.936 li
350.068 124.955 li
271.927 124.955 li
271.927 123.019 li
278.477 123.019 li
278.477 122.721 li
271.927 122.721 li
271.927 122.577 li
278.477 122.577 li
278.477 122.278 li
271.927 122.278 li
271.927 122.134 li
278.477 122.134 li
278.477 121.836 li
271.927 121.836 li
271.927 121.691 li
278.477 121.691 li
278.477 121.393 li
271.927 121.393 li
271.927 121.249 li
278.477 121.249 li
278.477 120.95 li
271.927 120.95 li
271.927 116.673 li
380.541 116.673 li
380.541 124.955 li
295.219 122.993 mo
295.219 123.443 li
358.106 123.443 li
358.106 122.993 li
360.432 122.993 li
360.432 123.363 li
367.427 123.363 li
367.427 122.993 li
370.795 122.993 li
370.795 123.363 li
377.79 123.363 li
377.79 122.173 li
370.795 122.173 li
370.795 122.7 li
367.427 122.7 li
367.427 122.173 li
360.432 122.173 li
360.432 122.7 li
358.106 122.7 li
358.106 122.276 li
357.064 122.276 li
357.064 122.173 li
350.068 122.173 li
350.068 122.276 li
321.732 122.276 li
322.498 121.849 323.016 121.031 323.016 120.091 cv
323.016 118.711 321.897 117.591 320.516 117.591 cv
319.135 117.591 318.016 118.711 318.016 120.091 cv
318.016 121.031 318.533 121.849 319.299 122.276 cv
295.219 122.276 li
295.219 122.7 li
294.481 122.7 li
294.481 122.993 li
295.219 122.993 li
282.725 122.721 mo
282.725 123.019 li
291.548 123.019 li
291.548 122.721 li
282.725 122.721 li
282.725 122.278 mo
282.725 122.577 li
291.548 122.577 li
291.548 122.278 li
282.725 122.278 li
295.796 121.836 mo
295.796 122.134 li
304.619 122.134 li
304.619 121.836 li
295.796 121.836 li
282.725 121.836 mo
282.725 122.134 li
291.548 122.134 li
291.548 121.836 li
282.725 121.836 li
295.796 121.393 mo
295.796 121.691 li
304.619 121.691 li
304.619 121.393 li
295.796 121.393 li
282.725 121.393 mo
282.725 121.691 li
291.548 121.691 li
291.548 121.393 li
282.725 121.393 li
295.796 120.95 mo
295.796 121.249 li
304.619 121.249 li
304.619 120.95 li
295.796 120.95 li
282.725 120.95 mo
282.725 121.249 li
291.548 121.249 li
291.548 120.95 li
282.725 120.95 li
f
291.548 123.019 mo
282.725 123.019 li
282.725 122.721 li
291.548 122.721 li
291.548 123.019 li
278.477 123.019 mo
271.927 123.019 li
271.927 122.721 li
278.477 122.721 li
278.477 123.019 li
291.548 122.577 mo
282.725 122.577 li
282.725 122.278 li
291.548 122.278 li
291.548 122.577 li
278.477 122.577 mo
271.927 122.577 li
271.927 122.278 li
278.477 122.278 li
278.477 122.577 li
304.619 122.134 mo
295.796 122.134 li
295.796 121.836 li
304.619 121.836 li
304.619 122.134 li
291.548 122.134 mo
282.725 122.134 li
282.725 121.836 li
291.548 121.836 li
291.548 122.134 li
278.477 122.134 mo
271.927 122.134 li
271.927 121.836 li
278.477 121.836 li
278.477 122.134 li
304.619 121.691 mo
295.796 121.691 li
295.796 121.393 li
304.619 121.393 li
304.619 121.691 li
291.548 121.691 mo
282.725 121.691 li
282.725 121.393 li
291.548 121.393 li
291.548 121.691 li
278.477 121.691 mo
271.927 121.691 li
271.927 121.393 li
278.477 121.393 li
278.477 121.691 li
304.619 121.249 mo
295.796 121.249 li
295.796 120.95 li
304.619 120.95 li
304.619 121.249 li
291.548 121.249 mo
282.725 121.249 li
282.725 120.95 li
291.548 120.95 li
291.548 121.249 li
278.477 121.249 mo
271.927 121.249 li
271.927 120.95 li
278.477 120.95 li
278.477 121.249 li
.129412 0 .0196078 rgb
f
370.795 122.993 mo
367.427 122.993 li
367.427 122.7 li
370.795 122.7 li
370.795 122.993 li
360.432 122.993 mo
358.106 122.993 li
358.106 122.7 li
360.432 122.7 li
360.432 122.993 li
295.219 122.993 mo
294.481 122.993 li
294.481 122.7 li
295.219 122.7 li
295.219 122.993 li
.262745 1 .988235 rgb
f
441.663 135.391 mo
432.2 135.391 li
432.2 108.569 li
480 108.569 li
480 117.528 li
457.188 117.528 li
457.188 117.821 li
480 117.821 li
480 124.955 li
441.663 124.955 li
441.663 135.391 li
0 0 0 rgb
f
358.836 138.526 mo
358.506 138.526 li
358.506 135.416 li
322.995 135.416 li
323.008 135.31 323.016 135.201 323.016 135.091 cv
323.016 133.71 321.897 132.591 320.516 132.591 cv
319.135 132.591 318.016 133.71 318.016 135.091 cv
318.016 135.201 318.023 135.31 318.037 135.416 cv
271.927 135.416 li
271.927 126.434 li
318.299 126.434 li
318.118 126.78 318.016 127.174 318.016 127.591 cv
318.016 128.972 319.135 130.091 320.516 130.091 cv
321.897 130.091 323.016 128.972 323.016 127.591 cv
323.016 127.174 322.913 126.78 322.732 126.434 cv
350.068 126.434 li
350.068 126.889 li
357.064 126.889 li
357.064 126.434 li
360.432 126.434 li
360.432 126.889 li
367.427 126.889 li
367.427 126.434 li
370.795 126.434 li
370.795 126.889 li
377.79 126.889 li
377.79 126.434 li
380.541 126.434 li
380.541 136.986 li
358.836 136.986 li
358.836 138.526 li
370.795 129.225 mo
370.795 130.416 li
377.79 130.416 li
377.79 129.225 li
370.795 129.225 li
360.432 129.225 mo
360.432 130.416 li
367.427 130.416 li
367.427 129.225 li
360.432 129.225 li
350.068 129.225 mo
350.068 130.416 li
357.064 130.416 li
357.064 129.225 li
350.068 129.225 li
370.795 127.462 mo
370.795 128.652 li
377.79 128.652 li
377.79 127.462 li
370.795 127.462 li
360.432 127.462 mo
360.432 128.652 li
367.427 128.652 li
367.427 127.462 li
360.432 127.462 li
350.068 127.462 mo
350.068 128.652 li
357.064 128.652 li
357.064 127.462 li
350.068 127.462 li
f
380.541 126.434 mo
377.79 126.434 li
377.79 125.699 li
370.795 125.699 li
370.795 126.434 li
367.427 126.434 li
367.427 125.699 li
360.432 125.699 li
360.432 126.434 li
357.064 126.434 li
357.064 125.699 li
350.068 125.699 li
350.068 126.434 li
322.732 126.434 li
322.315 125.636 321.479 125.091 320.516 125.091 cv
319.552 125.091 318.716 125.636 318.299 126.434 cv
271.927 126.434 li
271.927 124.955 li
350.068 124.955 li
350.068 125.126 li
357.064 125.126 li
357.064 124.955 li
360.432 124.955 li
360.432 125.126 li
367.427 125.126 li
367.427 124.955 li
370.795 124.955 li
370.795 125.126 li
377.79 125.126 li
377.79 124.955 li
380.541 124.955 li
380.541 126.434 li
f
377.79 124.955 mo
370.795 124.955 li
370.795 123.936 li
377.79 123.936 li
377.79 124.955 li
367.427 124.955 mo
360.432 124.955 li
360.432 123.936 li
367.427 123.936 li
367.427 124.955 li
357.064 124.955 mo
350.068 124.955 li
350.068 123.936 li
357.064 123.936 li
357.064 124.955 li
377.79 123.363 mo
370.795 123.363 li
370.795 122.993 li
373.805 122.993 li
373.805 122.7 li
370.795 122.7 li
370.795 122.173 li
377.79 122.173 li
377.79 123.363 li
.2 0 .0313725 rgb
f
373.805 122.993 mo
370.795 122.993 li
370.795 122.7 li
373.805 122.7 li
373.805 122.993 li
.411765 1 .988235 rgb
f
367.427 123.363 mo
360.432 123.363 li
360.432 122.993 li
367.427 122.993 li
367.427 123.363 li
367.427 122.7 mo
360.432 122.7 li
360.432 122.173 li
367.427 122.173 li
367.427 122.7 li
.2 0 .0313725 rgb
f
367.427 122.993 mo
360.432 122.993 li
360.432 122.7 li
367.427 122.7 li
367.427 122.993 li
.411765 1 .988235 rgb
f
357.064 122.276 mo
350.068 122.276 li
350.068 122.173 li
357.064 122.173 li
357.064 122.276 li
.2 0 .0313725 rgb
f
377.79 130.416 mo
370.795 130.416 li
370.795 129.225 li
377.79 129.225 li
377.79 130.416 li
367.427 130.416 mo
360.432 130.416 li
360.432 129.225 li
367.427 129.225 li
367.427 130.416 li
357.064 130.416 mo
350.068 130.416 li
350.068 129.225 li
357.064 129.225 li
357.064 130.416 li
377.79 128.652 mo
370.795 128.652 li
370.795 127.462 li
377.79 127.462 li
377.79 128.652 li
367.427 128.652 mo
360.432 128.652 li
360.432 127.462 li
367.427 127.462 li
367.427 128.652 li
357.064 128.652 mo
350.068 128.652 li
350.068 127.462 li
357.064 127.462 li
357.064 128.652 li
377.79 126.889 mo
370.795 126.889 li
370.795 126.434 li
377.79 126.434 li
377.79 126.889 li
f
377.79 126.434 mo
370.795 126.434 li
370.795 125.699 li
377.79 125.699 li
377.79 126.434 li
f
367.427 126.889 mo
360.432 126.889 li
360.432 126.434 li
367.427 126.434 li
367.427 126.889 li
f
367.427 126.434 mo
360.432 126.434 li
360.432 125.699 li
367.427 125.699 li
367.427 126.434 li
f
357.064 126.889 mo
350.068 126.889 li
350.068 126.434 li
357.064 126.434 li
357.064 126.889 li
f
357.064 126.434 mo
350.068 126.434 li
350.068 125.699 li
357.064 125.699 li
357.064 126.434 li
377.79 125.126 mo
370.795 125.126 li
370.795 124.955 li
377.79 124.955 li
377.79 125.126 li
367.427 125.126 mo
360.432 125.126 li
360.432 124.955 li
367.427 124.955 li
367.427 125.126 li
357.064 125.126 mo
350.068 125.126 li
350.068 124.955 li
357.064 124.955 li
357.064 125.126 li
f
358.106 123.443 mo
295.219 123.443 li
295.219 122.993 li
295.796 122.993 li
295.796 123.019 li
304.619 123.019 li
304.619 122.993 li
350.068 122.993 li
350.068 123.363 li
357.064 123.363 li
357.064 122.993 li
358.106 122.993 li
358.106 123.443 li
358.106 122.7 mo
357.064 122.7 li
357.064 122.276 li
358.106 122.276 li
358.106 122.7 li
350.068 122.7 mo
295.219 122.7 li
295.219 122.276 li
319.299 122.276 li
319.659 122.477 320.074 122.591 320.516 122.591 cv
320.957 122.591 321.372 122.477 321.732 122.276 cv
350.068 122.276 li
350.068 122.7 li
295.796 122.278 mo
295.796 122.577 li
304.619 122.577 li
304.619 122.278 li
295.796 122.278 li
.184314 .811765 .8 rgb
f
304.619 123.019 mo
295.796 123.019 li
295.796 122.993 li
304.619 122.993 li
304.619 123.019 li
304.619 122.577 mo
295.796 122.577 li
295.796 122.278 li
304.619 122.278 li
304.619 122.577 li
.290196 .811765 .803922 rgb
f
358.106 122.993 mo
357.064 122.993 li
357.064 122.7 li
358.106 122.7 li
358.106 122.993 li
350.068 122.993 mo
304.619 122.993 li
304.619 122.721 li
295.796 122.721 li
295.796 122.993 li
295.219 122.993 li
295.219 122.7 li
350.068 122.7 li
350.068 122.993 li
.4 1 .996078 rgb
f
304.619 122.993 mo
295.796 122.993 li
295.796 122.721 li
304.619 122.721 li
304.619 122.993 li
.47451 1 .996078 rgb
f
357.064 123.363 mo
350.068 123.363 li
350.068 122.993 li
357.064 122.993 li
357.064 123.363 li
357.064 122.7 mo
350.068 122.7 li
350.068 122.276 li
357.064 122.276 li
357.064 122.7 li
.34902 .811765 .807843 rgb
f
357.064 122.993 mo
350.068 122.993 li
350.068 122.7 li
357.064 122.7 li
357.064 122.993 li
.521569 1 .996078 rgb
f
269.388 183.595 mo
248.123 183.595 li
248.123 182.738 li
244.237 182.738 li
244.237 180.977 li
248.123 180.977 li
248.123 177.319 li
244.237 177.319 li
244.237 174.275 li
269.388 174.275 li
269.388 183.595 li
0 0 .101961 rgb
f
269.388 174.275 mo
244.237 174.275 li
244.237 172.157 li
269.388 172.157 li
269.388 174.275 li
.133333 .27451 .639216 rgb
f
244.237 182.738 mo
243.819 182.738 li
243.819 180.977 li
244.237 180.977 li
244.237 182.738 li
244.237 177.319 mo
243.819 177.319 li
243.819 174.275 li
244.237 174.275 li
244.237 177.319 li
0 0 .188235 rgb
f
244.237 174.275 mo
243.819 174.275 li
243.819 172.157 li
244.237 172.157 li
244.237 174.275 li
.133333 .27451 .67451 rgb
f
248.123 183.595 mo
244.237 183.595 li
244.237 182.738 li
248.123 182.738 li
248.123 183.595 li
.2 0 .129412 rgb
f
244.237 183.595 mo
243.819 183.595 li
243.819 182.738 li
244.237 182.738 li
244.237 183.595 li
.2 0 .211765 rgb
f
248.123 180.977 mo
244.237 180.977 li
244.237 177.319 li
248.123 177.319 li
248.123 180.977 li
.2 0 .129412 rgb
f
244.237 180.977 mo
243.819 180.977 li
243.819 177.319 li
244.237 177.319 li
244.237 180.977 li
.2 0 .211765 rgb
f
240.334 138.526 mo
211.847 138.526 li
211.847 136.986 li
240.334 136.986 li
240.334 138.526 li
85.5727 138.376 mo
70.9791 138.376 li
70.9791 138.375 70.9791 138.374 70.9791 138.373 cv
70.9791 137.86 70.8245 137.383 70.5593 136.986 cv
85.5727 136.986 li
85.5727 138.376 li
65.9785 138.376 mo
65.2648 138.376 li
65.2527 137.858 65.0836 137.38 64.8032 136.986 cv
66.3982 136.986 li
66.1331 137.383 65.9785 137.86 65.9785 138.373 cv
65.9785 138.374 65.9785 138.375 65.9785 138.376 cv
60.2658 138.376 mo
22.5161 138.376 li
22.5161 136.986 li
60.7273 136.986 li
60.447 137.38 60.2779 137.858 60.2658 138.376 cv
.00392157 .00392157 .0235294 rgb
f
22.5161 138.376 mo
12.2304 138.376 li
12.2304 136.986 li
22.5161 136.986 li
22.5161 138.376 li
f
12.2304 138.376 mo
0 138.376 li
0 136.986 li
12.2304 136.986 li
12.2304 138.376 li
f
243.819 172.1 mo
211.847 172.1 li
211.847 138.526 li
240.334 138.526 li
240.334 139.005 li
243.819 139.005 li
243.819 164.399 li
227.562 164.399 li
227.562 169.049 li
243.819 169.049 li
243.819 172.1 li
85.5727 150.844 mo
0 150.844 li
0 147.453 li
22.5161 147.453 li
22.5161 144.084 li
61.0849 144.084 li
60.5813 144.541 60.2651 145.201 60.2651 145.935 cv
60.2651 147.315 61.3842 148.434 62.7652 148.434 cv
64.146 148.434 65.2655 147.315 65.2655 145.935 cv
65.2655 145.201 64.9492 144.541 64.4456 144.084 cv
66.7324 144.084 li
66.2673 144.538 65.9785 145.172 65.9785 145.873 cv
65.9785 147.254 67.0982 148.373 68.4786 148.373 cv
69.8594 148.373 70.9791 147.254 70.9791 145.873 cv
70.9791 145.172 70.6903 144.538 70.2251 144.084 cv
85.5727 144.084 li
85.5727 150.844 li
.00392157 .00392157 .113725 rgb
f
22.5161 147.453 mo
0 147.453 li
0 144.084 li
22.5161 144.084 li
22.5161 147.453 li
f
243.819 172.157 mo
211.847 172.157 li
211.847 172.1 li
243.819 172.1 li
243.819 172.157 li
.137255 .278431 .647059 rgb
f
65.2648 138.376 mo
60.2658 138.376 li
60.2779 137.858 60.447 137.38 60.7273 136.986 cv
64.8032 136.986 li
65.0836 137.38 65.2527 137.858 65.2648 138.376 cv
.0705882 .00392157 .101961 rgb
f
62.7652 148.434 mo
61.3842 148.434 60.2651 147.315 60.2651 145.935 cv
60.2651 145.201 60.5813 144.541 61.0849 144.084 cv
64.4456 144.084 li
64.9492 144.541 65.2655 145.201 65.2655 145.935 cv
65.2655 147.315 64.146 148.434 62.7652 148.434 cv
.0705882 .00392157 .188235 rgb
f
211.847 138.526 mo
143.545 138.526 li
143.545 136.986 li
211.847 136.986 li
211.847 138.526 li
139.715 138.526 mo
137.87 138.526 li
137.87 136.986 li
139.715 136.986 li
139.715 138.526 li
134.04 138.526 mo
132.195 138.526 li
132.195 136.986 li
134.04 136.986 li
134.04 138.526 li
128.365 138.526 mo
108.582 138.526 li
108.582 138.376 li
85.5727 138.376 li
85.5727 136.986 li
128.365 136.986 li
128.365 138.526 li
.00392157 .00392157 .0666667 rgb
f
211.847 172.1 mo
184.88 172.1 li
184.88 150.844 li
85.5727 150.844 li
85.5727 144.084 li
108.582 144.084 li
108.582 144.05 li
129.659 144.05 li
129.659 143.988 li
132.195 143.988 li
132.195 140.502 li
128.365 140.502 li
128.365 142.882 li
108.582 142.882 li
108.582 138.526 li
128.365 138.526 li
128.365 138.824 li
132.195 138.824 li
132.195 138.526 li
134.04 138.526 li
134.04 138.824 li
137.87 138.824 li
137.87 138.526 li
139.715 138.526 li
139.715 138.824 li
143.545 138.824 li
143.545 138.526 li
211.847 138.526 li
211.847 172.1 li
139.715 145.666 mo
139.715 149.152 li
143.545 149.152 li
143.545 145.666 li
139.715 145.666 li
134.04 145.666 mo
134.04 149.152 li
137.87 149.152 li
137.87 145.666 li
134.04 145.666 li
128.365 145.666 mo
128.365 149.152 li
132.195 149.152 li
132.195 145.666 li
128.365 145.666 li
139.715 140.502 mo
139.715 143.988 li
143.545 143.988 li
143.545 140.502 li
139.715 140.502 li
134.04 140.502 mo
134.04 143.988 li
137.87 143.988 li
137.87 140.502 li
134.04 140.502 li
.00392157 .00392157 .152941 rgb
f
129.659 144.05 mo
108.582 144.05 li
108.582 142.882 li
128.365 142.882 li
128.365 143.988 li
129.659 143.988 li
129.659 144.05 li
.0196078 .00392157 .156863 rgb
f
211.847 172.157 mo
184.88 172.157 li
184.88 172.1 li
211.847 172.1 li
211.847 172.157 li
.137255 .278431 .662745 rgb
f
143.545 149.152 mo
139.715 149.152 li
139.715 145.666 li
143.545 145.666 li
143.545 149.152 li
137.87 149.152 mo
134.04 149.152 li
134.04 145.666 li
137.87 145.666 li
137.87 149.152 li
132.195 149.152 mo
128.365 149.152 li
128.365 145.666 li
132.195 145.666 li
132.195 149.152 li
143.545 143.988 mo
139.715 143.988 li
139.715 140.502 li
143.545 140.502 li
143.545 143.988 li
137.87 143.988 mo
134.04 143.988 li
134.04 140.502 li
137.87 140.502 li
137.87 143.988 li
132.195 143.988 mo
129.659 143.988 li
129.659 142.882 li
128.365 142.882 li
128.365 140.502 li
132.195 140.502 li
132.195 143.988 li
.0705882 .0196078 .176471 rgb
f
129.659 143.988 mo
128.365 143.988 li
128.365 142.882 li
129.659 142.882 li
129.659 143.988 li
.0862745 .0196078 .180392 rgb
f
143.545 138.526 mo
139.715 138.526 li
139.715 136.986 li
143.545 136.986 li
143.545 138.526 li
.0705882 .0196078 .0862745 rgb
f
143.545 138.824 mo
139.715 138.824 li
139.715 138.526 li
143.545 138.526 li
143.545 138.824 li
.0705882 .0196078 .176471 rgb
f
137.87 138.526 mo
134.04 138.526 li
134.04 136.986 li
137.87 136.986 li
137.87 138.526 li
.0705882 .0196078 .0862745 rgb
f
137.87 138.824 mo
134.04 138.824 li
134.04 138.526 li
137.87 138.526 li
137.87 138.824 li
.0705882 .0196078 .176471 rgb
f
132.195 138.526 mo
128.365 138.526 li
128.365 136.986 li
132.195 136.986 li
132.195 138.526 li
.0705882 .0196078 .0862745 rgb
f
132.195 138.824 mo
128.365 138.824 li
128.365 138.526 li
132.195 138.526 li
132.195 138.824 li
.0705882 .0196078 .176471 rgb
f
234.979 183.595 mo
228.65 183.595 li
228.65 182.738 li
215.506 182.738 li
215.506 183.595 li
211.847 183.595 li
211.847 174.275 li
243.819 174.275 li
243.819 177.319 li
234.979 177.319 li
234.979 180.977 li
243.819 180.977 li
243.819 182.738 li
234.979 182.738 li
234.979 183.595 li
215.506 177.319 mo
215.506 180.977 li
228.65 180.977 li
228.65 177.319 li
215.506 177.319 li
.00392157 .00392157 .207843 rgb
f
243.819 174.275 mo
211.847 174.275 li
211.847 172.157 li
243.819 172.157 li
243.819 174.275 li
.137255 .278431 .682353 rgb
f
211.847 183.595 mo
209.177 183.595 li
209.177 182.738 li
196.033 182.738 li
196.033 183.595 li
184.88 183.595 li
184.88 174.275 li
211.847 174.275 li
211.847 183.595 li
196.033 177.319 mo
196.033 180.977 li
209.177 180.977 li
209.177 177.319 li
196.033 177.319 li
.00392157 .00392157 .239216 rgb
f
211.847 174.275 mo
184.88 174.275 li
184.88 172.157 li
211.847 172.157 li
211.847 174.275 li
.137255 .278431 .698039 rgb
f
243.819 183.595 mo
234.979 183.595 li
234.979 182.738 li
243.819 182.738 li
243.819 183.595 li
228.65 183.595 mo
215.506 183.595 li
215.506 182.738 li
228.65 182.738 li
228.65 183.595 li
.203922 .00392157 .227451 rgb
f
209.177 183.595 mo
196.033 183.595 li
196.033 182.738 li
209.177 182.738 li
209.177 183.595 li
.203922 .00392157 .262745 rgb
f
243.819 180.977 mo
234.979 180.977 li
234.979 177.319 li
243.819 177.319 li
243.819 180.977 li
228.65 180.977 mo
215.506 180.977 li
215.506 177.319 li
228.65 177.319 li
228.65 180.977 li
.203922 .00392157 .227451 rgb
f
209.177 180.977 mo
196.033 180.977 li
196.033 177.319 li
209.177 177.319 li
209.177 180.977 li
.203922 .00392157 .262745 rgb
f
269.388 250.209 mo
245.554 250.209 li
245.554 244.586 li
269.388 244.586 li
269.388 250.209 li
0 0 .0862745 rgb
f
269.388 244.586 mo
245.554 244.586 li
245.554 244.46 li
269.388 244.46 li
269.388 244.586 li
0 0 .180392 rgb
f
269.388 244.46 mo
245.554 244.46 li
245.554 202.651 li
248.123 202.651 li
248.123 202.335 li
269.388 202.335 li
269.388 244.46 li
269.388 198.746 mo
245.554 198.746 li
245.554 197.548 li
244.237 197.548 li
244.237 197.232 li
248.123 197.232 li
248.123 193.575 li
244.237 193.575 li
244.237 191.814 li
248.123 191.814 li
248.123 189.088 li
269.388 189.088 li
269.388 198.746 li
269.388 185.667 mo
248.123 185.667 li
248.123 183.595 li
269.388 183.595 li
269.388 185.667 li
f
244.237 197.548 mo
243.819 197.548 li
243.819 197.232 li
244.237 197.232 li
244.237 197.548 li
244.237 193.575 mo
243.819 193.575 li
243.819 191.814 li
244.237 191.814 li
244.237 193.575 li
0 0 .258824 rgb
f
269.388 189.088 mo
248.123 189.088 li
248.123 188.156 li
244.237 188.156 li
244.237 186.396 li
248.123 186.396 li
248.123 185.667 li
269.388 185.667 li
269.388 189.088 li
1 0 .403922 rgb
f
244.237 188.156 mo
243.819 188.156 li
243.819 186.396 li
244.237 186.396 li
244.237 188.156 li
1 0 .458824 rgb
f
248.123 202.651 mo
245.554 202.651 li
245.554 202.335 li
248.123 202.335 li
248.123 202.651 li
248.123 197.232 mo
244.237 197.232 li
244.237 193.575 li
248.123 193.575 li
248.123 197.232 li
.2 0 .203922 rgb
f
244.237 197.232 mo
243.819 197.232 li
243.819 193.575 li
244.237 193.575 li
244.237 197.232 li
.2 0 .282353 rgb
f
248.123 191.814 mo
244.237 191.814 li
244.237 189.088 li
248.123 189.088 li
248.123 191.814 li
.2 0 .203922 rgb
f
244.237 191.814 mo
243.819 191.814 li
243.819 189.088 li
244.237 189.088 li
244.237 191.814 li
.2 0 .282353 rgb
f
248.123 189.088 mo
244.237 189.088 li
244.237 188.156 li
248.123 188.156 li
248.123 189.088 li
1 0 .419608 rgb
f
244.237 189.088 mo
243.819 189.088 li
243.819 188.156 li
244.237 188.156 li
244.237 189.088 li
1 0 .478431 rgb
f
248.123 185.667 mo
244.237 185.667 li
244.237 183.595 li
248.123 183.595 li
248.123 185.667 li
.2 0 .203922 rgb
f
244.237 185.667 mo
243.819 185.667 li
243.819 183.595 li
244.237 183.595 li
244.237 185.667 li
.2 0 .282353 rgb
f
248.123 186.396 mo
244.237 186.396 li
244.237 185.667 li
248.123 185.667 li
248.123 186.396 li
1 0 .419608 rgb
f
244.237 186.396 mo
243.819 186.396 li
243.819 185.667 li
244.237 185.667 li
244.237 186.396 li
1 0 .478431 rgb
f
269.388 202.335 mo
248.123 202.335 li
248.123 198.994 li
245.554 198.994 li
245.554 198.746 li
269.388 198.746 li
269.388 202.335 li
.0313725 .231373 .368627 rgb
f
248.123 202.335 mo
245.554 202.335 li
245.554 198.994 li
248.123 198.994 li
248.123 202.335 li
.223529 .231373 .388235 rgb
f
243.819 197.548 mo
211.847 197.548 li
211.847 183.595 li
215.506 183.595 li
215.506 186.396 li
228.65 186.396 li
228.65 183.595 li
234.979 183.595 li
234.979 186.396 li
236.082 186.396 li
236.082 188.156 li
234.979 188.156 li
234.979 191.814 li
243.819 191.814 li
243.819 193.575 li
234.979 193.575 li
234.979 197.232 li
243.819 197.232 li
243.819 197.548 li
215.506 193.575 mo
215.506 197.232 li
228.65 197.232 li
228.65 193.575 li
215.506 193.575 li
215.506 188.156 mo
215.506 191.814 li
228.65 191.814 li
228.65 188.156 li
215.506 188.156 li
.00392157 .00392157 .278431 rgb
f
243.819 188.156 mo
236.082 188.156 li
236.082 186.396 li
243.819 186.396 li
243.819 188.156 li
1 .00392157 .470588 rgb
f
211.847 197.548 mo
184.88 197.548 li
184.88 183.595 li
196.033 183.595 li
196.033 186.396 li
209.177 186.396 li
209.177 183.595 li
211.847 183.595 li
211.847 197.548 li
196.033 193.575 mo
196.033 197.232 li
209.177 197.232 li
209.177 193.575 li
196.033 193.575 li
196.033 188.156 mo
196.033 191.814 li
209.177 191.814 li
209.177 188.156 li
196.033 188.156 li
.00392157 .00392157 .305882 rgb
f
243.819 197.232 mo
234.979 197.232 li
234.979 193.575 li
243.819 193.575 li
243.819 197.232 li
228.65 197.232 mo
215.506 197.232 li
215.506 193.575 li
228.65 193.575 li
228.65 197.232 li
.203922 .00392157 .294118 rgb
f
209.177 197.232 mo
196.033 197.232 li
196.033 193.575 li
209.177 193.575 li
209.177 197.232 li
.203922 .00392157 .32549 rgb
f
243.819 191.814 mo
234.979 191.814 li
234.979 188.156 li
236.082 188.156 li
236.082 189.088 li
243.819 189.088 li
243.819 191.814 li
.203922 .00392157 .294118 rgb
f
243.819 189.088 mo
236.082 189.088 li
236.082 188.156 li
243.819 188.156 li
243.819 189.088 li
1 .00392157 .486274 rgb
f
228.65 191.814 mo
215.506 191.814 li
215.506 188.156 li
228.65 188.156 li
228.65 191.814 li
.203922 .00392157 .294118 rgb
f
209.177 191.814 mo
196.033 191.814 li
196.033 188.156 li
209.177 188.156 li
209.177 191.814 li
.203922 .00392157 .32549 rgb
f
236.082 186.396 mo
234.979 186.396 li
234.979 183.595 li
243.819 183.595 li
243.819 185.667 li
236.082 185.667 li
236.082 186.396 li
.203922 .00392157 .294118 rgb
f
243.819 186.396 mo
236.082 186.396 li
236.082 185.667 li
243.819 185.667 li
243.819 186.396 li
1 .00392157 .486274 rgb
f
228.65 186.396 mo
215.506 186.396 li
215.506 183.595 li
228.65 183.595 li
228.65 186.396 li
.203922 .00392157 .294118 rgb
f
209.177 186.396 mo
196.033 186.396 li
196.033 183.595 li
209.177 183.595 li
209.177 186.396 li
.203922 .00392157 .32549 rgb
f
85.5727 138.526 mo
70.9745 138.526 li
70.9775 138.477 70.979 138.426 70.9791 138.376 cv
85.5727 138.376 li
85.5727 138.526 li
65.9831 138.526 mo
65.2639 138.526 li
65.265 138.496 65.2655 138.466 65.2655 138.435 cv
65.2655 138.416 65.2653 138.396 65.2648 138.376 cv
65.9785 138.376 li
65.9786 138.426 65.9801 138.477 65.9831 138.526 cv
60.2668 138.526 mo
22.5161 138.526 li
22.5161 138.376 li
60.2658 138.376 li
60.2654 138.396 60.2651 138.416 60.2651 138.435 cv
60.2651 138.466 60.2657 138.496 60.2668 138.526 cv
.00392157 .2 .647059 rgb
f
22.5161 138.526 mo
12.2304 138.526 li
12.2304 138.376 li
22.5161 138.376 li
22.5161 138.526 li
f
12.2304 138.526 mo
0 138.526 li
0 138.376 li
12.2304 138.376 li
12.2304 138.526 li
f
85.5727 144.084 mo
70.2251 144.084 li
70.2133 144.072 70.2014 144.061 70.1894 144.05 cv
85.5727 144.05 li
85.5727 144.084 li
66.7324 144.084 mo
64.4456 144.084 li
64.0016 143.681 63.4121 143.436 62.7652 143.436 cv
62.1182 143.436 61.5288 143.681 61.0849 144.084 cv
22.5161 144.084 li
22.5161 138.526 li
60.2668 138.526 li
60.3146 139.864 61.4146 140.935 62.7652 140.935 cv
64.1156 140.935 65.2161 139.864 65.2639 138.526 cv
65.9831 138.526 li
66.0624 139.836 67.1497 140.873 68.4786 140.873 cv
69.8079 140.873 70.8952 139.836 70.9745 138.526 cv
85.5727 138.526 li
85.5727 142.882 li
66.771 142.882 li
66.771 144.047 li
66.758 144.059 66.7451 144.072 66.7324 144.084 cv
.00392157 .2 .678431 rgb
f
85.5727 144.05 mo
70.1894 144.05 li
69.7421 143.63 69.1403 143.373 68.4786 143.373 cv
67.8185 143.373 67.2179 143.629 66.771 144.047 cv
66.771 142.882 li
85.5727 142.882 li
85.5727 144.05 li
.0196078 .2 .682353 rgb
f
22.5161 144.084 mo
0 144.084 li
0 142.972 li
12.2304 142.972 li
12.2304 138.526 li
22.5161 138.526 li
22.5161 144.084 li
.00392157 .2 .678431 rgb
f
12.2304 142.972 mo
0 142.972 li
0 138.526 li
12.2304 138.526 li
12.2304 142.972 li
f
65.2639 138.526 mo
60.2668 138.526 li
60.2657 138.496 60.2651 138.466 60.2651 138.435 cv
60.2651 138.416 60.2654 138.396 60.2658 138.376 cv
65.2648 138.376 li
65.2653 138.396 65.2655 138.416 65.2655 138.435 cv
65.2655 138.466 65.265 138.496 65.2639 138.526 cv
.0705882 .2 .67451 rgb
f
64.4456 144.084 mo
61.0849 144.084 li
61.5288 143.681 62.1182 143.436 62.7652 143.436 cv
63.4121 143.436 64.0016 143.681 64.4456 144.084 cv
62.7652 140.935 mo
61.4146 140.935 60.3146 139.864 60.2668 138.526 cv
65.2639 138.526 li
65.2161 139.864 64.1156 140.935 62.7652 140.935 cv
.0705882 .2 .705882 rgb
f
108.582 138.526 mo
85.5727 138.526 li
85.5727 138.376 li
108.582 138.376 li
108.582 138.526 li
.00392157 .2 .662745 rgb
f
108.582 144.084 mo
85.5727 144.084 li
85.5727 144.05 li
108.582 144.05 li
108.582 144.084 li
108.582 142.882 mo
85.5727 142.882 li
85.5727 138.526 li
108.582 138.526 li
108.582 142.882 li
.00392157 .2 .694118 rgb
f
108.582 144.05 mo
85.5727 144.05 li
85.5727 142.882 li
108.582 142.882 li
108.582 144.05 li
.0196078 .2 .694118 rgb
f
358.836 262.065 mo
269.388 262.065 li
269.388 250.209 li
358.836 250.209 li
358.836 262.065 li
0 0 .0941176 rgb
f
358.836 172.157 mo
284.225 172.157 li
284.225 172.1 li
269.388 172.1 li
269.388 169.049 li
288.215 169.049 li
288.215 164.399 li
269.388 164.399 li
269.388 139.005 li
271.927 139.005 li
271.927 147.453 li
358.836 147.453 li
358.836 151.367 li
313.866 151.367 li
313.866 156.301 li
358.836 156.301 li
358.836 162.007 li
358.629 161.626 358.225 161.367 357.761 161.367 cv
357.084 161.367 356.536 161.915 356.536 162.591 cv
356.536 163.268 357.084 163.815 357.761 163.815 cv
358.225 163.815 358.629 163.557 358.836 163.176 cv
358.836 172.157 li
352.25 161.367 mo
351.573 161.367 351.025 161.915 351.025 162.591 cv
351.025 163.268 351.573 163.815 352.25 163.815 cv
352.927 163.815 353.475 163.268 353.475 162.591 cv
353.475 161.915 352.927 161.367 352.25 161.367 cv
346.74 161.367 mo
346.064 161.367 345.516 161.915 345.516 162.591 cv
345.516 163.268 346.064 163.815 346.74 163.815 cv
347.416 163.815 347.964 163.268 347.964 162.591 cv
347.964 161.915 347.416 161.367 346.74 161.367 cv
f
284.225 172.157 mo
269.388 172.157 li
269.388 172.1 li
284.225 172.1 li
284.225 172.157 li
.133333 .27451 .639216 rgb
f
358.836 147.453 mo
271.927 147.453 li
271.927 139.005 li
358.506 139.005 li
358.506 138.526 li
358.836 138.526 li
358.836 147.453 li
329.885 139.974 mo
329.208 139.974 328.66 140.522 328.66 141.198 cv
328.66 141.874 329.208 142.423 329.885 142.423 cv
330.561 142.423 331.109 141.874 331.109 141.198 cv
331.109 140.522 330.561 139.974 329.885 139.974 cv
324.374 139.974 mo
323.698 139.974 323.149 140.522 323.149 141.198 cv
323.149 141.874 323.698 142.423 324.374 142.423 cv
325.051 142.423 325.599 141.874 325.599 141.198 cv
325.599 140.522 325.051 139.974 324.374 139.974 cv
318.864 139.974 mo
318.188 139.974 317.64 140.522 317.64 141.198 cv
317.64 141.874 318.188 142.423 318.864 142.423 cv
319.54 142.423 320.089 141.874 320.089 141.198 cv
320.089 140.522 319.54 139.974 318.864 139.974 cv
313.353 139.974 mo
312.678 139.974 312.129 140.522 312.129 141.198 cv
312.129 141.874 312.678 142.423 313.353 142.423 cv
314.03 142.423 314.578 141.874 314.578 141.198 cv
314.578 140.522 314.03 139.974 313.353 139.974 cv
307.844 139.974 mo
307.167 139.974 306.619 140.522 306.619 141.198 cv
306.619 141.874 307.167 142.423 307.844 142.423 cv
308.52 142.423 309.068 141.874 309.068 141.198 cv
309.068 140.522 308.52 139.974 307.844 139.974 cv
302.334 139.974 mo
301.657 139.974 301.109 140.522 301.109 141.198 cv
301.109 141.874 301.657 142.423 302.334 142.423 cv
303.01 142.423 303.558 141.874 303.558 141.198 cv
303.558 140.522 303.01 139.974 302.334 139.974 cv
0 0 .0941176 rgb
f
358.836 183.595 mo
269.388 183.595 li
269.388 174.275 li
284.225 174.275 li
284.225 172.157 li
358.836 172.157 li
358.836 183.595 li
0 0 .188235 rgb
f
284.225 174.275 mo
269.388 174.275 li
269.388 172.157 li
284.225 172.157 li
284.225 174.275 li
.133333 .27451 .67451 rgb
f
358.836 156.301 mo
313.866 156.301 li
313.866 151.367 li
358.836 151.367 li
358.836 156.301 li
1 0 .341176 rgb
f
358.836 250.209 mo
269.388 250.209 li
269.388 244.586 li
358.836 244.586 li
358.836 250.209 li
0 0 .172549 rgb
f
358.836 244.586 mo
269.388 244.586 li
269.388 244.46 li
358.836 244.46 li
358.836 244.586 li
0 0 .258824 rgb
f
358.836 244.46 mo
269.388 244.46 li
269.388 202.335 li
351.191 202.335 li
351.191 198.746 li
269.388 198.746 li
269.388 189.088 li
270.521 189.088 li
270.521 185.667 li
269.388 185.667 li
269.388 183.595 li
358.836 183.595 li
358.836 205.528 li
315.332 205.528 li
315.332 211.236 li
358.836 211.236 li
358.836 244.46 li
f
270.521 189.088 mo
269.388 189.088 li
269.388 185.667 li
270.521 185.667 li
270.521 189.088 li
1 0 .458824 rgb
f
351.191 202.335 mo
269.388 202.335 li
269.388 198.746 li
351.191 198.746 li
351.191 202.335 li
.0313725 .231373 .427451 rgb
f
358.836 211.236 mo
315.332 211.236 li
315.332 205.528 li
358.836 205.528 li
358.836 211.236 li
0 1 .988235 rgb
f
68.4786 148.373 mo
67.0982 148.373 65.9785 147.254 65.9785 145.873 cv
65.9785 145.172 66.2673 144.538 66.7324 144.084 cv
70.2251 144.084 li
70.6903 144.538 70.9791 145.172 70.9791 145.873 cv
70.9791 147.254 69.8594 148.373 68.4786 148.373 cv
.243137 .00392157 .313725 rgb
f
70.2251 144.084 mo
66.7324 144.084 li
66.7451 144.072 66.758 144.059 66.771 144.047 cv
66.771 144.05 li
70.1894 144.05 li
70.2014 144.061 70.2133 144.072 70.2251 144.084 cv
.243137 .2 .74902 rgb
f
70.1894 144.05 mo
66.771 144.05 li
66.771 144.047 li
67.2179 143.629 67.8185 143.373 68.4786 143.373 cv
69.1403 143.373 69.7421 143.63 70.1894 144.05 cv
.254902 .2 .752941 rgb
f
70.5593 136.986 mo
66.3982 136.986 li
66.8466 136.315 67.6111 135.874 68.4786 135.874 cv
69.3463 135.874 70.1109 136.315 70.5593 136.986 cv
.239216 0 .223529 rgb
f
70.9791 138.376 mo
65.9785 138.376 li
65.9785 138.375 65.9785 138.374 65.9785 138.373 cv
65.9785 137.86 66.1331 137.383 66.3982 136.986 cv
70.5593 136.986 li
70.8245 137.383 70.9791 137.86 70.9791 138.373 cv
70.9791 138.374 70.9791 138.375 70.9791 138.376 cv
.243137 .00392157 .243137 rgb
f
70.9745 138.526 mo
65.9831 138.526 li
65.9801 138.477 65.9786 138.426 65.9785 138.376 cv
70.9791 138.376 li
70.979 138.426 70.9775 138.477 70.9745 138.526 cv
.243137 .2 .72549 rgb
f
68.4786 140.873 mo
67.1497 140.873 66.0624 139.836 65.9831 138.526 cv
70.9745 138.526 li
70.8952 139.836 69.8079 140.873 68.4786 140.873 cv
.243137 .2 .74902 rgb
f
298.234 108.569 mo
294.428 108.569 li
294.887 108.032 295.569 107.691 296.331 107.691 cv
297.093 107.691 297.775 108.032 298.234 108.569 cv
.0509804 0 .0470588 rgb
f
296.331 112.691 mo
294.95 112.691 293.831 111.572 293.831 110.191 cv
293.831 109.572 294.056 109.006 294.428 108.569 cv
298.234 108.569 li
298.606 109.006 298.831 109.572 298.831 110.191 cv
298.831 111.572 297.712 112.691 296.331 112.691 cv
f
296.331 105.191 mo
294.95 105.191 293.831 104.072 293.831 102.691 cv
293.831 101.31 294.95 100.191 296.331 100.191 cv
297.712 100.191 298.831 101.31 298.831 102.691 cv
298.831 104.072 297.712 105.191 296.331 105.191 cv
296.331 97.6909 mo
294.95 97.6909 293.831 96.5718 293.831 95.191 cv
293.831 93.81 294.95 92.6909 296.331 92.6909 cv
297.712 92.6909 298.831 93.81 298.831 95.191 cv
298.831 96.5718 297.712 97.6909 296.331 97.6909 cv
296.331 90.1908 mo
295.926 90.1908 295.543 90.0943 295.204 89.9229 cv
297.458 89.9229 li
297.119 90.0943 296.736 90.1908 296.331 90.1908 cv
f
297.458 89.9229 mo
295.204 89.9229 li
294.389 89.5108 293.831 88.666 293.831 87.691 cv
293.831 86.3102 294.95 85.1909 296.331 85.1909 cv
297.712 85.1909 298.831 86.3102 298.831 87.691 cv
298.831 88.666 298.273 89.5108 297.458 89.9229 cv
296.331 82.691 mo
294.95 82.691 293.831 81.5713 293.831 80.1909 cv
293.831 78.8101 294.95 77.6908 296.331 77.6908 cv
297.712 77.6908 298.831 78.8101 298.831 80.1909 cv
298.831 81.5713 297.712 82.691 296.331 82.691 cv
.0509804 0 .0980392 rgb
f
298.735 72.0016 mo
293.927 72.0016 li
294.022 71.67 294.184 71.3667 294.397 71.107 cv
298.265 71.107 li
298.478 71.3667 298.64 71.67 298.735 72.0016 cv
.0509804 0 .0470588 rgb
f
296.331 75.191 mo
294.95 75.191 293.831 74.0713 293.831 72.6909 cv
293.831 72.4518 293.865 72.2205 293.927 72.0016 cv
298.735 72.0016 li
298.798 72.2205 298.831 72.4518 298.831 72.6909 cv
298.831 74.0713 297.712 75.191 296.331 75.191 cv
.0509804 0 .0980392 rgb
f
276.109 116.198 mo
274.728 116.198 273.608 115.079 273.608 113.698 cv
273.608 112.317 274.728 111.198 276.109 111.198 cv
277.489 111.198 278.609 112.317 278.609 113.698 cv
278.609 115.079 277.489 116.198 276.109 116.198 cv
.196078 0 .239216 rgb
f
276.904 108.569 mo
275.314 108.569 li
274.323 108.237 273.608 107.301 273.608 106.198 cv
273.608 104.817 274.728 103.698 276.109 103.698 cv
277.489 103.698 278.609 104.817 278.609 106.198 cv
278.609 107.301 277.895 108.237 276.904 108.569 cv
f
276.109 108.698 mo
275.831 108.698 275.564 108.653 275.314 108.569 cv
276.904 108.569 li
276.654 108.653 276.387 108.698 276.109 108.698 cv
f
276.109 101.198 mo
274.728 101.198 273.608 100.079 273.608 98.6982 cv
273.608 97.3174 274.728 96.1981 276.109 96.1981 cv
277.489 96.1981 278.609 97.3174 278.609 98.6982 cv
278.609 100.079 277.489 101.198 276.109 101.198 cv
276.109 93.6983 mo
274.728 93.6983 273.608 92.5785 273.608 91.1982 cv
273.608 90.7324 273.736 90.2963 273.958 89.9229 cv
278.26 89.9229 li
278.482 90.2963 278.609 90.7324 278.609 91.1982 cv
278.609 92.5785 277.489 93.6983 276.109 93.6983 cv
f
278.26 89.9229 mo
273.958 89.9229 li
274.394 89.1896 275.194 88.6983 276.109 88.6983 cv
277.024 88.6983 277.824 89.1896 278.26 89.9229 cv
276.109 86.1982 mo
274.728 86.1982 273.608 85.0785 273.608 83.6981 cv
273.608 82.3173 274.728 81.1983 276.109 81.1983 cv
277.489 81.1983 278.609 82.3173 278.609 83.6981 cv
278.609 85.0785 277.489 86.1982 276.109 86.1982 cv
276.109 78.6982 mo
274.728 78.6982 273.608 77.5787 273.608 76.1983 cv
273.608 74.8173 274.728 73.6982 276.109 73.6982 cv
277.489 73.6982 278.609 74.8173 278.609 76.1983 cv
278.609 77.5787 277.489 78.6982 276.109 78.6982 cv
.196078 0 .282353 rgb
f
276.109 71.1981 mo
275.877 71.1981 275.652 71.1664 275.438 71.107 cv
276.78 71.107 li
276.567 71.1664 276.342 71.1981 276.109 71.1981 cv
.196078 0 .239216 rgb
f
329.885 142.423 mo
329.208 142.423 328.66 141.874 328.66 141.198 cv
328.66 140.522 329.208 139.974 329.885 139.974 cv
330.561 139.974 331.109 140.522 331.109 141.198 cv
331.109 141.874 330.561 142.423 329.885 142.423 cv
324.374 142.423 mo
323.698 142.423 323.149 141.874 323.149 141.198 cv
323.149 140.522 323.698 139.974 324.374 139.974 cv
325.051 139.974 325.599 140.522 325.599 141.198 cv
325.599 141.874 325.051 142.423 324.374 142.423 cv
318.864 142.423 mo
318.188 142.423 317.64 141.874 317.64 141.198 cv
317.64 140.522 318.188 139.974 318.864 139.974 cv
319.54 139.974 320.089 140.522 320.089 141.198 cv
320.089 141.874 319.54 142.423 318.864 142.423 cv
313.353 142.423 mo
312.678 142.423 312.129 141.874 312.129 141.198 cv
312.129 140.522 312.678 139.974 313.353 139.974 cv
314.03 139.974 314.578 140.522 314.578 141.198 cv
314.578 141.874 314.03 142.423 313.353 142.423 cv
307.844 142.423 mo
307.167 142.423 306.619 141.874 306.619 141.198 cv
306.619 140.522 307.167 139.974 307.844 139.974 cv
308.52 139.974 309.068 140.522 309.068 141.198 cv
309.068 141.874 308.52 142.423 307.844 142.423 cv
302.334 142.423 mo
301.657 142.423 301.109 141.874 301.109 141.198 cv
301.109 140.522 301.657 139.974 302.334 139.974 cv
303.01 139.974 303.558 140.522 303.558 141.198 cv
303.558 141.874 303.01 142.423 302.334 142.423 cv
.278431 0 .0980392 rgb
f
322.995 135.416 mo
318.037 135.416 li
318.023 135.31 318.016 135.201 318.016 135.091 cv
318.016 133.71 319.135 132.591 320.516 132.591 cv
321.897 132.591 323.016 133.71 323.016 135.091 cv
323.016 135.201 323.008 135.31 322.995 135.416 cv
320.516 130.091 mo
319.135 130.091 318.016 128.972 318.016 127.591 cv
318.016 127.174 318.118 126.78 318.299 126.434 cv
322.732 126.434 li
322.913 126.78 323.016 127.174 323.016 127.591 cv
323.016 128.972 321.897 130.091 320.516 130.091 cv
.207843 .027451 .239216 rgb
f
322.732 126.434 mo
318.299 126.434 li
318.716 125.636 319.552 125.091 320.516 125.091 cv
321.479 125.091 322.315 125.636 322.732 126.434 cv
f
321.732 122.276 mo
319.299 122.276 li
318.533 121.849 318.016 121.031 318.016 120.091 cv
318.016 118.711 319.135 117.591 320.516 117.591 cv
321.897 117.591 323.016 118.711 323.016 120.091 cv
323.016 121.031 322.498 121.849 321.732 122.276 cv
f
320.516 122.591 mo
320.074 122.591 319.659 122.477 319.299 122.276 cv
321.732 122.276 li
321.372 122.477 320.957 122.591 320.516 122.591 cv
.352941 .815686 .847059 rgb
f
320.516 115.091 mo
319.135 115.091 318.016 113.972 318.016 112.591 cv
318.016 111.21 319.135 110.091 320.516 110.091 cv
321.897 110.091 323.016 111.21 323.016 112.591 cv
323.016 113.972 321.897 115.091 320.516 115.091 cv
.207843 .027451 .239216 rgb
f
320.516 107.591 mo
319.135 107.591 318.016 106.472 318.016 105.091 cv
318.016 104.233 318.448 103.477 319.106 103.026 cv
321.925 103.026 li
322.584 103.477 323.016 104.233 323.016 105.091 cv
323.016 106.472 321.897 107.591 320.516 107.591 cv
f
321.925 103.026 mo
319.106 103.026 li
319.507 102.752 319.993 102.591 320.516 102.591 cv
321.039 102.591 321.524 102.752 321.925 103.026 cv
.505882 .580392 1 rgb
f
323.01 97.7607 mo
318.021 97.7607 li
318.018 97.7047 318.016 97.6482 318.016 97.5912 cv
318.016 96.2104 319.135 95.0913 320.516 95.0913 cv
321.897 95.0913 323.016 96.2104 323.016 97.5912 cv
323.016 97.6482 323.014 97.7047 323.01 97.7607 cv
.207843 .027451 .239216 rgb
f
320.516 100.091 mo
319.192 100.091 318.108 99.0621 318.021 97.7607 cv
323.01 97.7607 li
322.923 99.0621 321.84 100.091 320.516 100.091 cv
.505882 .580392 1 rgb
f
320.516 92.5913 mo
319.135 92.5913 318.016 91.4718 318.016 90.0914 cv
318.016 90.0347 318.018 89.9786 318.021 89.9229 cv
323.01 89.9229 li
323.014 89.9786 323.016 90.0347 323.016 90.0914 cv
323.016 91.4718 321.897 92.5913 320.516 92.5913 cv
.207843 .027451 .239216 rgb
f
323.01 89.9229 mo
318.021 89.9229 li
318.108 88.6206 319.191 87.5913 320.516 87.5913 cv
321.84 87.5913 322.923 88.6206 323.01 89.9229 cv
.207843 .027451 .282353 rgb
f
357.761 163.815 mo
357.084 163.815 356.536 163.268 356.536 162.591 cv
356.536 161.915 357.084 161.367 357.761 161.367 cv
358.225 161.367 358.629 161.626 358.836 162.007 cv
358.836 163.176 li
358.629 163.557 358.225 163.815 357.761 163.815 cv
352.25 163.815 mo
351.573 163.815 351.025 163.268 351.025 162.591 cv
351.025 161.915 351.573 161.367 352.25 161.367 cv
352.927 161.367 353.475 161.915 353.475 162.591 cv
353.475 163.268 352.927 163.815 352.25 163.815 cv
346.74 163.815 mo
346.064 163.815 345.516 163.268 345.516 162.591 cv
345.516 161.915 346.064 161.367 346.74 161.367 cv
347.416 161.367 347.964 161.915 347.964 162.591 cv
347.964 163.268 347.416 163.815 346.74 163.815 cv
.678431 .00392157 .0941176 rgb
f
78.5186 71.1699 mo
12.2304 71.1699 li
12.2304 71.107 li
78.5186 71.107 li
78.5186 71.1699 li
0 .168627 .54902 rgb
f
12.2304 71.1699 mo
0 71.1699 li
0 71.107 li
12.2304 71.107 li
12.2304 71.1699 li
f
78.5186 71.107 mo
12.2304 71.107 li
12.2304 68.7964 li
78.5186 68.7964 li
78.5186 71.107 li
f
12.2304 71.107 mo
0 71.107 li
0 68.7964 li
12.2304 68.7964 li
12.2304 71.107 li
f
79.1045 71.1699 mo
78.5186 71.1699 li
78.5186 71.107 li
79.1045 71.107 li
79.1045 71.1699 li
0 .168627 .596078 rgb
f
79.1045 71.107 mo
78.5186 71.107 li
78.5186 68.7964 li
79.1045 68.7964 li
79.1045 71.107 li
f
432.2 71.107 mo
298.265 71.107 li
297.807 70.5478 297.111 70.191 296.331 70.191 cv
295.551 70.191 294.855 70.5478 294.397 71.107 cv
276.78 71.107 li
277.835 70.8137 278.609 69.8462 278.609 68.6983 cv
278.609 67.3175 277.489 66.1982 276.109 66.1982 cv
274.728 66.1982 273.608 67.3175 273.608 68.6983 cv
273.608 69.8462 274.383 70.8137 275.438 71.107 cv
245.554 71.107 li
245.554 21.1421 li
248.938 21.1421 li
248.818 21.4346 248.752 21.7549 248.752 22.0907 cv
248.752 23.4718 249.871 24.5908 251.252 24.5908 cv
252.633 24.5908 253.752 23.4718 253.752 22.0907 cv
253.752 21.7549 253.686 21.4346 253.566 21.1421 cv
269.388 21.1421 li
269.388 40.8712 li
263.104 40.8712 li
263.104 43.2447 li
269.388 43.2447 li
269.388 58.602 li
432.2 58.602 li
432.2 71.107 li
296.331 62.691 mo
294.95 62.691 293.831 63.81 293.831 65.1908 cv
293.831 66.5712 294.95 67.6909 296.331 67.6909 cv
297.712 67.6909 298.831 66.5712 298.831 65.1908 cv
298.831 63.81 297.712 62.691 296.331 62.691 cv
251.252 27.0909 mo
249.871 27.0909 248.752 28.21 248.752 29.5908 cv
248.752 30.9716 249.871 32.0909 251.252 32.0909 cv
252.633 32.0909 253.752 30.9716 253.752 29.5908 cv
253.752 28.21 252.633 27.0909 251.252 27.0909 cv
0 0 0 rgb
f
432.2 58.602 mo
269.388 58.602 li
269.388 43.2447 li
359.393 43.2447 li
359.393 43.4541 li
371.672 43.4541 li
371.672 43.2447 li
373.502 43.2447 li
373.502 41.9648 li
377.585 41.9648 li
377.585 43.4541 li
389.864 43.4541 li
389.864 41.9648 li
395.776 41.9648 li
395.776 43.4541 li
408.057 43.4541 li
408.057 41.9648 li
432.2 41.9648 li
432.2 58.602 li
305.027 55.8662 mo
304.351 55.8662 303.803 56.4145 303.803 57.0909 cv
303.803 57.767 304.351 58.3155 305.027 58.3155 cv
305.704 58.3155 306.252 57.767 306.252 57.0909 cv
306.252 56.4145 305.704 55.8662 305.027 55.8662 cv
299.518 55.8662 mo
298.841 55.8662 298.293 56.4145 298.293 57.0909 cv
298.293 57.767 298.841 58.3155 299.518 58.3155 cv
300.193 58.3155 300.742 57.767 300.742 57.0909 cv
300.742 56.4145 300.193 55.8662 299.518 55.8662 cv
294.007 55.8662 mo
293.331 55.8662 292.782 56.4145 292.782 57.0909 cv
292.782 57.767 293.331 58.3155 294.007 58.3155 cv
294.684 58.3155 295.231 57.767 295.231 57.0909 cv
295.231 56.4145 294.684 55.8662 294.007 55.8662 cv
288.497 55.8662 mo
287.82 55.8662 287.272 56.4145 287.272 57.0909 cv
287.272 57.767 287.82 58.3155 288.497 58.3155 cv
289.173 58.3155 289.721 57.767 289.721 57.0909 cv
289.721 56.4145 289.173 55.8662 288.497 55.8662 cv
282.986 55.8662 mo
282.31 55.8662 281.762 56.4145 281.762 57.0909 cv
281.762 57.767 282.31 58.3155 282.986 58.3155 cv
283.663 58.3155 284.211 57.767 284.211 57.0909 cv
284.211 56.4145 283.663 55.8662 282.986 55.8662 cv
277.477 55.8662 mo
276.8 55.8662 276.252 56.4145 276.252 57.0909 cv
276.252 57.767 276.8 58.3155 277.477 58.3155 cv
278.152 58.3155 278.701 57.767 278.701 57.0909 cv
278.701 56.4145 278.152 55.8662 277.477 55.8662 cv
331.532 40.8712 mo
269.388 40.8712 li
269.388 21.1421 li
358.836 21.1421 li
358.836 31.1762 li
303.212 31.1762 li
303.212 35.8268 li
359.393 35.8268 li
359.393 36.2567 li
331.532 36.2567 li
331.532 40.8712 li
432.2 36.2567 mo
408.057 36.2567 li
408.057 33.8673 li
395.776 33.8673 li
395.776 36.2567 li
389.864 36.2567 li
389.864 33.8673 li
377.585 33.8673 li
377.585 36.2567 li
371.672 36.2567 li
371.672 33.8673 li
363.864 33.8673 li
363.864 32.7026 li
371.672 32.7026 li
371.672 31.2782 li
377.585 31.2782 li
377.585 32.7026 li
389.864 32.7026 li
389.864 31.2782 li
395.776 31.2782 li
395.776 32.7026 li
408.057 32.7026 li
408.057 31.2782 li
432.2 31.2782 li
432.2 36.2567 li
0 0 .0941176 rgb
f
432.2 41.9648 mo
408.057 41.9648 li
408.057 41.0352 li
395.776 41.0352 li
395.776 41.9648 li
389.864 41.9648 li
389.864 41.0352 li
377.585 41.0352 li
377.585 41.9648 li
373.502 41.9648 li
373.502 40.8712 li
331.532 40.8712 li
331.532 36.2567 li
359.393 36.2567 li
359.393 36.2865 li
371.672 36.2865 li
371.672 36.2567 li
377.585 36.2567 li
377.585 36.2865 li
389.864 36.2865 li
389.864 36.2567 li
395.776 36.2567 li
395.776 36.2865 li
408.057 36.2865 li
408.057 36.2567 li
432.2 36.2567 li
432.2 41.9648 li
395.776 37.4511 mo
395.776 39.8706 li
408.057 39.8706 li
408.057 37.4511 li
395.776 37.4511 li
377.585 37.4511 mo
377.585 39.8706 li
389.864 39.8706 li
389.864 37.4511 li
377.585 37.4511 li
359.393 37.4511 mo
359.393 39.8706 li
371.672 39.8706 li
371.672 37.4511 li
359.393 37.4511 li
1 .027451 .356863 rgb
f
432.2 31.2782 mo
408.057 31.2782 li
408.057 30.2832 li
395.776 30.2832 li
395.776 31.2782 li
389.864 31.2782 li
389.864 30.2832 li
377.585 30.2832 li
377.585 31.2782 li
371.672 31.2782 li
371.672 30.2832 li
359.393 30.2832 li
359.393 31.1762 li
358.836 31.1762 li
358.836 21.1421 li
398.992 21.1421 li
398.992 25.0278 li
432.2 25.0278 li
432.2 31.2782 li
395.776 26.6993 mo
395.776 29.1181 li
408.057 29.1181 li
408.057 26.6993 li
395.776 26.6993 li
377.585 26.6993 mo
377.585 29.1181 li
389.864 29.1181 li
389.864 26.6993 li
377.585 26.6993 li
359.393 26.6993 mo
359.393 29.1181 li
371.672 29.1181 li
371.672 26.6993 li
359.393 26.6993 li
.00392157 .00392157 .113725 rgb
f
432.2 25.0278 mo
398.992 25.0278 li
398.992 21.1421 li
432.2 21.1421 li
432.2 25.0278 li
.0196078 .0196078 .2 rgb
f
269.388 21.1421 mo
253.566 21.1421 li
253.192 20.2319 252.297 19.5909 251.252 19.5909 cv
250.207 19.5909 249.312 20.2319 248.938 21.1421 cv
245.554 21.1421 li
245.554 12.6641 li
249.659 12.6641 li
249.105 13.1226 248.752 13.8154 248.752 14.5909 cv
248.752 15.9717 249.871 17.0908 251.252 17.0908 cv
252.633 17.0908 253.752 15.9717 253.752 14.5909 cv
253.752 13.8154 253.399 13.1226 252.845 12.6641 cv
269.388 12.6641 li
269.388 21.1421 li
269.388 11.9419 mo
245.554 11.9419 li
245.554 1.35737 li
249.483 1.35737 li
249.935 1.81053 250.561 2.09093 251.252 2.09093 cv
251.943 2.09093 252.568 1.81053 253.021 1.35737 cv
269.388 1.35737 li
269.388 11.9419 li
251.252 4.59079 mo
249.871 4.59079 248.752 5.70985 248.752 7.09088 cv
248.752 8.47125 249.871 9.59075 251.252 9.59075 cv
252.633 9.59075 253.752 8.47125 253.752 7.09088 cv
253.752 5.70985 252.633 4.59079 251.252 4.59079 cv
0 0 0 rgb
f
358.836 21.1421 mo
269.388 21.1421 li
269.388 12.6641 li
269.923 12.6641 li
269.923 12.728 li
278.738 12.728 li
278.738 12.6641 li
280.053 12.6641 li
280.053 11.9419 li
269.388 11.9419 li
269.388 1.35737 li
335.1 1.35737 li
335.1 0 li
358.836 0 li
358.836 21.1421 li
296.043 11.9916 mo
296.043 12.728 li
304.858 12.728 li
304.858 11.9916 li
296.043 11.9916 li
282.983 11.9916 mo
282.983 12.728 li
291.799 12.728 li
291.799 11.9916 li
282.983 11.9916 li
296.043 10.9015 mo
296.043 11.6372 li
304.858 11.6372 li
304.858 10.9015 li
296.043 10.9015 li
282.983 10.9015 mo
282.983 11.6372 li
291.799 11.6372 li
291.799 10.9015 li
282.983 10.9015 li
269.923 10.9015 mo
269.923 11.6372 li
278.738 11.6372 li
278.738 10.9015 li
269.923 10.9015 li
296.043 9.81044 mo
296.043 10.5468 li
304.858 10.5468 li
304.858 9.81044 li
296.043 9.81044 li
282.983 9.81044 mo
282.983 10.5468 li
291.799 10.5468 li
291.799 9.81044 li
282.983 9.81044 li
269.923 9.81044 mo
269.923 10.5468 li
278.738 10.5468 li
278.738 9.81044 li
269.923 9.81044 li
296.043 8.72029 mo
296.043 9.45604 li
304.858 9.45604 li
304.858 8.72029 li
296.043 8.72029 li
282.983 8.72029 mo
282.983 9.45604 li
291.799 9.45604 li
291.799 8.72029 li
282.983 8.72029 li
269.923 8.72029 mo
269.923 9.45604 li
278.738 9.45604 li
278.738 8.72029 li
269.923 8.72029 li
296.043 7.62993 mo
296.043 8.36567 li
304.858 8.36567 li
304.858 7.62993 li
296.043 7.62993 li
282.983 7.62993 mo
282.983 8.36567 li
291.799 8.36567 li
291.799 7.62993 li
282.983 7.62993 li
269.923 7.62993 mo
269.923 8.36567 li
278.738 8.36567 li
278.738 7.62993 li
269.923 7.62993 li
0 0 .0941176 rgb
f
398.992 21.1421 mo
358.836 21.1421 li
358.836 0 li
398.992 0 li
398.992 21.1421 li
.00392157 .00392157 .113725 rgb
f
432.2 21.1421 mo
398.992 21.1421 li
398.992 0 li
432.2 0 li
432.2 21.1421 li
.0196078 .0196078 .2 rgb
f
269.388 1.35737 mo
253.021 1.35737 li
253.381 .996404 253.632 .525776 253.719 0 cv
269.388 0 li
269.388 1.35737 li
249.483 1.35737 mo
245.554 1.35737 li
245.554 0 li
248.785 0 li
248.872 .525776 249.123 .996404 249.483 1.35737 cv
.623529 .227451 .337255 rgb
f
335.1 1.35737 mo
269.388 1.35737 li
269.388 0 li
335.1 0 li
335.1 1.35737 li
.623529 .227451 .4 rgb
f
304.858 12.728 mo
296.043 12.728 li
296.043 11.9916 li
304.858 11.9916 li
304.858 12.728 li
291.799 12.728 mo
282.983 12.728 li
282.983 11.9916 li
291.799 11.9916 li
291.799 12.728 li
278.738 12.728 mo
269.923 12.728 li
269.923 12.6641 li
278.738 12.6641 li
278.738 12.728 li
304.858 11.6372 mo
296.043 11.6372 li
296.043 10.9015 li
304.858 10.9015 li
304.858 11.6372 li
291.799 11.6372 mo
282.983 11.6372 li
282.983 10.9015 li
291.799 10.9015 li
291.799 11.6372 li
278.738 11.6372 mo
269.923 11.6372 li
269.923 10.9015 li
278.738 10.9015 li
278.738 11.6372 li
304.858 10.5468 mo
296.043 10.5468 li
296.043 9.81044 li
304.858 9.81044 li
304.858 10.5468 li
291.799 10.5468 mo
282.983 10.5468 li
282.983 9.81044 li
291.799 9.81044 li
291.799 10.5468 li
278.738 10.5468 mo
269.923 10.5468 li
269.923 9.81044 li
278.738 9.81044 li
278.738 10.5468 li
304.858 9.45604 mo
296.043 9.45604 li
296.043 8.72029 li
304.858 8.72029 li
304.858 9.45604 li
291.799 9.45604 mo
282.983 9.45604 li
282.983 8.72029 li
291.799 8.72029 li
291.799 9.45604 li
278.738 9.45604 mo
269.923 9.45604 li
269.923 8.72029 li
278.738 8.72029 li
278.738 9.45604 li
304.858 8.36567 mo
296.043 8.36567 li
296.043 7.62993 li
304.858 7.62993 li
304.858 8.36567 li
291.799 8.36567 mo
282.983 8.36567 li
282.983 7.62993 li
291.799 7.62993 li
291.799 8.36567 li
278.738 8.36567 mo
269.923 8.36567 li
269.923 7.62993 li
278.738 7.62993 li
278.738 8.36567 li
.2 0 .121569 rgb
f
269.388 12.6641 mo
252.845 12.6641 li
252.413 12.306 251.857 12.0908 251.252 12.0908 cv
250.646 12.0908 250.091 12.306 249.659 12.6641 cv
245.554 12.6641 li
245.554 11.9419 li
269.388 11.9419 li
269.388 12.6641 li
.121569 .847059 .839216 rgb
f
280.053 12.6641 mo
278.738 12.6641 li
278.738 11.9916 li
269.923 11.9916 li
269.923 12.6641 li
269.388 12.6641 li
269.388 11.9419 li
280.053 11.9419 li
280.053 12.6641 li
.121569 .847059 .854902 rgb
f
278.738 12.6641 mo
269.923 12.6641 li
269.923 11.9916 li
278.738 11.9916 li
278.738 12.6641 li
.298039 .847059 .858823 rgb
f
245.554 71.107 mo
222.214 71.107 li
222.214 58.602 li
244.237 58.602 li
244.237 21.1421 li
245.554 21.1421 li
245.554 71.107 li
0 0 .101961 rgb
f
244.237 58.602 mo
222.214 58.602 li
222.214 41.0801 li
228.681 41.0801 li
228.681 35.8145 li
222.214 35.8145 li
222.214 31.4088 li
229.802 31.4088 li
229.802 31.2782 li
243.819 31.2782 li
243.819 21.1421 li
244.237 21.1421 li
244.237 58.602 li
0 0 .188235 rgb
f
243.819 31.2782 mo
229.802 31.2782 li
229.802 26.4752 li
222.214 26.4752 li
222.214 21.1421 li
243.819 21.1421 li
243.819 31.2782 li
.00392157 .00392157 .203922 rgb
f
229.802 31.4088 mo
222.214 31.4088 li
222.214 31.2782 li
229.802 31.2782 li
229.802 31.4088 li
0 .254902 .862745 rgb
f
229.802 31.2782 mo
222.214 31.2782 li
222.214 26.4752 li
229.802 26.4752 li
229.802 31.2782 li
.00392157 .258824 .866667 rgb
f
245.554 21.1421 mo
244.237 21.1421 li
244.237 12.6641 li
245.554 12.6641 li
245.554 21.1421 li
245.554 11.9419 mo
244.237 11.9419 li
244.237 1.35737 li
245.554 1.35737 li
245.554 11.9419 li
0 0 .101961 rgb
f
244.237 21.1421 mo
243.819 21.1421 li
243.819 12.6641 li
244.237 12.6641 li
244.237 21.1421 li
244.237 11.9419 mo
243.819 11.9419 li
243.819 1.35737 li
244.237 1.35737 li
244.237 11.9419 li
0 0 .188235 rgb
f
243.819 21.1421 mo
222.214 21.1421 li
222.214 12.6641 li
243.819 12.6641 li
243.819 21.1421 li
243.819 11.9419 mo
222.214 11.9419 li
222.214 0 li
224.7 0 li
224.7 1.35737 li
243.819 1.35737 li
243.819 11.9419 li
.00392157 .00392157 .203922 rgb
f
245.554 1.35737 mo
244.237 1.35737 li
244.237 0 li
245.554 0 li
245.554 1.35737 li
.623529 .227451 .403922 rgb
f
244.237 1.35737 mo
243.819 1.35737 li
243.819 0 li
244.237 0 li
244.237 1.35737 li
.623529 .227451 .462745 rgb
f
243.819 1.35737 mo
224.7 1.35737 li
224.7 0 li
243.819 0 li
243.819 1.35737 li
.623529 .231373 .470588 rgb
f
245.554 12.6641 mo
244.237 12.6641 li
244.237 11.9419 li
245.554 11.9419 li
245.554 12.6641 li
.121569 .847059 .854902 rgb
f
244.237 12.6641 mo
243.819 12.6641 li
243.819 11.9419 li
244.237 11.9419 li
244.237 12.6641 li
.121569 .847059 .870588 rgb
f
243.819 12.6641 mo
222.214 12.6641 li
222.214 11.9419 li
243.819 11.9419 li
243.819 12.6641 li
.12549 .847059 .87451 rgb
f
228.681 41.0801 mo
222.214 41.0801 li
222.214 35.8145 li
228.681 35.8145 li
228.681 41.0801 li
0 1 .984314 rgb
f
480 71.107 mo
459.76 71.107 li
459.76 67.7993 li
457.939 67.7993 li
457.939 71.107 li
457.062 71.107 li
457.062 67.7993 li
455.241 67.7993 li
455.241 71.107 li
454.636 71.107 li
454.636 67.3897 li
438.265 67.3897 li
438.265 71.107 li
432.2 71.107 li
432.2 58.602 li
480 58.602 li
480 71.107 li
457.939 58.8403 mo
457.939 64.8877 li
459.76 64.8877 li
459.76 58.8403 li
457.939 58.8403 li
455.241 58.8403 mo
455.241 64.8877 li
457.062 64.8877 li
457.062 58.8403 li
455.241 58.8403 li
452.544 58.8403 mo
452.544 64.8877 li
454.364 64.8877 li
454.364 58.8403 li
452.544 58.8403 li
0 0 0 rgb
f
480 58.602 mo
432.2 58.602 li
432.2 41.9648 li
452.544 41.9648 li
452.544 46.9698 li
454.364 46.9698 li
454.364 41.9648 li
455.241 41.9648 li
455.241 46.9698 li
457.062 46.9698 li
457.062 40.9218 li
455.582 40.9218 li
455.582 38.0103 li
457.062 38.0103 li
457.062 35.7037 li
457.939 35.7037 li
457.939 38.0103 li
459.76 38.0103 li
459.76 35.7037 li
480 35.7037 li
480 58.602 li
457.939 49.8808 mo
457.939 55.9286 li
459.76 55.9286 li
459.76 49.8808 li
457.939 49.8808 li
455.241 49.8808 mo
455.241 55.9286 li
457.062 55.9286 li
457.062 49.8808 li
455.241 49.8808 li
452.544 49.8808 mo
452.544 55.9286 li
454.364 55.9286 li
454.364 49.8808 li
452.544 49.8808 li
457.939 40.9218 mo
457.939 46.9698 li
459.76 46.9698 li
459.76 40.9218 li
457.939 40.9218 li
455.241 36.2567 mo
454.364 36.2567 li
454.364 35.7037 li
455.241 35.7037 li
455.241 36.2567 li
452.544 36.2567 mo
432.2 36.2567 li
432.2 31.2782 li
442.488 31.2782 li
442.488 35.7037 li
452.544 35.7037 li
452.544 36.2567 li
0 0 .0941176 rgb
f
455.241 41.9648 mo
454.364 41.9648 li
454.364 40.9218 li
452.544 40.9218 li
452.544 41.9648 li
432.2 41.9648 li
432.2 36.2567 li
452.544 36.2567 li
452.544 38.0103 li
454.364 38.0103 li
454.364 36.2567 li
455.241 36.2567 li
455.241 38.0103 li
455.582 38.0103 li
455.582 40.9218 li
455.241 40.9218 li
455.241 41.9648 li
1 .027451 .356863 rgb
f
442.488 31.2782 mo
432.2 31.2782 li
432.2 25.0278 li
442.488 25.0278 li
442.488 31.2782 li
.00392157 .00392157 .113725 rgb
f
442.488 25.0278 mo
432.2 25.0278 li
432.2 21.1421 li
442.488 21.1421 li
442.488 25.0278 li
.0196078 .0196078 .2 rgb
f
442.488 21.1421 mo
432.2 21.1421 li
432.2 0 li
442.488 0 li
442.488 21.1421 li
f
459.76 71.107 mo
457.939 71.107 li
457.939 67.7993 li
459.76 67.7993 li
459.76 71.107 li
457.062 71.107 mo
455.241 71.107 li
455.241 67.7993 li
457.062 67.7993 li
457.062 71.107 li
459.76 64.8877 mo
457.939 64.8877 li
457.939 58.8403 li
459.76 58.8403 li
459.76 64.8877 li
457.062 64.8877 mo
455.241 64.8877 li
455.241 58.8403 li
457.062 58.8403 li
457.062 64.8877 li
454.364 64.8877 mo
452.544 64.8877 li
452.544 58.8403 li
454.364 58.8403 li
454.364 64.8877 li
.12549 .0313725 .0431373 rgb
f
459.76 55.9286 mo
457.939 55.9286 li
457.939 49.8808 li
459.76 49.8808 li
459.76 55.9286 li
457.062 55.9286 mo
455.241 55.9286 li
455.241 49.8808 li
457.062 49.8808 li
457.062 55.9286 li
454.364 55.9286 mo
452.544 55.9286 li
452.544 49.8808 li
454.364 49.8808 li
454.364 55.9286 li
459.76 46.9698 mo
457.939 46.9698 li
457.939 40.9218 li
459.76 40.9218 li
459.76 46.9698 li
457.062 46.9698 mo
455.241 46.9698 li
455.241 41.9648 li
455.582 41.9648 li
455.582 40.9218 li
457.062 40.9218 li
457.062 46.9698 li
.12549 .0313725 .133333 rgb
f
455.582 41.9648 mo
455.241 41.9648 li
455.241 40.9218 li
455.582 40.9218 li
455.582 41.9648 li
1 .054902 .384314 rgb
f
454.364 46.9698 mo
452.544 46.9698 li
452.544 41.9648 li
454.364 41.9648 li
454.364 46.9698 li
.12549 .0313725 .133333 rgb
f
454.364 41.9648 mo
452.544 41.9648 li
452.544 40.9218 li
454.364 40.9218 li
454.364 41.9648 li
1 .054902 .384314 rgb
f
459.76 38.0103 mo
457.939 38.0103 li
457.939 35.7037 li
459.76 35.7037 li
459.76 38.0103 li
457.062 38.0103 mo
455.582 38.0103 li
455.582 36.2567 li
455.241 36.2567 li
455.241 35.7037 li
457.062 35.7037 li
457.062 38.0103 li
.12549 .0313725 .133333 rgb
f
455.582 38.0103 mo
455.241 38.0103 li
455.241 36.2567 li
455.582 36.2567 li
455.582 38.0103 li
1 .054902 .384314 rgb
f
454.364 36.2567 mo
452.544 36.2567 li
452.544 35.7037 li
454.364 35.7037 li
454.364 36.2567 li
.12549 .0313725 .133333 rgb
f
454.364 38.0103 mo
452.544 38.0103 li
452.544 36.2567 li
454.364 36.2567 li
454.364 38.0103 li
1 .054902 .384314 rgb
f
454.636 71.107 mo
454.364 71.107 li
454.364 67.7993 li
452.544 67.7993 li
452.544 71.107 li
438.265 71.107 li
438.265 67.3897 li
454.636 67.3897 li
454.636 71.107 li
.0156863 1 .984314 rgb
f
454.364 71.107 mo
452.544 71.107 li
452.544 67.7993 li
454.364 67.7993 li
454.364 71.107 li
.137255 1 .984314 rgb
f
298.265 71.107 mo
294.397 71.107 li
294.855 70.5478 295.551 70.191 296.331 70.191 cv
297.111 70.191 297.807 70.5478 298.265 71.107 cv
296.331 67.6909 mo
294.95 67.6909 293.831 66.5712 293.831 65.1908 cv
293.831 63.81 294.95 62.691 296.331 62.691 cv
297.712 62.691 298.831 63.81 298.831 65.1908 cv
298.831 66.5712 297.712 67.6909 296.331 67.6909 cv
.0509804 0 .0470588 rgb
f
251.252 32.0909 mo
249.871 32.0909 248.752 30.9716 248.752 29.5908 cv
248.752 28.21 249.871 27.0909 251.252 27.0909 cv
252.633 27.0909 253.752 28.21 253.752 29.5908 cv
253.752 30.9716 252.633 32.0909 251.252 32.0909 cv
251.252 24.5908 mo
249.871 24.5908 248.752 23.4718 248.752 22.0907 cv
248.752 21.7549 248.818 21.4346 248.938 21.1421 cv
253.566 21.1421 li
253.686 21.4346 253.752 21.7549 253.752 22.0907 cv
253.752 23.4718 252.633 24.5908 251.252 24.5908 cv
.0862745 .027451 .0862745 rgb
f
253.566 21.1421 mo
248.938 21.1421 li
249.312 20.2319 250.207 19.5909 251.252 19.5909 cv
252.297 19.5909 253.192 20.2319 253.566 21.1421 cv
251.252 17.0908 mo
249.871 17.0908 248.752 15.9717 248.752 14.5909 cv
248.752 13.8154 249.105 13.1226 249.659 12.6641 cv
252.845 12.6641 li
253.399 13.1226 253.752 13.8154 253.752 14.5909 cv
253.752 15.9717 252.633 17.0908 251.252 17.0908 cv
f
252.845 12.6641 mo
249.659 12.6641 li
250.091 12.306 250.646 12.0908 251.252 12.0908 cv
251.857 12.0908 252.413 12.306 252.845 12.6641 cv
.196078 .85098 .854902 rgb
f
251.252 9.59075 mo
249.871 9.59075 248.752 8.47125 248.752 7.09088 cv
248.752 5.70985 249.871 4.59079 251.252 4.59079 cv
252.633 4.59079 253.752 5.70985 253.752 7.09088 cv
253.752 8.47125 252.633 9.59075 251.252 9.59075 cv
251.252 2.09093 mo
250.561 2.09093 249.935 1.81053 249.483 1.35737 cv
253.021 1.35737 li
252.568 1.81053 251.943 2.09093 251.252 2.09093 cv
.0862745 .027451 .0862745 rgb
f
253.021 1.35737 mo
249.483 1.35737 li
249.123 .996404 248.872 .525776 248.785 0 cv
253.719 0 li
253.632 .525776 253.381 .996404 253.021 1.35737 cv
.654902 .25098 .396078 rgb
f
305.027 58.3155 mo
304.351 58.3155 303.803 57.767 303.803 57.0909 cv
303.803 56.4145 304.351 55.8662 305.027 55.8662 cv
305.704 55.8662 306.252 56.4145 306.252 57.0909 cv
306.252 57.767 305.704 58.3155 305.027 58.3155 cv
299.518 58.3155 mo
298.841 58.3155 298.293 57.767 298.293 57.0909 cv
298.293 56.4145 298.841 55.8662 299.518 55.8662 cv
300.193 55.8662 300.742 56.4145 300.742 57.0909 cv
300.742 57.767 300.193 58.3155 299.518 58.3155 cv
294.007 58.3155 mo
293.331 58.3155 292.782 57.767 292.782 57.0909 cv
292.782 56.4145 293.331 55.8662 294.007 55.8662 cv
294.684 55.8662 295.231 56.4145 295.231 57.0909 cv
295.231 57.767 294.684 58.3155 294.007 58.3155 cv
288.497 58.3155 mo
287.82 58.3155 287.272 57.767 287.272 57.0909 cv
287.272 56.4145 287.82 55.8662 288.497 55.8662 cv
289.173 55.8662 289.721 56.4145 289.721 57.0909 cv
289.721 57.767 289.173 58.3155 288.497 58.3155 cv
282.986 58.3155 mo
282.31 58.3155 281.762 57.767 281.762 57.0909 cv
281.762 56.4145 282.31 55.8662 282.986 55.8662 cv
283.663 55.8662 284.211 56.4145 284.211 57.0909 cv
284.211 57.767 283.663 58.3155 282.986 58.3155 cv
277.477 58.3155 mo
276.8 58.3155 276.252 57.767 276.252 57.0909 cv
276.252 56.4145 276.8 55.8662 277.477 55.8662 cv
278.152 55.8662 278.701 56.4145 278.701 57.0909 cv
278.701 57.767 278.152 58.3155 277.477 58.3155 cv
.0313725 0 .0980392 rgb
f
276.78 71.107 mo
275.438 71.107 li
274.383 70.8137 273.608 69.8462 273.608 68.6983 cv
273.608 67.3175 274.728 66.1982 276.109 66.1982 cv
277.489 66.1982 278.609 67.3175 278.609 68.6983 cv
278.609 69.8462 277.835 70.8137 276.78 71.107 cv
.196078 0 .239216 rgb
f
408.057 43.4541 mo
395.776 43.4541 li
395.776 41.9648 li
408.057 41.9648 li
408.057 43.4541 li
.2 0 .121569 rgb
f
408.057 41.9648 mo
395.776 41.9648 li
395.776 41.0352 li
408.057 41.0352 li
408.057 41.9648 li
1 .027451 .376471 rgb
f
389.864 43.4541 mo
377.585 43.4541 li
377.585 41.9648 li
389.864 41.9648 li
389.864 43.4541 li
.2 0 .121569 rgb
f
389.864 41.9648 mo
377.585 41.9648 li
377.585 41.0352 li
389.864 41.0352 li
389.864 41.9648 li
1 .027451 .376471 rgb
f
371.672 43.4541 mo
359.393 43.4541 li
359.393 43.2447 li
371.672 43.2447 li
371.672 43.4541 li
.2 0 .121569 rgb
f
408.057 39.8706 mo
395.776 39.8706 li
395.776 37.4511 li
408.057 37.4511 li
408.057 39.8706 li
389.864 39.8706 mo
377.585 39.8706 li
377.585 37.4511 li
389.864 37.4511 li
389.864 39.8706 li
371.672 39.8706 mo
359.393 39.8706 li
359.393 37.4511 li
371.672 37.4511 li
371.672 39.8706 li
1 .027451 .376471 rgb
f
408.057 36.2567 mo
395.776 36.2567 li
395.776 33.8673 li
408.057 33.8673 li
408.057 36.2567 li
.2 0 .121569 rgb
f
408.057 36.2865 mo
395.776 36.2865 li
395.776 36.2567 li
408.057 36.2567 li
408.057 36.2865 li
1 .027451 .376471 rgb
f
389.864 36.2567 mo
377.585 36.2567 li
377.585 33.8673 li
389.864 33.8673 li
389.864 36.2567 li
.2 0 .121569 rgb
f
389.864 36.2865 mo
377.585 36.2865 li
377.585 36.2567 li
389.864 36.2567 li
389.864 36.2865 li
1 .027451 .376471 rgb
f
371.672 36.2567 mo
359.393 36.2567 li
359.393 35.8268 li
363.864 35.8268 li
363.864 33.8673 li
371.672 33.8673 li
371.672 36.2567 li
.2 0 .121569 rgb
f
371.672 36.2865 mo
359.393 36.2865 li
359.393 36.2567 li
371.672 36.2567 li
371.672 36.2865 li
1 .027451 .376471 rgb
f
408.057 32.7026 mo
395.776 32.7026 li
395.776 31.2782 li
408.057 31.2782 li
408.057 32.7026 li
.2 0 .121569 rgb
f
408.057 31.2782 mo
395.776 31.2782 li
395.776 30.2832 li
408.057 30.2832 li
408.057 31.2782 li
.203922 .00392157 .141176 rgb
f
389.864 32.7026 mo
377.585 32.7026 li
377.585 31.2782 li
389.864 31.2782 li
389.864 32.7026 li
.2 0 .121569 rgb
f
389.864 31.2782 mo
377.585 31.2782 li
377.585 30.2832 li
389.864 30.2832 li
389.864 31.2782 li
.203922 .00392157 .141176 rgb
f
371.672 32.7026 mo
363.864 32.7026 li
363.864 31.2782 li
371.672 31.2782 li
371.672 32.7026 li
.2 0 .121569 rgb
f
371.672 31.2782 mo
363.864 31.2782 li
363.864 31.1762 li
359.393 31.1762 li
359.393 30.2832 li
371.672 30.2832 li
371.672 31.2782 li
408.057 29.1181 mo
395.776 29.1181 li
395.776 26.6993 li
408.057 26.6993 li
408.057 29.1181 li
389.864 29.1181 mo
377.585 29.1181 li
377.585 26.6993 li
389.864 26.6993 li
389.864 29.1181 li
371.672 29.1181 mo
359.393 29.1181 li
359.393 26.6993 li
371.672 26.6993 li
371.672 29.1181 li
.203922 .00392157 .141176 rgb
f
269.388 43.2447 mo
263.104 43.2447 li
263.104 40.8712 li
269.388 40.8712 li
269.388 43.2447 li
0 .898039 .886274 rgb
f
373.502 43.2447 mo
371.672 43.2447 li
371.672 41.9648 li
373.502 41.9648 li
373.502 43.2447 li
359.393 43.2447 mo
269.388 43.2447 li
269.388 40.8712 li
331.532 40.8712 li
331.532 41.9648 li
359.393 41.9648 li
359.393 43.2447 li
0 .898039 .898039 rgb
f
373.502 41.9648 mo
371.672 41.9648 li
371.672 41.0352 li
359.393 41.0352 li
359.393 41.9648 li
331.532 41.9648 li
331.532 40.8712 li
373.502 40.8712 li
373.502 41.9648 li
1 .901961 .92549 rgb
f
371.672 43.2447 mo
359.393 43.2447 li
359.393 41.9648 li
371.672 41.9648 li
371.672 43.2447 li
.2 .898039 .901961 rgb
f
371.672 41.9648 mo
359.393 41.9648 li
359.393 41.0352 li
371.672 41.0352 li
371.672 41.9648 li
1 .901961 .929412 rgb
f
359.393 35.8268 mo
303.212 35.8268 li
303.212 31.1762 li
358.836 31.1762 li
358.836 31.2782 li
359.393 31.2782 li
359.393 32.7026 li
363.864 32.7026 li
363.864 33.8673 li
359.393 33.8673 li
359.393 35.8268 li
.0431373 .14902 .439216 rgb
f
359.393 31.2782 mo
358.836 31.2782 li
358.836 31.1762 li
359.393 31.1762 li
359.393 31.2782 li
.0470588 .152941 .45098 rgb
f
363.864 35.8268 mo
359.393 35.8268 li
359.393 33.8673 li
363.864 33.8673 li
363.864 35.8268 li
363.864 32.7026 mo
359.393 32.7026 li
359.393 31.2782 li
363.864 31.2782 li
363.864 32.7026 li
.235294 .14902 .454902 rgb
f
363.864 31.2782 mo
359.393 31.2782 li
359.393 31.1762 li
363.864 31.1762 li
363.864 31.2782 li
.239216 .152941 .466667 rgb
f
480 35.7037 mo
459.76 35.7037 li
459.76 31.963 li
457.939 31.963 li
457.939 35.7037 li
457.062 35.7037 li
457.062 31.963 li
455.241 31.963 li
455.241 35.7037 li
454.364 35.7037 li
454.364 31.963 li
452.544 31.963 li
452.544 35.7037 li
442.488 35.7037 li
442.488 31.2782 li
480 31.2782 li
480 35.7037 li
.0352941 .0352941 .188235 rgb
f
480 31.2782 mo
442.488 31.2782 li
442.488 25.0278 li
446.034 25.0278 li
446.034 21.1421 li
462.045 21.1421 li
462.045 0 li
480 0 li
480 20.439 li
475.495 20.439 li
475.495 20.3608 li
462.665 20.3608 li
462.665 25.1548 li
475.495 25.1548 li
475.495 21.1611 li
480 21.1611 li
480 31.2782 li
476.432 11.2916 mo
475.757 11.2916 475.208 11.8398 475.208 12.5162 cv
475.208 13.1924 475.757 13.7406 476.432 13.7406 cv
477.109 13.7406 477.657 13.1924 477.657 12.5162 cv
477.657 11.8398 477.109 11.2916 476.432 11.2916 cv
470.923 11.2916 mo
470.246 11.2916 469.698 11.8398 469.698 12.5162 cv
469.698 13.1924 470.246 13.7406 470.923 13.7406 cv
471.599 13.7406 472.146 13.1924 472.146 12.5162 cv
472.146 11.8398 471.599 11.2916 470.923 11.2916 cv
465.412 11.2916 mo
464.736 11.2916 464.187 11.8398 464.187 12.5162 cv
464.187 13.1924 464.736 13.7406 465.412 13.7406 cv
466.089 13.7406 466.637 13.1924 466.637 12.5162 cv
466.637 11.8398 466.089 11.2916 465.412 11.2916 cv
.0392157 .0392157 .203922 rgb
f
476.432 13.7406 mo
475.757 13.7406 475.208 13.1924 475.208 12.5162 cv
475.208 11.8398 475.757 11.2916 476.432 11.2916 cv
477.109 11.2916 477.657 11.8398 477.657 12.5162 cv
477.657 13.1924 477.109 13.7406 476.432 13.7406 cv
470.923 13.7406 mo
470.246 13.7406 469.698 13.1924 469.698 12.5162 cv
469.698 11.8398 470.246 11.2916 470.923 11.2916 cv
471.599 11.2916 472.146 11.8398 472.146 12.5162 cv
472.146 13.1924 471.599 13.7406 470.923 13.7406 cv
465.412 13.7406 mo
464.736 13.7406 464.187 13.1924 464.187 12.5162 cv
464.187 11.8398 464.736 11.2916 465.412 11.2916 cv
466.089 11.2916 466.637 11.8398 466.637 12.5162 cv
466.637 13.1924 466.089 13.7406 465.412 13.7406 cv
.231373 .0588235 .231373 rgb
f
475.495 25.1548 mo
462.665 25.1548 li
462.665 20.3608 li
475.495 20.3608 li
475.495 20.439 li
469.452 20.439 li
469.452 21.1611 li
475.495 21.1611 li
475.495 25.1548 li
.0392157 .333333 1 rgb
f
446.034 25.0278 mo
442.488 25.0278 li
442.488 21.1421 li
446.034 21.1421 li
446.034 25.0278 li
.054902 .054902 .282353 rgb
f
462.045 21.1421 mo
446.034 21.1421 li
446.034 0 li
462.045 0 li
462.045 21.1421 li
459.902 11.2916 mo
459.226 11.2916 458.678 11.8398 458.678 12.5162 cv
458.678 13.1924 459.226 13.7406 459.902 13.7406 cv
460.578 13.7406 461.127 13.1924 461.127 12.5162 cv
461.127 11.8398 460.578 11.2916 459.902 11.2916 cv
.0392157 .0392157 .203922 rgb
f
459.902 13.7406 mo
459.226 13.7406 458.678 13.1924 458.678 12.5162 cv
458.678 11.8398 459.226 11.2916 459.902 11.2916 cv
460.578 11.2916 461.127 11.8398 461.127 12.5162 cv
461.127 13.1924 460.578 13.7406 459.902 13.7406 cv
.231373 .0588235 .231373 rgb
f
446.034 21.1421 mo
442.488 21.1421 li
442.488 0 li
446.034 0 li
446.034 21.1421 li
.054902 .054902 .282353 rgb
f
459.76 35.7037 mo
457.939 35.7037 li
457.939 31.963 li
459.76 31.963 li
459.76 35.7037 li
457.062 35.7037 mo
455.241 35.7037 li
455.241 31.963 li
457.062 31.963 li
457.062 35.7037 li
.156863 .0666667 .223529 rgb
f
454.364 35.7037 mo
452.544 35.7037 li
452.544 31.963 li
454.364 31.963 li
454.364 35.7037 li
f
480 21.1611 mo
475.495 21.1611 li
475.495 20.439 li
480 20.439 li
480 21.1611 li
.211765 .454902 1 rgb
f
475.495 21.1611 mo
469.452 21.1611 li
469.452 20.439 li
475.495 20.439 li
475.495 21.1611 li
.211765 .619608 1 rgb
f
480 117.821 mo
457.188 117.821 li
457.188 117.528 li
480 117.528 li
480 117.821 li
.901961 .184314 .376471 rgb
f
448.561 100.407 mo
437.154 100.407 li
437.154 95.4414 li
448.561 95.4414 li
448.561 100.407 li
0 .160784 .529412 rgb
f
422.367 108.569 mo
380.541 108.569 li
380.541 95.5728 li
422.367 95.5728 li
422.367 108.569 li
0 0 .00784314 rgb
f
398.992 136.986 mo
394.959 136.986 li
394.959 126.434 li
403.184 126.434 li
403.184 116.673 li
380.541 116.673 li
380.541 108.569 li
422.367 108.569 li
422.367 135.391 li
398.992 135.391 li
398.992 136.986 li
f
403.184 126.434 mo
394.959 126.434 li
394.959 124.955 li
380.541 124.955 li
380.541 116.673 li
403.184 116.673 li
403.184 126.434 li
f
394.959 136.986 mo
380.541 136.986 li
380.541 126.434 li
394.959 126.434 li
394.959 136.986 li
f
394.959 126.434 mo
380.541 126.434 li
380.541 124.955 li
394.959 124.955 li
394.959 126.434 li
f
269.388 139.005 mo
244.237 139.005 li
244.237 138.526 li
243.819 138.526 li
243.819 136.986 li
240.334 136.986 li
240.334 135.416 li
271.927 135.416 li
271.927 138.526 li
269.388 138.526 li
269.388 139.005 li
.427451 .14902 .223529 rgb
f
244.237 139.005 mo
243.819 139.005 li
243.819 138.526 li
244.237 138.526 li
244.237 139.005 li
.427451 .14902 .298039 rgb
f
321.66 138.526 mo
271.927 138.526 li
271.927 135.416 li
318.037 135.416 li
318.196 136.644 319.245 137.591 320.516 137.591 cv
320.81 137.591 321.093 137.54 321.355 137.446 cv
321.339 137.525 321.331 137.607 321.331 137.69 cv
321.331 138.014 321.456 138.308 321.66 138.526 cv
.427451 .14902 .223529 rgb
f
243.819 138.526 mo
240.334 138.526 li
240.334 136.986 li
243.819 136.986 li
243.819 138.526 li
.431373 .152941 .243137 rgb
f
243.819 139.005 mo
240.334 139.005 li
240.334 138.526 li
243.819 138.526 li
243.819 139.005 li
.431373 .152941 .313725 rgb
f
358.506 138.526 mo
351.002 138.526 li
351.206 138.308 351.331 138.014 351.331 137.69 cv
351.331 137.015 350.783 136.467 350.107 136.467 cv
349.431 136.467 348.882 137.015 348.882 137.69 cv
348.882 138.014 349.007 138.308 349.212 138.526 cv
345.492 138.526 li
345.696 138.308 345.821 138.014 345.821 137.69 cv
345.821 137.015 345.272 136.467 344.597 136.467 cv
343.92 136.467 343.372 137.015 343.372 137.69 cv
343.372 138.014 343.497 138.308 343.701 138.526 cv
339.981 138.526 li
340.186 138.308 340.311 138.014 340.311 137.69 cv
340.311 137.015 339.763 136.467 339.087 136.467 cv
338.41 136.467 337.862 137.015 337.862 137.69 cv
337.862 138.014 337.987 138.308 338.192 138.526 cv
334.471 138.526 li
334.676 138.308 334.801 138.014 334.801 137.69 cv
334.801 137.015 334.253 136.467 333.576 136.467 cv
332.899 136.467 332.352 137.015 332.352 137.69 cv
332.352 138.014 332.477 138.308 332.681 138.526 cv
328.961 138.526 li
329.165 138.308 329.29 138.014 329.29 137.69 cv
329.29 137.015 328.742 136.467 328.066 136.467 cv
327.39 136.467 326.842 137.015 326.842 137.69 cv
326.842 138.014 326.967 138.308 327.171 138.526 cv
323.451 138.526 li
323.655 138.308 323.78 138.014 323.78 137.69 cv
323.78 137.03 323.258 136.493 322.603 136.468 cv
322.807 136.158 322.945 135.801 322.995 135.416 cv
358.506 135.416 li
358.506 138.526 li
.427451 .14902 .223529 rgb
f
271.927 139.005 mo
269.388 139.005 li
269.388 138.526 li
271.927 138.526 li
271.927 139.005 li
.427451 .14902 .298039 rgb
f
358.506 139.005 mo
271.927 139.005 li
271.927 138.526 li
321.66 138.526 li
321.884 138.766 322.202 138.915 322.556 138.915 cv
322.909 138.915 323.227 138.766 323.451 138.526 cv
327.171 138.526 li
327.395 138.766 327.713 138.915 328.066 138.915 cv
328.419 138.915 328.737 138.766 328.961 138.526 cv
332.681 138.526 li
332.904 138.766 333.223 138.915 333.576 138.915 cv
333.93 138.915 334.248 138.766 334.471 138.526 cv
338.192 138.526 li
338.415 138.766 338.733 138.915 339.087 138.915 cv
339.44 138.915 339.758 138.766 339.981 138.526 cv
343.701 138.526 li
343.925 138.766 344.243 138.915 344.597 138.915 cv
344.95 138.915 345.268 138.766 345.492 138.526 cv
349.212 138.526 li
349.435 138.766 349.753 138.915 350.107 138.915 cv
350.46 138.915 350.778 138.766 351.002 138.526 cv
358.506 138.526 li
358.506 139.005 li
f
351.002 138.526 mo
349.212 138.526 li
349.007 138.308 348.882 138.014 348.882 137.69 cv
348.882 137.015 349.431 136.467 350.107 136.467 cv
350.783 136.467 351.331 137.015 351.331 137.69 cv
351.331 138.014 351.206 138.308 351.002 138.526 cv
.576471 .14902 .231373 rgb
f
350.107 138.915 mo
349.753 138.915 349.435 138.766 349.212 138.526 cv
351.002 138.526 li
350.778 138.766 350.46 138.915 350.107 138.915 cv
.576471 .14902 .301961 rgb
f
345.492 138.526 mo
343.701 138.526 li
343.497 138.308 343.372 138.014 343.372 137.69 cv
343.372 137.015 343.92 136.467 344.597 136.467 cv
345.272 136.467 345.821 137.015 345.821 137.69 cv
345.821 138.014 345.696 138.308 345.492 138.526 cv
.576471 .14902 .231373 rgb
f
344.597 138.915 mo
344.243 138.915 343.925 138.766 343.701 138.526 cv
345.492 138.526 li
345.268 138.766 344.95 138.915 344.597 138.915 cv
.576471 .14902 .301961 rgb
f
339.981 138.526 mo
338.192 138.526 li
337.987 138.308 337.862 138.014 337.862 137.69 cv
337.862 137.015 338.41 136.467 339.087 136.467 cv
339.763 136.467 340.311 137.015 340.311 137.69 cv
340.311 138.014 340.186 138.308 339.981 138.526 cv
.576471 .14902 .231373 rgb
f
339.087 138.915 mo
338.733 138.915 338.415 138.766 338.192 138.526 cv
339.981 138.526 li
339.758 138.766 339.44 138.915 339.087 138.915 cv
.576471 .14902 .301961 rgb
f
334.471 138.526 mo
332.681 138.526 li
332.477 138.308 332.352 138.014 332.352 137.69 cv
332.352 137.015 332.899 136.467 333.576 136.467 cv
334.253 136.467 334.801 137.015 334.801 137.69 cv
334.801 138.014 334.676 138.308 334.471 138.526 cv
.576471 .14902 .231373 rgb
f
333.576 138.915 mo
333.223 138.915 332.904 138.766 332.681 138.526 cv
334.471 138.526 li
334.248 138.766 333.93 138.915 333.576 138.915 cv
.576471 .14902 .301961 rgb
f
328.961 138.526 mo
327.171 138.526 li
326.967 138.308 326.842 138.014 326.842 137.69 cv
326.842 137.015 327.39 136.467 328.066 136.467 cv
328.742 136.467 329.29 137.015 329.29 137.69 cv
329.29 138.014 329.165 138.308 328.961 138.526 cv
.576471 .14902 .231373 rgb
f
328.066 138.915 mo
327.713 138.915 327.395 138.766 327.171 138.526 cv
328.961 138.526 li
328.737 138.766 328.419 138.915 328.066 138.915 cv
.576471 .14902 .301961 rgb
f
323.451 138.526 mo
321.66 138.526 li
321.456 138.308 321.331 138.014 321.331 137.69 cv
321.331 137.607 321.339 137.525 321.355 137.446 cv
321.87 137.263 322.307 136.916 322.603 136.468 cv
323.258 136.493 323.78 137.03 323.78 137.69 cv
323.78 138.014 323.655 138.308 323.451 138.526 cv
.576471 .14902 .231373 rgb
f
322.556 138.915 mo
322.202 138.915 321.884 138.766 321.66 138.526 cv
323.451 138.526 li
323.227 138.766 322.909 138.915 322.556 138.915 cv
.576471 .14902 .301961 rgb
f
320.516 137.591 mo
319.245 137.591 318.196 136.644 318.037 135.416 cv
322.995 135.416 li
322.945 135.801 322.807 136.158 322.603 136.468 cv
322.587 136.467 322.572 136.467 322.556 136.467 cv
321.962 136.467 321.468 136.887 321.355 137.446 cv
321.093 137.54 320.81 137.591 320.516 137.591 cv
.545098 .172549 .407843 rgb
f
321.355 137.446 mo
321.468 136.887 321.962 136.467 322.556 136.467 cv
322.572 136.467 322.587 136.467 322.603 136.468 cv
322.307 136.916 321.87 137.263 321.355 137.446 cv
.662745 .172549 .415686 rgb
f
480 136.986 mo
446.034 136.986 li
446.034 135.391 li
441.663 135.391 li
441.663 124.955 li
480 124.955 li
480 136.986 li
0 0 0 rgb
f
432.2 136.986 mo
422.367 136.986 li
422.367 135.391 li
432.2 135.391 li
432.2 136.986 li
.0156863 .0156863 .0980392 rgb
f
441.663 136.986 mo
432.2 136.986 li
432.2 135.391 li
441.663 135.391 li
441.663 136.986 li
f
422.367 136.986 mo
398.992 136.986 li
398.992 135.391 li
422.367 135.391 li
422.367 136.986 li
.0156863 .0156863 .105882 rgb
f
446.034 136.986 mo
441.663 136.986 li
441.663 135.391 li
446.034 135.391 li
446.034 136.986 li
.0156863 .0156863 .0980392 rgb
f
380.541 138.526 mo
358.836 138.526 li
358.836 136.986 li
380.541 136.986 li
380.541 138.526 li
.00392157 .00392157 .0235294 rgb
f
398.992 262.065 mo
358.836 262.065 li
358.836 250.209 li
380.541 250.209 li
380.541 260.911 li
398.992 260.911 li
398.992 262.065 li
.00392157 .00392157 .113725 rgb
f
380.541 250.209 mo
358.836 250.209 li
358.836 244.586 li
361.107 244.586 li
361.107 246.439 li
372.515 246.439 li
372.515 244.586 li
380.541 244.586 li
380.541 250.209 li
.00392157 .00392157 .192157 rgb
f
380.541 244.586 mo
372.515 244.586 li
372.515 244.46 li
380.541 244.46 li
380.541 244.586 li
361.107 244.586 mo
358.836 244.586 li
358.836 244.46 li
361.107 244.46 li
361.107 244.586 li
.00392157 .00392157 .27451 rgb
f
380.541 244.46 mo
372.515 244.46 li
372.515 241.475 li
361.107 241.475 li
361.107 244.46 li
358.836 244.46 li
358.836 211.236 li
361.458 211.236 li
361.458 212.85 li
372.715 212.85 li
372.715 211.236 li
378.135 211.236 li
378.135 212.433 li
376.756 212.435 375.64 213.553 375.64 214.933 cv
375.64 216.314 376.759 217.433 378.14 217.433 cv
379.278 217.433 380.239 216.672 380.541 215.63 cv
380.541 221.735 li
380.239 220.694 379.278 219.933 378.14 219.933 cv
376.759 219.933 375.64 221.052 375.64 222.433 cv
375.64 223.813 376.759 224.933 378.14 224.933 cv
379.278 224.933 380.239 224.171 380.541 223.13 cv
380.541 229.235 li
380.239 228.194 379.278 227.433 378.14 227.433 cv
376.759 227.433 375.64 228.552 375.64 229.933 cv
375.64 231.313 376.759 232.433 378.14 232.433 cv
379.278 232.433 380.239 231.671 380.541 230.63 cv
380.541 244.46 li
380.541 214.235 mo
380.375 213.661 380.009 213.173 379.523 212.85 cv
380.541 212.85 li
380.541 214.235 li
f
380.541 212.85 mo
379.523 212.85 li
379.127 212.586 378.651 212.433 378.14 212.433 cv
378.138 212.433 378.136 212.433 378.135 212.433 cv
378.135 211.236 li
380.541 211.236 li
380.541 212.85 li
372.715 212.85 mo
361.458 212.85 li
361.458 211.236 li
372.715 211.236 li
372.715 212.85 li
.0941176 .0156863 .290196 rgb
f
380.541 172.157 mo
358.836 172.157 li
358.836 163.176 li
358.931 163.002 358.984 162.803 358.984 162.591 cv
358.984 162.379 358.931 162.18 358.836 162.007 cv
358.836 156.301 li
380.541 156.301 li
380.541 172.157 li
374.291 161.367 mo
373.614 161.367 373.066 161.915 373.066 162.591 cv
373.066 163.268 373.614 163.815 374.291 163.815 cv
374.967 163.815 375.516 163.268 375.516 162.591 cv
375.516 161.915 374.967 161.367 374.291 161.367 cv
368.78 161.367 mo
368.105 161.367 367.557 161.915 367.557 162.591 cv
367.557 163.268 368.105 163.815 368.78 163.815 cv
369.457 163.815 370.005 163.268 370.005 162.591 cv
370.005 161.915 369.457 161.367 368.78 161.367 cv
363.27 161.367 mo
362.594 161.367 362.046 161.915 362.046 162.591 cv
362.046 163.268 362.594 163.815 363.27 163.815 cv
363.947 163.815 364.495 163.268 364.495 162.591 cv
364.495 161.915 363.947 161.367 363.27 161.367 cv
377.135 151.367 mo
358.836 151.367 li
358.836 147.453 li
380.541 147.453 li
380.541 149.364 li
377.135 149.364 li
377.135 151.367 li
.00392157 .00392157 .113725 rgb
f
380.541 147.453 mo
358.836 147.453 li
358.836 138.526 li
380.541 138.526 li
380.541 147.453 li
f
380.541 183.595 mo
380.252 183.595 li
379.809 182.896 379.028 182.433 378.14 182.433 cv
377.251 182.433 376.471 182.896 376.027 183.595 cv
358.836 183.595 li
358.836 172.157 li
380.541 172.157 li
380.541 183.595 li
.00392157 .00392157 .207843 rgb
f
380.541 156.301 mo
358.836 156.301 li
358.836 151.367 li
377.135 151.367 li
377.135 154.158 li
380.541 154.158 li
380.541 156.301 li
1 .00392157 .356863 rgb
f
376.52 205.528 mo
372.715 205.528 li
372.715 204.064 li
361.458 204.064 li
361.458 205.528 li
358.836 205.528 li
358.836 183.595 li
376.027 183.595 li
375.782 183.982 375.64 184.44 375.64 184.933 cv
375.64 186.313 376.759 187.433 378.14 187.433 cv
379.278 187.433 380.239 186.671 380.541 185.63 cv
380.541 191.735 li
380.239 190.694 379.278 189.933 378.14 189.933 cv
376.759 189.933 375.64 191.052 375.64 192.433 cv
375.64 193.813 376.759 194.933 378.14 194.933 cv
379.278 194.933 380.239 194.172 380.541 193.13 cv
380.541 197.497 li
378.706 197.497 li
378.524 197.455 378.335 197.433 378.14 197.433 cv
376.759 197.433 375.64 198.552 375.64 199.933 cv
375.64 201.312 376.756 202.43 378.135 202.433 cv
378.135 202.997 li
380.541 202.997 li
380.541 204.064 li
378.135 204.064 li
378.135 204.933 li
377.518 204.934 376.955 205.158 376.52 205.528 cv
361.458 200.78 mo
361.458 202.997 li
372.715 202.997 li
372.715 200.78 li
361.458 200.78 li
361.458 197.497 mo
361.458 199.714 li
372.715 199.714 li
372.715 197.497 li
361.458 197.497 li
380.541 200.78 mo
380.492 200.78 li
380.51 200.731 380.526 200.681 380.541 200.63 cv
380.541 200.78 li
380.541 184.235 mo
380.475 184.006 380.377 183.791 380.252 183.595 cv
380.541 183.595 li
380.541 184.235 li
.00392157 .00392157 .27451 rgb
f
380.541 205.528 mo
379.76 205.528 li
379.323 205.157 378.758 204.933 378.14 204.933 cv
378.138 204.933 378.136 204.933 378.135 204.933 cv
378.135 204.064 li
380.541 204.064 li
380.541 205.528 li
372.715 205.528 mo
361.458 205.528 li
361.458 204.064 li
372.715 204.064 li
372.715 205.528 li
.0941176 .0156863 .290196 rgb
f
380.541 202.997 mo
378.135 202.997 li
378.135 202.433 li
378.136 202.433 378.138 202.433 378.14 202.433 cv
379.223 202.433 380.145 201.744 380.492 200.78 cv
380.541 200.78 li
380.541 202.997 li
372.715 202.997 mo
361.458 202.997 li
361.458 200.78 li
372.715 200.78 li
372.715 202.997 li
372.715 199.714 mo
361.458 199.714 li
361.458 197.497 li
372.715 197.497 li
372.715 199.714 li
380.541 199.235 mo
380.291 198.372 379.588 197.701 378.706 197.497 cv
380.541 197.497 li
380.541 199.235 li
f
378.135 211.236 mo
372.715 211.236 li
372.715 210.633 li
361.458 210.633 li
361.458 211.236 li
358.836 211.236 li
358.836 205.528 li
361.458 205.528 li
361.458 206.281 li
372.715 206.281 li
372.715 205.528 li
376.52 205.528 li
375.981 205.987 375.64 206.67 375.64 207.433 cv
375.64 208.814 376.759 209.933 378.14 209.933 cv
378.618 209.933 379.065 209.798 379.445 209.565 cv
380.541 209.565 li
380.541 210.633 li
378.135 210.633 li
378.135 211.236 li
361.458 207.349 mo
361.458 209.565 li
372.715 209.565 li
372.715 207.349 li
361.458 207.349 li
.00392157 1 .988235 rgb
f
380.541 211.236 mo
378.135 211.236 li
378.135 210.633 li
380.541 210.633 li
380.541 211.236 li
372.715 211.236 mo
361.458 211.236 li
361.458 210.633 li
372.715 210.633 li
372.715 211.236 li
.0941176 1 .988235 rgb
f
380.541 209.565 mo
379.445 209.565 li
379.969 209.244 380.366 208.734 380.541 208.13 cv
380.541 209.565 li
372.715 209.565 mo
361.458 209.565 li
361.458 207.349 li
372.715 207.349 li
372.715 209.565 li
f
372.715 206.281 mo
361.458 206.281 li
361.458 205.528 li
372.715 205.528 li
372.715 206.281 li
f
380.541 206.735 mo
380.495 206.577 380.434 206.425 380.359 206.281 cv
380.541 206.281 li
380.541 206.735 li
.00392157 1 .988235 rgb
f
380.541 206.281 mo
380.359 206.281 li
380.209 205.993 380.005 205.737 379.76 205.528 cv
380.541 205.528 li
380.541 206.281 li
.0941176 1 .988235 rgb
f
374.291 163.815 mo
373.614 163.815 373.066 163.268 373.066 162.591 cv
373.066 161.915 373.614 161.367 374.291 161.367 cv
374.967 161.367 375.516 161.915 375.516 162.591 cv
375.516 163.268 374.967 163.815 374.291 163.815 cv
368.78 163.815 mo
368.105 163.815 367.557 163.268 367.557 162.591 cv
367.557 161.915 368.105 161.367 368.78 161.367 cv
369.457 161.367 370.005 161.915 370.005 162.591 cv
370.005 163.268 369.457 163.815 368.78 163.815 cv
363.27 163.815 mo
362.594 163.815 362.046 163.268 362.046 162.591 cv
362.046 161.915 362.594 161.367 363.27 161.367 cv
363.947 161.367 364.495 161.915 364.495 162.591 cv
364.495 163.268 363.947 163.815 363.27 163.815 cv
358.836 163.176 mo
358.836 162.007 li
358.931 162.18 358.984 162.379 358.984 162.591 cv
358.984 162.803 358.931 163.002 358.836 163.176 cv
.678431 .00784314 .113725 rgb
f
372.515 246.439 mo
361.107 246.439 li
361.107 244.586 li
372.515 244.586 li
372.515 246.439 li
1 .00392157 .407843 rgb
f
372.515 244.586 mo
361.107 244.586 li
361.107 244.46 li
372.515 244.46 li
372.515 244.586 li
1 .00392157 .470588 rgb
f
372.515 244.46 mo
361.107 244.46 li
361.107 241.475 li
372.515 241.475 li
372.515 244.46 li
f
398.992 137.195 mo
394.959 137.195 li
394.959 136.986 li
398.992 136.986 li
398.992 137.195 li
.00392157 .00392157 .0313725 rgb
f
398.992 138.526 mo
394.959 138.526 li
394.959 137.195 li
398.992 137.195 li
398.992 138.526 li
.0588235 .345098 1 rgb
f
394.606 138.526 mo
380.541 138.526 li
380.541 136.986 li
394.959 136.986 li
394.959 137.195 li
394.606 137.195 li
394.606 138.526 li
.00392157 .00392157 .0313725 rgb
f
394.959 138.526 mo
394.606 138.526 li
394.606 137.195 li
394.959 137.195 li
394.959 138.526 li
.0588235 .345098 1 rgb
f
398.992 260.911 mo
380.541 260.911 li
380.541 250.209 li
397.786 250.209 li
397.786 244.586 li
398.992 244.586 li
398.992 260.911 li
.00392157 .00392157 .121569 rgb
f
398.992 244.586 mo
397.786 244.586 li
397.786 243.365 li
398.992 243.365 li
398.992 244.586 li
398.992 238.432 mo
397.786 238.432 li
397.786 212.85 li
398.992 212.85 li
398.992 238.432 li
.00392157 .00392157 .215686 rgb
f
398.992 212.85 mo
397.786 212.85 li
397.786 211.236 li
398.992 211.236 li
398.992 212.85 li
.0941176 .0156863 .227451 rgb
f
397.786 250.209 mo
380.541 250.209 li
380.541 244.586 li
397.786 244.586 li
397.786 250.209 li
.00392157 .00392157 .2 rgb
f
397.786 244.586 mo
380.541 244.586 li
380.541 244.46 li
394.959 244.46 li
394.959 212.85 li
397.786 212.85 li
397.786 238.432 li
395.703 238.432 li
395.703 243.365 li
397.786 243.365 li
397.786 244.586 li
.00392157 .00392157 .278431 rgb
f
394.959 244.46 mo
380.541 244.46 li
380.541 230.63 li
380.605 230.409 380.64 230.175 380.64 229.933 cv
380.64 229.691 380.605 229.456 380.541 229.235 cv
380.541 223.13 li
380.605 222.909 380.64 222.675 380.64 222.433 cv
380.64 222.191 380.605 221.956 380.541 221.735 cv
380.541 215.63 li
380.605 215.409 380.64 215.175 380.64 214.933 cv
380.64 214.69 380.605 214.456 380.541 214.235 cv
380.541 212.85 li
389.393 212.85 li
389.393 211.236 li
394.813 211.236 li
394.813 212.85 li
394.959 212.85 li
394.959 244.46 li
f
397.786 212.85 mo
394.959 212.85 li
394.959 211.236 li
397.786 211.236 li
397.786 212.85 li
.0941176 .0156863 .294118 rgb
f
394.959 212.85 mo
394.813 212.85 li
394.813 211.236 li
394.959 211.236 li
394.959 212.85 li
389.393 212.85 mo
380.541 212.85 li
380.541 211.236 li
389.393 211.236 li
389.393 212.85 li
f
398.992 172.157 mo
394.959 172.157 li
394.959 156.301 li
398.992 156.301 li
398.992 172.157 li
398.992 151.367 mo
394.959 151.367 li
394.959 147.453 li
398.992 147.453 li
398.992 151.367 li
.00392157 .00392157 .121569 rgb
f
394.959 172.157 mo
380.541 172.157 li
380.541 156.301 li
394.959 156.301 li
394.959 172.157 li
394.959 151.367 mo
389.964 151.367 li
389.964 149.364 li
380.541 149.364 li
380.541 147.453 li
394.959 147.453 li
394.959 151.367 li
f
398.992 147.453 mo
394.959 147.453 li
394.959 143.129 li
398.992 143.129 li
398.992 147.453 li
f
398.992 143.129 mo
394.959 143.129 li
394.959 138.526 li
398.992 138.526 li
398.992 143.129 li
.0588235 .345098 1 rgb
f
394.959 147.453 mo
380.541 147.453 li
380.541 138.526 li
394.606 138.526 li
394.606 143.129 li
394.959 143.129 li
394.959 147.453 li
.00392157 .00392157 .121569 rgb
f
394.959 143.129 mo
394.606 143.129 li
394.606 138.526 li
394.959 138.526 li
394.959 143.129 li
.0588235 .345098 1 rgb
f
398.992 204.064 mo
397.786 204.064 li
397.786 202.997 li
398.992 202.997 li
398.992 204.064 li
398.992 200.78 mo
397.786 200.78 li
397.786 199.863 li
398.992 199.863 li
398.992 200.78 li
398.992 197.497 mo
397.786 197.497 li
397.786 183.595 li
394.959 183.595 li
394.959 172.157 li
398.992 172.157 li
398.992 197.497 li
.00392157 .00392157 .215686 rgb
f
394.959 183.595 mo
380.541 183.595 li
380.541 172.157 li
394.959 172.157 li
394.959 183.595 li
f
398.992 205.528 mo
397.786 205.528 li
397.786 204.064 li
398.992 204.064 li
398.992 205.528 li
398.992 202.997 mo
397.786 202.997 li
397.786 200.78 li
398.992 200.78 li
398.992 202.997 li
398.992 197.688 mo
397.786 197.688 li
397.786 197.497 li
398.992 197.497 li
398.992 197.688 li
.0941176 .0156863 .227451 rgb
f
398.992 199.863 mo
397.786 199.863 li
397.786 199.714 li
398.992 199.714 li
398.992 199.863 li
.196078 .380392 .505882 rgb
f
398.992 199.714 mo
397.786 199.714 li
397.786 197.688 li
398.992 197.688 li
398.992 199.714 li
.270588 .388235 .517647 rgb
f
398.992 156.301 mo
394.959 156.301 li
394.959 151.367 li
398.992 151.367 li
398.992 156.301 li
1 .00392157 .360784 rgb
f
394.959 156.301 mo
380.541 156.301 li
380.541 154.158 li
389.964 154.158 li
389.964 151.367 li
394.959 151.367 li
394.959 156.301 li
f
397.786 204.064 mo
394.959 204.064 li
394.959 202.997 li
397.786 202.997 li
397.786 204.064 li
397.786 200.78 mo
394.959 200.78 li
394.959 199.863 li
397.786 199.863 li
397.786 200.78 li
397.786 197.497 mo
394.959 197.497 li
394.959 183.595 li
397.786 183.595 li
397.786 197.497 li
.00392157 .00392157 .278431 rgb
f
394.813 205.528 mo
389.393 205.528 li
389.393 204.064 li
380.541 204.064 li
380.541 202.997 li
389.393 202.997 li
389.393 200.78 li
380.541 200.78 li
380.541 200.63 li
380.605 200.409 380.64 200.175 380.64 199.933 cv
380.64 199.859 380.636 199.786 380.63 199.714 cv
389.393 199.714 li
389.393 197.497 li
380.541 197.497 li
380.541 193.13 li
380.605 192.909 380.64 192.675 380.64 192.433 cv
380.64 192.191 380.605 191.956 380.541 191.735 cv
380.541 185.63 li
380.605 185.409 380.64 185.175 380.64 184.933 cv
380.64 184.691 380.605 184.456 380.541 184.235 cv
380.541 183.595 li
394.959 183.595 li
394.959 197.497 li
394.813 197.497 li
394.813 197.688 li
393.135 197.688 li
393.135 199.863 li
394.959 199.863 li
394.959 200.78 li
394.813 200.78 li
394.813 202.997 li
394.959 202.997 li
394.959 204.064 li
394.813 204.064 li
394.813 205.528 li
f
397.786 205.528 mo
394.959 205.528 li
394.959 204.064 li
397.786 204.064 li
397.786 205.528 li
.0941176 .0156863 .294118 rgb
f
394.959 205.528 mo
394.813 205.528 li
394.813 204.064 li
394.959 204.064 li
394.959 205.528 li
389.393 205.528 mo
380.541 205.528 li
380.541 204.064 li
389.393 204.064 li
389.393 205.528 li
f
397.786 202.997 mo
394.959 202.997 li
394.959 200.78 li
397.786 200.78 li
397.786 202.997 li
f
394.959 202.997 mo
394.813 202.997 li
394.813 200.78 li
394.959 200.78 li
394.959 202.997 li
389.393 202.997 mo
380.541 202.997 li
380.541 200.78 li
389.393 200.78 li
389.393 202.997 li
389.393 199.714 mo
380.63 199.714 li
380.616 199.549 380.586 199.389 380.541 199.235 cv
380.541 197.497 li
389.393 197.497 li
389.393 199.714 li
f
397.786 197.688 mo
394.959 197.688 li
394.959 197.497 li
397.786 197.497 li
397.786 197.688 li
f
394.959 197.688 mo
394.813 197.688 li
394.813 197.497 li
394.959 197.497 li
394.959 197.688 li
f
397.786 199.863 mo
394.959 199.863 li
394.959 199.714 li
397.786 199.714 li
397.786 199.863 li
.196078 .380392 .552941 rgb
f
394.959 199.863 mo
393.135 199.863 li
393.135 197.688 li
394.813 197.688 li
394.813 199.714 li
394.959 199.714 li
394.959 199.863 li
f
397.786 199.714 mo
394.959 199.714 li
394.959 197.688 li
397.786 197.688 li
397.786 199.714 li
.270588 .388235 .560784 rgb
f
394.959 199.714 mo
394.813 199.714 li
394.813 197.688 li
394.959 197.688 li
394.959 199.714 li
f
398.992 210.633 mo
397.786 210.633 li
397.786 209.565 li
398.992 209.565 li
398.992 210.633 li
398.992 207.349 mo
397.786 207.349 li
397.786 206.281 li
398.992 206.281 li
398.992 207.349 li
.00392157 1 .984314 rgb
f
398.992 211.236 mo
397.786 211.236 li
397.786 210.633 li
398.992 210.633 li
398.992 211.236 li
398.992 209.565 mo
397.786 209.565 li
397.786 207.349 li
398.992 207.349 li
398.992 209.565 li
398.992 206.281 mo
397.786 206.281 li
397.786 205.528 li
398.992 205.528 li
398.992 206.281 li
.0941176 1 .984314 rgb
f
397.786 210.633 mo
394.959 210.633 li
394.959 209.565 li
397.786 209.565 li
397.786 210.633 li
397.786 207.349 mo
394.959 207.349 li
394.959 206.281 li
397.786 206.281 li
397.786 207.349 li
.00392157 1 .988235 rgb
f
394.813 211.236 mo
389.393 211.236 li
389.393 210.633 li
380.541 210.633 li
380.541 209.565 li
389.393 209.565 li
389.393 207.349 li
380.638 207.349 li
380.631 207.136 380.598 206.931 380.541 206.735 cv
380.541 206.281 li
389.393 206.281 li
389.393 205.528 li
394.813 205.528 li
394.813 206.281 li
394.959 206.281 li
394.959 207.349 li
394.813 207.349 li
394.813 209.565 li
394.959 209.565 li
394.959 210.633 li
394.813 210.633 li
394.813 211.236 li
f
397.786 211.236 mo
394.959 211.236 li
394.959 210.633 li
397.786 210.633 li
397.786 211.236 li
.0941176 1 .988235 rgb
f
394.959 211.236 mo
394.813 211.236 li
394.813 210.633 li
394.959 210.633 li
394.959 211.236 li
389.393 211.236 mo
380.541 211.236 li
380.541 210.633 li
389.393 210.633 li
389.393 211.236 li
f
397.786 209.565 mo
394.959 209.565 li
394.959 207.349 li
397.786 207.349 li
397.786 209.565 li
f
394.959 209.565 mo
394.813 209.565 li
394.813 207.349 li
394.959 207.349 li
394.959 209.565 li
389.393 209.565 mo
380.541 209.565 li
380.541 208.13 li
380.605 207.909 380.64 207.675 380.64 207.433 cv
380.64 207.405 380.639 207.377 380.638 207.349 cv
389.393 207.349 li
389.393 209.565 li
f
397.786 206.281 mo
394.959 206.281 li
394.959 205.528 li
397.786 205.528 li
397.786 206.281 li
f
394.959 206.281 mo
394.813 206.281 li
394.813 205.528 li
394.959 205.528 li
394.959 206.281 li
389.393 206.281 mo
380.541 206.281 li
380.541 205.528 li
389.393 205.528 li
389.393 206.281 li
f
464.533 138.526 mo
446.034 138.526 li
446.034 136.986 li
480 136.986 li
480 138.376 li
464.533 138.376 li
464.533 138.526 li
.00392157 .00392157 .0235294 rgb
f
480 150.844 mo
446.034 150.844 li
446.034 147.453 li
480 147.453 li
480 150.844 li
.00392157 .00392157 .113725 rgb
f
480 147.453 mo
446.034 147.453 li
446.034 142.972 li
464.533 142.972 li
464.533 144.084 li
480 144.084 li
480 147.453 li
f
464.533 142.972 mo
446.034 142.972 li
446.034 138.526 li
464.533 138.526 li
464.533 142.972 li
f
380.541 151.367 mo
377.135 151.367 li
377.135 149.364 li
380.541 149.364 li
380.541 151.367 li
.254902 .0862745 .227451 rgb
f
380.541 154.158 mo
377.135 154.158 li
377.135 151.367 li
380.541 151.367 li
380.541 154.158 li
1 .0862745 .439216 rgb
f
389.964 151.367 mo
380.541 151.367 li
380.541 149.364 li
389.964 149.364 li
389.964 151.367 li
.254902 .0862745 .235294 rgb
f
389.964 154.158 mo
380.541 154.158 li
380.541 151.367 li
389.964 151.367 li
389.964 154.158 li
1 .0862745 .443137 rgb
f
432.2 262.065 mo
398.992 262.065 li
398.992 260.911 li
422.367 260.911 li
422.367 244.586 li
423.527 244.586 li
423.527 245.316 li
432.2 245.316 li
432.2 245.499 li
431.58 245.954 431.178 246.688 431.178 247.516 cv
431.178 248.344 431.58 249.078 432.2 249.533 cv
432.2 252.999 li
431.58 253.454 431.178 254.188 431.178 255.016 cv
431.178 255.475 431.301 255.905 431.517 256.274 cv
431.036 256.44 430.69 256.896 430.69 257.433 cv
430.69 258.109 431.239 258.657 431.915 258.657 cv
432.013 258.657 432.109 258.646 432.2 258.624 cv
432.2 262.065 li
426.405 256.208 mo
425.729 256.208 425.181 256.757 425.181 257.433 cv
425.181 258.109 425.729 258.657 426.405 258.657 cv
427.081 258.657 427.63 258.109 427.63 257.433 cv
427.63 256.757 427.081 256.208 426.405 256.208 cv
.0196078 .0196078 .2 rgb
f
423.527 244.586 mo
422.367 244.586 li
422.367 243.365 li
423.527 243.365 li
423.527 244.586 li
.0196078 .0196078 .282353 rgb
f
432.2 245.316 mo
423.527 245.316 li
423.527 244.586 li
432.2 244.586 li
432.2 245.316 li
.215686 .0196078 .227451 rgb
f
432.2 244.586 mo
423.527 244.586 li
423.527 243.365 li
432.2 243.365 li
432.2 244.586 li
.215686 .0196078 .305882 rgb
f
431.517 256.274 mo
431.301 255.905 431.178 255.475 431.178 255.016 cv
431.178 254.188 431.58 253.454 432.2 252.999 cv
432.2 256.241 li
432.109 256.22 432.013 256.208 431.915 256.208 cv
431.776 256.208 431.642 256.231 431.517 256.274 cv
432.2 249.533 mo
431.58 249.078 431.178 248.344 431.178 247.516 cv
431.178 246.688 431.58 245.954 432.2 245.499 cv
432.2 249.533 li
.254902 .0862745 .360784 rgb
f
422.367 260.911 mo
398.992 260.911 li
398.992 244.586 li
422.367 244.586 li
422.367 260.911 li
420.895 256.208 mo
420.219 256.208 419.67 256.757 419.67 257.433 cv
419.67 258.109 420.219 258.657 420.895 258.657 cv
421.571 258.657 422.119 258.109 422.119 257.433 cv
422.119 256.757 421.571 256.208 420.895 256.208 cv
415.385 256.208 mo
414.708 256.208 414.16 256.757 414.16 257.433 cv
414.16 258.109 414.708 258.657 415.385 258.657 cv
416.06 258.657 416.609 258.109 416.609 257.433 cv
416.609 256.757 416.06 256.208 415.385 256.208 cv
409.874 256.208 mo
409.198 256.208 408.65 256.757 408.65 257.433 cv
408.65 258.109 409.198 258.657 409.874 258.657 cv
410.551 258.657 411.099 258.109 411.099 257.433 cv
411.099 256.757 410.551 256.208 409.874 256.208 cv
404.364 256.208 mo
403.688 256.208 403.14 256.757 403.14 257.433 cv
403.14 258.109 403.688 258.657 404.364 258.657 cv
405.04 258.657 405.589 258.109 405.589 257.433 cv
405.589 256.757 405.04 256.208 404.364 256.208 cv
.0196078 .0196078 .207843 rgb
f
422.367 244.586 mo
398.992 244.586 li
398.992 243.365 li
422.367 243.365 li
422.367 244.586 li
.0196078 .0196078 .290196 rgb
f
428.453 238.432 mo
427.978 238.432 li
427.978 236.697 li
428.453 236.697 li
428.453 238.432 li
426.552 238.432 mo
425.864 238.432 li
425.864 236.697 li
426.552 236.697 li
426.552 238.432 li
424.438 238.432 mo
422.367 238.432 li
422.367 211.236 li
431.495 211.236 li
431.923 212 432.74 212.516 433.678 212.516 cv
434.615 212.516 435.432 212 435.86 211.236 cv
439.382 211.236 li
439.382 205.528 li
437.326 205.528 li
437.326 205.024 li
423.527 205.024 li
423.527 205.528 li
422.367 205.528 li
422.367 199.863 li
432.305 199.863 li
432.166 200.174 432.089 200.518 432.089 200.881 cv
432.089 202.262 433.208 203.381 434.589 203.381 cv
435.97 203.381 437.089 202.262 437.089 200.881 cv
437.089 200.518 437.012 200.174 436.873 199.863 cv
441.663 199.863 li
441.663 215.386 li
437.326 215.386 li
437.326 213.643 li
435.704 213.643 li
435.368 213.475 434.989 213.381 434.589 213.381 cv
434.188 213.381 433.809 213.475 433.474 213.643 cv
430.093 213.643 li
430.093 212.578 li
428.666 212.578 li
428.666 213.643 li
427.978 213.643 li
427.978 212.578 li
426.552 212.578 li
426.552 213.643 li
425.864 213.643 li
425.864 212.578 li
424.438 212.578 li
424.438 213.643 li
423.527 213.643 li
423.527 219.46 li
432.106 219.46 li
432.137 219.485 432.168 219.509 432.2 219.533 cv
432.2 222.262 li
430.093 222.262 li
430.093 219.816 li
428.666 219.816 li
428.666 222.262 li
427.978 222.262 li
427.978 219.816 li
426.552 219.816 li
426.552 222.262 li
425.864 222.262 li
425.864 219.816 li
424.438 219.816 li
424.438 222.262 li
423.527 222.262 li
423.527 228.079 li
424.438 228.079 li
424.438 230.88 li
423.527 230.88 li
423.527 236.697 li
424.438 236.697 li
424.438 238.432 li
431.787 230.88 mo
430.093 230.88 li
430.093 228.079 li
432.2 228.079 li
432.2 230.499 li
432.049 230.61 431.91 230.738 431.787 230.88 cv
428.666 230.88 mo
427.978 230.88 li
427.978 228.079 li
428.666 228.079 li
428.666 230.88 li
426.552 230.88 mo
425.864 230.88 li
425.864 228.079 li
426.552 228.079 li
426.552 230.88 li
441.663 197.688 mo
422.367 197.688 li
422.367 185.542 li
432.112 185.542 li
432.097 185.653 432.089 185.766 432.089 185.881 cv
432.089 187.262 433.208 188.381 434.589 188.381 cv
435.97 188.381 437.089 187.262 437.089 185.881 cv
437.089 185.766 437.081 185.653 437.066 185.542 cv
441.663 185.542 li
441.663 197.688 li
434.589 190.881 mo
433.208 190.881 432.089 192 432.089 193.381 cv
432.089 194.762 433.208 195.881 434.589 195.881 cv
435.97 195.881 437.089 194.762 437.089 193.381 cv
437.089 192 435.97 190.881 434.589 190.881 cv
.0196078 .0196078 .282353 rgb
f
441.663 199.863 mo
436.873 199.863 li
436.483 198.99 435.607 198.381 434.589 198.381 cv
433.57 198.381 432.694 198.99 432.305 199.863 cv
422.367 199.863 li
422.367 197.688 li
441.663 197.688 li
441.663 199.863 li
.207843 .388235 .552941 rgb
f
428.453 236.697 mo
427.978 236.697 li
427.978 234.293 li
426.552 234.293 li
426.552 236.697 li
425.864 236.697 li
425.864 234.293 li
424.438 234.293 li
424.438 236.697 li
423.527 236.697 li
423.527 230.88 li
424.438 230.88 li
424.438 231.941 li
425.864 231.941 li
425.864 230.88 li
426.552 230.88 li
426.552 231.941 li
427.978 231.941 li
427.978 230.88 li
428.666 230.88 li
428.666 231.941 li
430.093 231.941 li
430.093 230.88 li
431.787 230.88 li
431.408 231.318 431.178 231.89 431.178 232.517 cv
431.178 233.055 431.348 233.554 431.638 233.962 cv
428.453 233.962 li
428.453 236.697 li
432.2 228.079 mo
430.093 228.079 li
430.093 227.056 li
428.666 227.056 li
428.666 228.079 li
427.978 228.079 li
427.978 227.056 li
426.552 227.056 li
426.552 228.079 li
425.864 228.079 li
425.864 227.056 li
424.438 227.056 li
424.438 228.079 li
423.527 228.079 li
423.527 222.262 li
424.438 222.262 li
424.438 224.702 li
425.864 224.702 li
425.864 222.262 li
426.552 222.262 li
426.552 224.702 li
427.978 224.702 li
427.978 222.262 li
428.666 222.262 li
428.666 224.702 li
430.093 224.702 li
430.093 222.262 li
432.2 222.262 li
432.2 222.999 li
431.58 223.454 431.178 224.188 431.178 225.017 cv
431.178 225.844 431.58 226.578 432.2 227.033 cv
432.2 228.079 li
432.106 219.46 mo
423.527 219.46 li
423.527 213.643 li
424.438 213.643 li
424.438 217.465 li
425.864 217.465 li
425.864 213.643 li
426.552 213.643 li
426.552 217.465 li
427.978 217.465 li
427.978 213.643 li
428.666 213.643 li
428.666 217.465 li
430.093 217.465 li
430.093 213.643 li
433.474 213.643 li
432.741 214.008 432.213 214.724 432.108 215.57 cv
431.541 216.028 431.178 216.73 431.178 217.517 cv
431.178 218.301 431.54 219.002 432.106 219.46 cv
437.326 215.386 mo
437.04 215.386 li
436.886 214.62 436.383 213.981 435.704 213.643 cv
437.326 213.643 li
437.326 215.386 li
437.326 205.528 mo
430.093 205.528 li
430.093 205.34 li
428.666 205.34 li
428.666 205.528 li
427.978 205.528 li
427.978 205.34 li
426.552 205.34 li
426.552 205.528 li
425.864 205.528 li
425.864 205.34 li
424.438 205.34 li
424.438 205.528 li
423.527 205.528 li
423.527 205.024 li
437.326 205.024 li
437.326 205.528 li
.215686 .0196078 .305882 rgb
f
439.382 211.236 mo
435.86 211.236 li
435.93 211.111 435.99 210.979 436.038 210.842 cv
437.326 210.842 li
437.326 205.528 li
439.382 205.528 li
439.382 211.236 li
431.495 211.236 mo
422.367 211.236 li
422.367 205.528 li
423.527 205.528 li
423.527 210.842 li
431.317 210.842 li
431.365 210.979 431.425 211.111 431.495 211.236 cv
.0196078 1 .984314 rgb
f
437.326 210.842 mo
436.038 210.842 li
436.096 210.677 436.137 210.505 436.159 210.327 cv
436.726 209.868 437.089 209.167 437.089 208.381 cv
437.089 207 435.97 205.881 434.589 205.881 cv
433.313 205.881 432.261 206.836 432.108 208.07 cv
431.541 208.528 431.178 209.23 431.178 210.017 cv
431.178 210.306 431.227 210.583 431.317 210.842 cv
423.527 210.842 li
423.527 205.528 li
424.438 205.528 li
424.438 210.226 li
425.864 210.226 li
425.864 205.528 li
426.552 205.528 li
426.552 210.226 li
427.978 210.226 li
427.978 205.528 li
428.666 205.528 li
428.666 210.226 li
430.093 210.226 li
430.093 205.528 li
437.326 205.528 li
437.326 210.842 li
.215686 1 .988235 rgb
f
432.2 230.88 mo
431.787 230.88 li
431.91 230.738 432.049 230.61 432.2 230.499 cv
432.2 230.88 li
.254902 .0862745 .423529 rgb
f
432.2 233.962 mo
431.638 233.962 li
431.348 233.554 431.178 233.055 431.178 232.517 cv
431.178 231.89 431.408 231.318 431.787 230.88 cv
432.2 230.88 li
432.2 233.962 li
432.2 227.033 mo
431.58 226.578 431.178 225.844 431.178 225.017 cv
431.178 224.188 431.58 223.454 432.2 222.999 cv
432.2 227.033 li
.403922 .0862745 .443137 rgb
f
432.2 219.533 mo
432.168 219.509 432.137 219.485 432.106 219.46 cv
432.2 219.46 li
432.2 219.533 li
.254902 .0862745 .423529 rgb
f
432.2 219.46 mo
432.106 219.46 li
431.54 219.002 431.178 218.301 431.178 217.517 cv
431.178 216.73 431.541 216.028 432.108 215.57 cv
432.095 215.672 432.089 215.776 432.089 215.881 cv
432.089 216.139 432.128 216.387 432.2 216.621 cv
432.2 219.46 li
.403922 .0862745 .443137 rgb
f
433.678 212.516 mo
432.74 212.516 431.923 212 431.495 211.236 cv
435.86 211.236 li
435.432 212 434.615 212.516 433.678 212.516 cv
.254902 .0862745 .423529 rgb
f
435.86 211.236 mo
431.495 211.236 li
431.425 211.111 431.365 210.979 431.317 210.842 cv
434.147 210.842 li
434.29 210.867 434.438 210.881 434.589 210.881 cv
434.74 210.881 434.888 210.867 435.031 210.842 cv
436.038 210.842 li
435.99 210.979 435.93 211.111 435.86 211.236 cv
.254902 1 .988235 rgb
f
436.038 210.842 mo
435.031 210.842 li
435.453 210.766 435.838 210.585 436.159 210.327 cv
436.137 210.505 436.096 210.677 436.038 210.842 cv
434.147 210.842 mo
431.317 210.842 li
431.227 210.583 431.178 210.306 431.178 210.017 cv
431.178 209.23 431.541 208.528 432.108 208.07 cv
432.095 208.172 432.089 208.276 432.089 208.381 cv
432.089 209.611 432.977 210.633 434.147 210.842 cv
.403922 1 .992157 rgb
f
432.2 138.526 mo
422.367 138.526 li
422.367 136.986 li
432.2 136.986 li
432.2 138.526 li
.0196078 .0196078 .117647 rgb
f
441.663 138.526 mo
432.2 138.526 li
432.2 136.986 li
441.663 136.986 li
441.663 138.526 li
f
441.663 172.157 mo
436.739 172.157 li
436.961 171.784 437.089 171.347 437.089 170.881 cv
437.089 169.5 435.97 168.381 434.589 168.381 cv
433.208 168.381 432.089 169.5 432.089 170.881 cv
432.089 171.347 432.217 171.784 432.439 172.157 cv
422.367 172.157 li
422.367 147.453 li
441.663 147.453 li
441.663 172.157 li
.0196078 .0196078 .2 rgb
f
441.663 147.453 mo
422.367 147.453 li
422.367 138.526 li
432.2 138.526 li
432.2 142.972 li
441.663 142.972 li
441.663 147.453 li
f
441.663 142.972 mo
432.2 142.972 li
432.2 138.526 li
441.663 138.526 li
441.663 142.972 li
f
441.663 183.542 mo
435.473 183.542 li
435.198 183.438 434.9 183.381 434.589 183.381 cv
434.277 183.381 433.979 183.438 433.704 183.542 cv
422.367 183.542 li
422.367 172.157 li
432.439 172.157 li
432.875 172.89 433.674 173.381 434.589 173.381 cv
435.503 173.381 436.303 172.89 436.739 172.157 cv
441.663 172.157 li
441.663 183.542 li
434.589 175.881 mo
433.208 175.881 432.089 177 432.089 178.381 cv
432.089 179.762 433.208 180.881 434.589 180.881 cv
435.97 180.881 437.089 179.762 437.089 178.381 cv
437.089 177 435.97 175.881 434.589 175.881 cv
.0196078 .0196078 .282353 rgb
f
422.367 138.526 mo
410.978 138.526 li
410.978 137.195 li
398.992 137.195 li
398.992 136.986 li
422.367 136.986 li
422.367 138.526 li
.0196078 .0196078 .12549 rgb
f
410.978 138.526 mo
398.992 138.526 li
398.992 137.195 li
410.978 137.195 li
410.978 138.526 li
.0745098 .356863 1 rgb
f
422.367 238.432 mo
398.992 238.432 li
398.992 212.85 li
406.069 212.85 li
406.069 211.236 li
422.367 211.236 li
422.367 238.432 li
.0196078 .0196078 .290196 rgb
f
406.069 212.85 mo
398.992 212.85 li
398.992 211.236 li
406.069 211.236 li
406.069 212.85 li
.109804 .0313725 .305882 rgb
f
422.367 172.157 mo
408.193 172.157 li
408.193 168.41 li
406.925 168.41 li
406.925 172.157 li
406.314 172.157 li
406.314 168.41 li
405.045 168.41 li
405.045 172.157 li
404.434 172.157 li
404.434 168.41 li
403.165 168.41 li
403.165 172.157 li
398.992 172.157 li
398.992 156.301 li
403.165 156.301 li
403.165 158.477 li
404.434 158.477 li
404.434 156.301 li
405.045 156.301 li
405.045 158.477 li
406.314 158.477 li
406.314 156.301 li
406.735 156.301 li
406.735 158.819 li
418.143 158.819 li
418.143 153.855 li
413.407 153.855 li
413.407 151.367 li
398.992 151.367 li
398.992 147.453 li
422.367 147.453 li
422.367 172.157 li
406.925 160.913 mo
406.925 165.974 li
408.193 165.974 li
408.193 160.913 li
406.925 160.913 li
405.045 160.913 mo
405.045 165.974 li
406.314 165.974 li
406.314 160.913 li
405.045 160.913 li
403.165 160.913 mo
403.165 165.974 li
404.434 165.974 li
404.434 160.913 li
403.165 160.913 li
.0196078 .0196078 .207843 rgb
f
422.367 147.453 mo
398.992 147.453 li
398.992 143.129 li
410.978 143.129 li
410.978 138.526 li
422.367 138.526 li
422.367 147.453 li
f
410.978 143.129 mo
398.992 143.129 li
398.992 138.526 li
410.978 138.526 li
410.978 143.129 li
.0745098 .356863 1 rgb
f
422.367 205.528 mo
406.069 205.528 li
406.069 204.064 li
398.992 204.064 li
398.992 202.997 li
406.069 202.997 li
406.069 200.78 li
398.992 200.78 li
398.992 199.863 li
422.367 199.863 li
422.367 205.528 li
422.367 197.688 mo
406.069 197.688 li
406.069 197.497 li
398.992 197.497 li
398.992 172.157 li
403.165 172.157 li
403.165 173.471 li
404.434 173.471 li
404.434 172.157 li
405.045 172.157 li
405.045 173.471 li
406.314 173.471 li
406.314 172.157 li
406.925 172.157 li
406.925 173.471 li
408.193 173.471 li
408.193 172.157 li
422.367 172.157 li
422.367 183.542 li
419.923 183.542 li
419.923 185.542 li
422.367 185.542 li
422.367 197.688 li
406.925 183.404 mo
406.925 188.465 li
408.193 188.465 li
408.193 183.404 li
406.925 183.404 li
405.045 183.404 mo
405.045 188.465 li
406.314 188.465 li
406.314 183.404 li
405.045 183.404 li
403.165 183.404 mo
403.165 188.465 li
404.434 188.465 li
404.434 183.404 li
403.165 183.404 li
406.925 175.907 mo
406.925 180.967 li
408.193 180.967 li
408.193 175.907 li
406.925 175.907 li
405.045 175.907 mo
405.045 180.967 li
406.314 180.967 li
406.314 175.907 li
405.045 175.907 li
403.165 175.907 mo
403.165 180.967 li
404.434 180.967 li
404.434 175.907 li
403.165 175.907 li
.0196078 .0196078 .290196 rgb
f
406.069 205.528 mo
398.992 205.528 li
398.992 204.064 li
406.069 204.064 li
406.069 205.528 li
406.069 202.997 mo
398.992 202.997 li
398.992 200.78 li
406.069 200.78 li
406.069 202.997 li
406.069 197.688 mo
398.992 197.688 li
398.992 197.497 li
406.069 197.497 li
406.069 197.688 li
.109804 .0313725 .305882 rgb
f
422.367 199.863 mo
398.992 199.863 li
398.992 199.714 li
406.069 199.714 li
406.069 197.688 li
422.367 197.688 li
422.367 199.863 li
.207843 .388235 .556863 rgb
f
406.069 199.714 mo
398.992 199.714 li
398.992 197.688 li
406.069 197.688 li
406.069 199.714 li
.282353 .396078 .564706 rgb
f
406.735 156.301 mo
406.314 156.301 li
406.314 153.416 li
405.045 153.416 li
405.045 156.301 li
404.434 156.301 li
404.434 153.416 li
403.165 153.416 li
403.165 156.301 li
398.992 156.301 li
398.992 151.367 li
413.407 151.367 li
413.407 153.855 li
408.193 153.855 li
408.193 153.416 li
406.925 153.416 li
406.925 153.855 li
406.735 153.855 li
406.735 156.301 li
1 .0196078 .419608 rgb
f
422.367 211.236 mo
406.069 211.236 li
406.069 210.633 li
398.992 210.633 li
398.992 209.565 li
406.069 209.565 li
406.069 207.349 li
398.992 207.349 li
398.992 206.281 li
406.069 206.281 li
406.069 205.528 li
422.367 205.528 li
422.367 211.236 li
.0196078 1 .984314 rgb
f
406.069 211.236 mo
398.992 211.236 li
398.992 210.633 li
406.069 210.633 li
406.069 211.236 li
406.069 209.565 mo
398.992 209.565 li
398.992 207.349 li
406.069 207.349 li
406.069 209.565 li
406.069 206.281 mo
398.992 206.281 li
398.992 205.528 li
406.069 205.528 li
406.069 206.281 li
.109804 1 .984314 rgb
f
408.193 188.465 mo
406.925 188.465 li
406.925 183.404 li
408.193 183.404 li
408.193 188.465 li
406.314 188.465 mo
405.045 188.465 li
405.045 183.404 li
406.314 183.404 li
406.314 188.465 li
404.434 188.465 mo
403.165 188.465 li
403.165 183.404 li
404.434 183.404 li
404.434 188.465 li
408.193 180.967 mo
406.925 180.967 li
406.925 175.907 li
408.193 175.907 li
408.193 180.967 li
406.314 180.967 mo
405.045 180.967 li
405.045 175.907 li
406.314 175.907 li
406.314 180.967 li
404.434 180.967 mo
403.165 180.967 li
403.165 175.907 li
404.434 175.907 li
404.434 180.967 li
.215686 .0196078 .309804 rgb
f
408.193 172.157 mo
406.925 172.157 li
406.925 168.41 li
408.193 168.41 li
408.193 172.157 li
.215686 .0196078 .231373 rgb
f
408.193 173.471 mo
406.925 173.471 li
406.925 172.157 li
408.193 172.157 li
408.193 173.471 li
.215686 .0196078 .309804 rgb
f
406.314 172.157 mo
405.045 172.157 li
405.045 168.41 li
406.314 168.41 li
406.314 172.157 li
.215686 .0196078 .231373 rgb
f
406.314 173.471 mo
405.045 173.471 li
405.045 172.157 li
406.314 172.157 li
406.314 173.471 li
.215686 .0196078 .309804 rgb
f
404.434 172.157 mo
403.165 172.157 li
403.165 168.41 li
404.434 168.41 li
404.434 172.157 li
.215686 .0196078 .231373 rgb
f
404.434 173.471 mo
403.165 173.471 li
403.165 172.157 li
404.434 172.157 li
404.434 173.471 li
.215686 .0196078 .309804 rgb
f
408.193 165.974 mo
406.925 165.974 li
406.925 160.913 li
408.193 160.913 li
408.193 165.974 li
406.314 165.974 mo
405.045 165.974 li
405.045 160.913 li
406.314 160.913 li
406.314 165.974 li
404.434 165.974 mo
403.165 165.974 li
403.165 160.913 li
404.434 160.913 li
404.434 165.974 li
406.314 158.477 mo
405.045 158.477 li
405.045 156.301 li
406.314 156.301 li
406.314 158.477 li
.215686 .0196078 .231373 rgb
f
406.314 156.301 mo
405.045 156.301 li
405.045 153.416 li
406.314 153.416 li
406.314 156.301 li
1 .0196078 .439216 rgb
f
404.434 158.477 mo
403.165 158.477 li
403.165 156.301 li
404.434 156.301 li
404.434 158.477 li
.215686 .0196078 .231373 rgb
f
404.434 156.301 mo
403.165 156.301 li
403.165 153.416 li
404.434 153.416 li
404.434 156.301 li
408.193 153.855 mo
406.925 153.855 li
406.925 153.416 li
408.193 153.416 li
408.193 153.855 li
1 .0196078 .439216 rgb
f
418.143 158.819 mo
406.735 158.819 li
406.735 156.301 li
406.925 156.301 li
406.925 158.477 li
408.193 158.477 li
408.193 156.301 li
413.407 156.301 li
413.407 153.855 li
418.143 153.855 li
418.143 158.819 li
.0196078 .713725 .760784 rgb
f
413.407 156.301 mo
408.193 156.301 li
408.193 153.855 li
413.407 153.855 li
413.407 156.301 li
406.925 156.301 mo
406.735 156.301 li
406.735 153.855 li
406.925 153.855 li
406.925 156.301 li
1 .713725 .823529 rgb
f
408.193 158.477 mo
406.925 158.477 li
406.925 156.301 li
408.193 156.301 li
408.193 158.477 li
.215686 .713725 .768627 rgb
f
408.193 156.301 mo
406.925 156.301 li
406.925 153.855 li
408.193 153.855 li
408.193 156.301 li
1 .713725 .831372 rgb
f
442.488 215.386 mo
441.663 215.386 li
441.663 199.863 li
442.488 199.863 li
442.488 215.386 li
442.488 197.688 mo
441.663 197.688 li
441.663 185.542 li
442.488 185.542 li
442.488 197.688 li
.0196078 .0196078 .282353 rgb
f
442.488 199.863 mo
441.663 199.863 li
441.663 197.688 li
442.488 197.688 li
442.488 199.863 li
.207843 .388235 .552941 rgb
f
446.034 138.526 mo
441.663 138.526 li
441.663 136.986 li
446.034 136.986 li
446.034 138.526 li
.0196078 .0196078 .117647 rgb
f
442.488 172.157 mo
441.663 172.157 li
441.663 147.453 li
446.034 147.453 li
446.034 150.844 li
442.488 150.844 li
442.488 172.157 li
.0196078 .0196078 .2 rgb
f
446.034 147.453 mo
441.663 147.453 li
441.663 142.972 li
446.034 142.972 li
446.034 147.453 li
f
446.034 142.972 mo
441.663 142.972 li
441.663 138.526 li
446.034 138.526 li
446.034 142.972 li
f
442.488 183.542 mo
441.663 183.542 li
441.663 172.157 li
442.488 172.157 li
442.488 183.542 li
.0196078 .0196078 .282353 rgb
f
427.978 238.432 mo
426.552 238.432 li
426.552 236.697 li
427.978 236.697 li
427.978 238.432 li
.101961 .0235294 .294118 rgb
f
427.978 236.697 mo
426.552 236.697 li
426.552 234.293 li
427.978 234.293 li
427.978 236.697 li
.282353 .0235294 .313725 rgb
f
425.864 238.432 mo
424.438 238.432 li
424.438 236.697 li
425.864 236.697 li
425.864 238.432 li
.101961 .0235294 .294118 rgb
f
425.864 236.697 mo
424.438 236.697 li
424.438 234.293 li
425.864 234.293 li
425.864 236.697 li
.282353 .0235294 .313725 rgb
f
430.093 230.88 mo
428.666 230.88 li
428.666 228.079 li
430.093 228.079 li
430.093 230.88 li
.101961 .0235294 .294118 rgb
f
430.093 231.941 mo
428.666 231.941 li
428.666 230.88 li
430.093 230.88 li
430.093 231.941 li
430.093 228.079 mo
428.666 228.079 li
428.666 227.056 li
430.093 227.056 li
430.093 228.079 li
.282353 .0235294 .313725 rgb
f
427.978 230.88 mo
426.552 230.88 li
426.552 228.079 li
427.978 228.079 li
427.978 230.88 li
.101961 .0235294 .294118 rgb
f
427.978 231.941 mo
426.552 231.941 li
426.552 230.88 li
427.978 230.88 li
427.978 231.941 li
427.978 228.079 mo
426.552 228.079 li
426.552 227.056 li
427.978 227.056 li
427.978 228.079 li
.282353 .0235294 .313725 rgb
f
425.864 230.88 mo
424.438 230.88 li
424.438 228.079 li
425.864 228.079 li
425.864 230.88 li
.101961 .0235294 .294118 rgb
f
425.864 231.941 mo
424.438 231.941 li
424.438 230.88 li
425.864 230.88 li
425.864 231.941 li
425.864 228.079 mo
424.438 228.079 li
424.438 227.056 li
425.864 227.056 li
425.864 228.079 li
.282353 .0235294 .313725 rgb
f
430.093 222.262 mo
428.666 222.262 li
428.666 219.816 li
430.093 219.816 li
430.093 222.262 li
.101961 .0235294 .294118 rgb
f
430.093 224.702 mo
428.666 224.702 li
428.666 222.262 li
430.093 222.262 li
430.093 224.702 li
.282353 .0235294 .313725 rgb
f
427.978 222.262 mo
426.552 222.262 li
426.552 219.816 li
427.978 219.816 li
427.978 222.262 li
.101961 .0235294 .294118 rgb
f
427.978 224.702 mo
426.552 224.702 li
426.552 222.262 li
427.978 222.262 li
427.978 224.702 li
.282353 .0235294 .313725 rgb
f
425.864 222.262 mo
424.438 222.262 li
424.438 219.816 li
425.864 219.816 li
425.864 222.262 li
.101961 .0235294 .294118 rgb
f
425.864 224.702 mo
424.438 224.702 li
424.438 222.262 li
425.864 222.262 li
425.864 224.702 li
.282353 .0235294 .313725 rgb
f
430.093 213.643 mo
428.666 213.643 li
428.666 212.578 li
430.093 212.578 li
430.093 213.643 li
.101961 .0235294 .294118 rgb
f
430.093 217.465 mo
428.666 217.465 li
428.666 213.643 li
430.093 213.643 li
430.093 217.465 li
.282353 .0235294 .313725 rgb
f
427.978 213.643 mo
426.552 213.643 li
426.552 212.578 li
427.978 212.578 li
427.978 213.643 li
.101961 .0235294 .294118 rgb
f
427.978 217.465 mo
426.552 217.465 li
426.552 213.643 li
427.978 213.643 li
427.978 217.465 li
.282353 .0235294 .313725 rgb
f
425.864 213.643 mo
424.438 213.643 li
424.438 212.578 li
425.864 212.578 li
425.864 213.643 li
.101961 .0235294 .294118 rgb
f
425.864 217.465 mo
424.438 217.465 li
424.438 213.643 li
425.864 213.643 li
425.864 217.465 li
430.093 205.528 mo
428.666 205.528 li
428.666 205.34 li
430.093 205.34 li
430.093 205.528 li
.282353 .0235294 .313725 rgb
f
430.093 210.226 mo
428.666 210.226 li
428.666 205.528 li
430.093 205.528 li
430.093 210.226 li
.282353 1 .988235 rgb
f
427.978 205.528 mo
426.552 205.528 li
426.552 205.34 li
427.978 205.34 li
427.978 205.528 li
.282353 .0235294 .313725 rgb
f
427.978 210.226 mo
426.552 210.226 li
426.552 205.528 li
427.978 205.528 li
427.978 210.226 li
.282353 1 .988235 rgb
f
425.864 205.528 mo
424.438 205.528 li
424.438 205.34 li
425.864 205.34 li
425.864 205.528 li
.282353 .0235294 .313725 rgb
f
425.864 210.226 mo
424.438 210.226 li
424.438 205.528 li
425.864 205.528 li
425.864 210.226 li
.282353 1 .988235 rgb
f
431.744 238.432 mo
430.093 238.432 li
430.093 236.697 li
432.2 236.697 li
432.2 237.999 li
432.03 238.124 431.877 238.269 431.744 238.432 cv
428.666 238.432 mo
428.453 238.432 li
428.453 236.697 li
428.666 236.697 li
428.666 238.432 li
.12549 1 .992157 rgb
f
432.2 236.697 mo
430.093 236.697 li
430.093 234.293 li
428.666 234.293 li
428.666 236.697 li
428.453 236.697 li
428.453 233.962 li
431.638 233.962 li
431.794 234.181 431.984 234.374 432.2 234.533 cv
432.2 236.697 li
.301961 1 .992157 rgb
f
432.2 238.432 mo
431.744 238.432 li
431.877 238.269 432.03 238.124 432.2 237.999 cv
432.2 238.432 li
.337255 1 .992157 rgb
f
432.2 234.533 mo
431.984 234.374 431.794 234.181 431.638 233.962 cv
432.2 233.962 li
432.2 234.533 li
.470588 1 .992157 rgb
f
430.093 238.432 mo
428.666 238.432 li
428.666 236.697 li
430.093 236.697 li
430.093 238.432 li
.2 1 .992157 rgb
f
430.093 236.697 mo
428.666 236.697 li
428.666 234.293 li
430.093 234.293 li
430.093 236.697 li
.364706 1 .992157 rgb
f
398.992 243.365 mo
397.786 243.365 li
397.786 238.432 li
398.992 238.432 li
398.992 243.365 li
.0156863 .360784 .490196 rgb
f
397.786 243.365 mo
395.703 243.365 li
395.703 238.432 li
397.786 238.432 li
397.786 243.365 li
.0156863 .360784 .533333 rgb
f
423.527 243.365 mo
422.367 243.365 li
422.367 238.432 li
424.438 238.432 li
424.438 239.179 li
425.864 239.179 li
425.864 238.432 li
426.552 238.432 li
426.552 239.179 li
427.978 239.179 li
427.978 238.432 li
428.453 238.432 li
428.453 238.756 li
428.666 238.756 li
428.666 239.179 li
430.093 239.179 li
430.093 238.756 li
431.518 238.756 li
431.385 238.983 431.287 239.233 431.231 239.499 cv
423.527 239.499 li
423.527 243.365 li
.0313725 .372549 .537255 rgb
f
432.2 243.365 mo
423.527 243.365 li
423.527 239.499 li
431.231 239.499 li
431.196 239.666 431.178 239.838 431.178 240.016 cv
431.178 240.844 431.58 241.578 432.2 242.033 cv
432.2 243.365 li
.223529 .372549 .552941 rgb
f
432.2 239.499 mo
431.231 239.499 li
431.287 239.233 431.385 238.983 431.518 238.756 cv
432.2 238.756 li
432.2 239.499 li
.262745 .415686 .627451 rgb
f
432.2 242.033 mo
431.58 241.578 431.178 240.844 431.178 240.016 cv
431.178 239.838 431.196 239.666 431.231 239.499 cv
432.2 239.499 li
432.2 242.033 li
.411765 .415686 .639216 rgb
f
422.367 243.365 mo
398.992 243.365 li
398.992 238.432 li
422.367 238.432 li
422.367 243.365 li
.0313725 .372549 .541176 rgb
f
430.093 239.179 mo
428.666 239.179 li
428.666 238.756 li
430.093 238.756 li
430.093 239.179 li
427.978 239.179 mo
426.552 239.179 li
426.552 238.432 li
427.978 238.432 li
427.978 239.179 li
425.864 239.179 mo
424.438 239.179 li
424.438 238.432 li
425.864 238.432 li
425.864 239.179 li
.113725 .372549 .545098 rgb
f
431.518 238.756 mo
430.093 238.756 li
430.093 238.432 li
431.744 238.432 li
431.66 238.533 431.585 238.642 431.518 238.756 cv
.137255 1 .996078 rgb
f
432.2 238.756 mo
431.518 238.756 li
431.585 238.642 431.66 238.533 431.744 238.432 cv
432.2 238.432 li
432.2 238.756 li
.345098 1 .996078 rgb
f
428.666 238.756 mo
428.453 238.756 li
428.453 238.432 li
428.666 238.432 li
428.666 238.756 li
.137255 1 .996078 rgb
f
430.093 238.756 mo
428.666 238.756 li
428.666 238.432 li
430.093 238.432 li
430.093 238.756 li
.207843 1 .996078 rgb
f
441.663 185.542 mo
437.066 185.542 li
436.941 184.622 436.316 183.861 435.473 183.542 cv
441.663 183.542 li
441.663 185.542 li
432.112 185.542 mo
422.367 185.542 li
422.367 183.542 li
433.704 183.542 li
432.862 183.861 432.236 184.622 432.112 185.542 cv
.0196078 .172549 .65098 rgb
f
422.367 185.542 mo
419.923 185.542 li
419.923 183.542 li
422.367 183.542 li
422.367 185.542 li
.0196078 .172549 .654902 rgb
f
442.488 185.542 mo
441.663 185.542 li
441.663 183.542 li
442.488 183.542 li
442.488 185.542 li
.0196078 .172549 .65098 rgb
f
480 138.526 mo
464.533 138.526 li
464.533 138.376 li
480 138.376 li
480 138.526 li
.00392157 .2 .647059 rgb
f
480 144.084 mo
464.533 144.084 li
464.533 142.972 li
480 142.972 li
480 144.084 li
.00392157 .2 .678431 rgb
f
480 142.972 mo
464.533 142.972 li
464.533 138.526 li
480 138.526 li
480 142.972 li
f
435.704 213.643 mo
433.474 213.643 li
433.809 213.475 434.188 213.381 434.589 213.381 cv
434.989 213.381 435.368 213.475 435.704 213.643 cv
.0588235 .0235294 .305882 rgb
f
432.108 215.57 mo
432.213 214.724 432.741 214.008 433.474 213.643 cv
435.704 213.643 li
436.383 213.981 436.886 214.62 437.04 215.386 cv
434.986 215.386 li
434.606 215.152 434.157 215.017 433.678 215.017 cv
433.198 215.017 432.75 215.152 432.369 215.386 cv
432.2 215.386 li
432.2 215.499 li
432.169 215.522 432.138 215.546 432.108 215.57 cv
.247059 .0235294 .329412 rgb
f
432.2 216.621 mo
432.128 216.387 432.089 216.139 432.089 215.881 cv
432.089 215.776 432.095 215.672 432.108 215.57 cv
432.138 215.546 432.169 215.522 432.2 215.499 cv
432.2 216.621 li
434.986 215.386 mo
432.369 215.386 li
432.75 215.152 433.198 215.017 433.678 215.017 cv
434.157 215.017 434.606 215.152 434.986 215.386 cv
.427451 .0901961 .462745 rgb
f
436.159 210.327 mo
436.171 210.225 436.178 210.122 436.178 210.017 cv
436.178 208.635 435.059 207.517 433.678 207.517 cv
433.083 207.517 432.537 207.724 432.108 208.07 cv
432.261 206.836 433.313 205.881 434.589 205.881 cv
435.97 205.881 437.089 207 437.089 208.381 cv
437.089 209.167 436.726 209.868 436.159 210.327 cv
.247059 1 .988235 rgb
f
434.589 210.881 mo
434.438 210.881 434.29 210.867 434.147 210.842 cv
435.031 210.842 li
434.888 210.867 434.74 210.881 434.589 210.881 cv
.286274 1 .988235 rgb
f
435.031 210.842 mo
434.147 210.842 li
432.977 210.633 432.089 209.611 432.089 208.381 cv
432.089 208.276 432.095 208.172 432.108 208.07 cv
432.537 207.724 433.083 207.517 433.678 207.517 cv
435.059 207.517 436.178 208.635 436.178 210.017 cv
436.178 210.122 436.171 210.225 436.159 210.327 cv
435.838 210.585 435.453 210.766 435.031 210.842 cv
.427451 1 .992157 rgb
f
434.589 203.381 mo
433.208 203.381 432.089 202.262 432.089 200.881 cv
432.089 200.518 432.166 200.174 432.305 199.863 cv
436.873 199.863 li
437.012 200.174 437.089 200.518 437.089 200.881 cv
437.089 202.262 435.97 203.381 434.589 203.381 cv
.0588235 .0235294 .305882 rgb
f
436.873 199.863 mo
432.305 199.863 li
432.694 198.99 433.57 198.381 434.589 198.381 cv
435.607 198.381 436.483 198.99 436.873 199.863 cv
.239216 .392157 .568627 rgb
f
434.589 195.881 mo
433.208 195.881 432.089 194.762 432.089 193.381 cv
432.089 192 433.208 190.881 434.589 190.881 cv
435.97 190.881 437.089 192 437.089 193.381 cv
437.089 194.762 435.97 195.881 434.589 195.881 cv
434.589 188.381 mo
433.208 188.381 432.089 187.262 432.089 185.881 cv
432.089 185.766 432.097 185.653 432.112 185.542 cv
437.066 185.542 li
437.081 185.653 437.089 185.766 437.089 185.881 cv
437.089 187.262 435.97 188.381 434.589 188.381 cv
.0588235 .0235294 .305882 rgb
f
435.473 183.542 mo
433.704 183.542 li
433.979 183.438 434.277 183.381 434.589 183.381 cv
434.9 183.381 435.198 183.438 435.473 183.542 cv
f
437.066 185.542 mo
432.112 185.542 li
432.236 184.622 432.862 183.861 433.704 183.542 cv
435.473 183.542 li
436.316 183.861 436.941 184.622 437.066 185.542 cv
.0588235 .176471 .662745 rgb
f
434.589 180.881 mo
433.208 180.881 432.089 179.762 432.089 178.381 cv
432.089 177 433.208 175.881 434.589 175.881 cv
435.97 175.881 437.089 177 437.089 178.381 cv
437.089 179.762 435.97 180.881 434.589 180.881 cv
.0588235 .0235294 .305882 rgb
f
436.739 172.157 mo
432.439 172.157 li
432.217 171.784 432.089 171.347 432.089 170.881 cv
432.089 169.5 433.208 168.381 434.589 168.381 cv
435.97 168.381 437.089 169.5 437.089 170.881 cv
437.089 171.347 436.961 171.784 436.739 172.157 cv
.0588235 .0235294 .227451 rgb
f
434.589 173.381 mo
433.674 173.381 432.875 172.89 432.439 172.157 cv
436.739 172.157 li
436.303 172.89 435.503 173.381 434.589 173.381 cv
.0588235 .0235294 .305882 rgb
f
269.388 169.049 mo
244.237 169.049 li
244.237 164.399 li
269.388 164.399 li
269.388 169.049 li
1 0 .270588 rgb
f
244.237 169.049 mo
243.819 169.049 li
243.819 164.399 li
244.237 164.399 li
244.237 169.049 li
1 0 .341176 rgb
f
243.819 169.049 mo
227.562 169.049 li
227.562 164.399 li
243.819 164.399 li
243.819 169.049 li
1 .00392157 .352941 rgb
f
288.215 169.049 mo
269.388 169.049 li
269.388 164.399 li
288.215 164.399 li
288.215 169.049 li
1 0 .341176 rgb
f
78.5186 262.065 mo
12.2304 262.065 li
12.2304 251.115 li
37.8526 251.115 li
37.8526 251.525 li
44.5992 251.525 li
44.5992 251.115 li
45.6046 251.115 li
45.6046 246.465 li
12.2304 246.465 li
12.2304 244.586 li
51.8248 244.586 li
51.8248 244.504 li
54.5938 244.504 li
54.5938 244.46 li
57.8417 244.46 li
57.8417 244.504 li
64.5883 244.504 li
64.5883 244.46 li
68.1441 244.46 li
68.1441 244.555 li
78.5186 244.555 li
78.5186 262.065 li
27.2081 254.145 mo
26.5317 254.145 25.9835 254.692 25.9835 255.369 cv
25.9835 256.046 26.5317 256.594 27.2081 256.594 cv
27.8843 256.594 28.4325 256.046 28.4325 255.369 cv
28.4325 254.692 27.8843 254.145 27.2081 254.145 cv
21.6978 254.145 mo
21.0214 254.145 20.4732 254.692 20.4732 255.369 cv
20.4732 256.046 21.0214 256.594 21.6978 256.594 cv
22.374 256.594 22.9224 256.046 22.9224 255.369 cv
22.9224 254.692 22.374 254.145 21.6978 254.145 cv
16.1875 254.145 mo
15.5113 254.145 14.9628 254.692 14.9628 255.369 cv
14.9628 256.046 15.5113 256.594 16.1875 256.594 cv
16.8639 256.594 17.4121 256.046 17.4121 255.369 cv
17.4121 254.692 16.8639 254.145 16.1875 254.145 cv
57.8417 246.786 mo
57.8417 251.525 li
64.5883 251.525 li
64.5883 246.786 li
57.8417 246.786 li
47.8471 246.786 mo
47.8471 251.525 li
54.5938 251.525 li
54.5938 246.786 li
47.8471 246.786 li
.0392157 .0392157 .203922 rgb
f
78.5186 244.555 mo
68.1441 244.555 li
68.1441 244.46 li
78.5186 244.46 li
78.5186 244.555 li
.0392157 .333333 1 rgb
f
51.8248 244.586 mo
12.2304 244.586 li
12.2304 244.46 li
37.8526 244.46 li
37.8526 244.504 li
44.5992 244.504 li
44.5992 244.46 li
47.8471 244.46 li
47.8471 244.504 li
51.8248 244.504 li
51.8248 244.586 li
.0392157 .0392157 .290196 rgb
f
68.1441 244.46 mo
64.5883 244.46 li
64.5883 239.765 li
57.8417 239.765 li
57.8417 244.46 li
54.5938 244.46 li
54.5938 239.765 li
51.8248 239.765 li
51.8248 238.246 li
78.5186 238.246 li
78.5186 240.966 li
68.1441 240.966 li
68.1441 244.46 li
78.5186 236.071 mo
64.5883 236.071 li
64.5883 232.743 li
57.8417 232.743 li
57.8417 236.071 li
54.5938 236.071 li
54.5938 232.743 li
51.8248 232.743 li
51.8248 230.461 li
54.5938 230.461 li
54.5938 225.721 li
51.8248 225.721 li
51.8248 223.438 li
54.5938 223.438 li
54.5938 218.699 li
51.8248 218.699 li
51.8248 172.157 li
0 172.157 li
0 150.844 li
85.5727 150.844 li
85.5727 197.548 li
78.5186 197.548 li
78.5186 236.071 li
57.8417 225.721 mo
57.8417 230.461 li
64.5883 230.461 li
64.5883 225.721 li
57.8417 225.721 li
57.8417 218.699 mo
57.8417 223.438 li
64.5883 223.438 li
64.5883 218.699 li
57.8417 218.699 li
68.4786 180.873 mo
67.0982 180.873 65.9785 181.992 65.9785 183.373 cv
65.9785 184.754 67.0982 185.873 68.4786 185.873 cv
69.8594 185.873 70.9791 184.754 70.9791 183.373 cv
70.9791 181.992 69.8594 180.873 68.4786 180.873 cv
68.4786 173.373 mo
67.0982 173.373 65.9785 174.492 65.9785 175.873 cv
65.9785 177.254 67.0982 178.373 68.4786 178.373 cv
69.8594 178.373 70.9791 177.254 70.9791 175.873 cv
70.9791 174.492 69.8594 173.373 68.4786 173.373 cv
62.7652 165.936 mo
61.3842 165.936 60.2651 167.054 60.2651 168.435 cv
60.2651 169.816 61.3842 170.935 62.7652 170.935 cv
64.146 170.935 65.2655 169.816 65.2655 168.435 cv
65.2655 167.054 64.146 165.936 62.7652 165.936 cv
68.4786 165.873 mo
67.0982 165.873 65.9785 166.992 65.9785 168.373 cv
65.9785 169.754 67.0982 170.873 68.4786 170.873 cv
69.8594 170.873 70.9791 169.754 70.9791 168.373 cv
70.9791 166.992 69.8594 165.873 68.4786 165.873 cv
62.7652 158.435 mo
61.3842 158.435 60.2651 159.554 60.2651 160.934 cv
60.2651 162.316 61.3842 163.435 62.7652 163.435 cv
64.146 163.435 65.2655 162.316 65.2655 160.934 cv
65.2655 159.554 64.146 158.435 62.7652 158.435 cv
68.4786 158.373 mo
67.0982 158.373 65.9785 159.492 65.9785 160.873 cv
65.9785 162.254 67.0982 163.373 68.4786 163.373 cv
69.8594 163.373 70.9791 162.254 70.9791 160.873 cv
70.9791 159.492 69.8594 158.373 68.4786 158.373 cv
62.7652 150.935 mo
61.3842 150.935 60.2651 152.054 60.2651 153.435 cv
60.2651 154.816 61.3842 155.935 62.7652 155.935 cv
64.146 155.935 65.2655 154.816 65.2655 153.435 cv
65.2655 152.054 64.146 150.935 62.7652 150.935 cv
68.4786 150.873 mo
67.0982 150.873 65.9785 151.992 65.9785 153.373 cv
65.9785 154.754 67.0982 155.873 68.4786 155.873 cv
69.8594 155.873 70.9791 154.754 70.9791 153.373 cv
70.9791 151.992 69.8594 150.873 68.4786 150.873 cv
.0392157 .0392157 .203922 rgb
f
78.5186 244.46 mo
68.1441 244.46 li
68.1441 240.966 li
78.5186 240.966 li
78.5186 244.46 li
.0392157 .333333 1 rgb
f
47.8471 244.46 mo
44.5992 244.46 li
44.5992 244.379 li
47.8471 244.379 li
47.8471 244.46 li
37.8526 244.46 mo
12.2304 244.46 li
12.2304 244.379 li
37.8526 244.379 li
37.8526 244.46 li
47.8471 242.378 mo
46.3994 242.378 li
46.3994 238.772 li
35.3276 238.772 li
35.3276 242.378 li
29.9967 242.378 li
29.9967 238.772 li
18.9248 238.772 li
18.9248 242.378 li
15.2441 242.378 li
15.2441 238.432 li
12.2304 238.432 li
12.2304 238.246 li
23.751 238.246 li
23.751 238.613 li
40.1229 238.613 li
40.1229 238.246 li
51.8248 238.246 li
51.8248 239.765 li
47.8471 239.765 li
47.8471 242.378 li
47.8471 236.071 mo
46.3994 236.071 li
46.3994 231.323 li
35.3276 231.323 li
35.3276 232.68 li
29.9967 232.68 li
29.9967 231.323 li
18.9248 231.323 li
18.9248 236.071 li
13.5936 236.071 li
13.5936 231.323 li
12.2304 231.323 li
12.2304 228.902 li
13.5936 228.902 li
13.5936 223.874 li
12.2304 223.874 li
12.2304 221.453 li
13.5936 221.453 li
13.5936 218.16 li
18.9248 218.16 li
18.9248 221.453 li
29.9967 221.453 li
29.9967 218.16 li
35.3276 218.16 li
35.3276 221.453 li
37.8526 221.453 li
37.8526 223.438 li
44.5992 223.438 li
44.5992 221.453 li
46.3994 221.453 li
46.3994 218.16 li
46.4614 218.16 li
46.4614 212.895 li
46.3994 212.895 li
46.3994 208.975 li
35.3276 208.975 li
35.3276 212.895 li
29.9967 212.895 li
29.9967 208.975 li
18.9248 208.975 li
18.9248 212.895 li
13.5936 212.895 li
13.5936 208.975 li
2.52155 208.975 li
2.52155 212.895 li
.906155 212.895 li
.906155 215.386 li
0 215.386 li
0 199.863 li
14.3408 199.863 li
14.3408 197.688 li
0 197.688 li
0 185.542 li
16.7075 185.542 li
16.7075 183.542 li
0 183.542 li
0 172.157 li
51.8248 172.157 li
51.8248 218.699 li
47.8471 218.699 li
47.8471 223.438 li
51.8248 223.438 li
51.8248 225.721 li
47.8471 225.721 li
47.8471 230.461 li
51.8248 230.461 li
51.8248 232.743 li
47.8471 232.743 li
47.8471 236.071 li
37.8526 228.902 mo
37.8526 230.461 li
44.5992 230.461 li
44.5992 228.902 li
46.3994 228.902 li
46.3994 223.874 li
35.3276 223.874 li
35.3276 228.902 li
37.8526 228.902 li
18.9248 223.874 mo
18.9248 228.902 li
29.9967 228.902 li
29.9967 223.874 li
18.9248 223.874 li
.0392157 .0392157 .290196 rgb
f
14.3408 199.863 mo
0 199.863 li
0 197.688 li
14.3408 197.688 li
14.3408 199.863 li
.223529 .403922 .552941 rgb
f
47.8471 244.379 mo
44.5992 244.379 li
44.5992 243.801 li
46.3994 243.801 li
46.3994 242.378 li
47.8471 242.378 li
47.8471 244.379 li
37.8526 244.379 mo
12.2304 244.379 li
12.2304 243.801 li
13.5936 243.801 li
13.5936 243.365 li
15.2441 243.365 li
15.2441 242.378 li
18.9248 242.378 li
18.9248 243.801 li
29.9967 243.801 li
29.9967 242.378 li
35.3276 242.378 li
35.3276 243.801 li
37.8526 243.801 li
37.8526 244.379 li
.0392157 .0392157 .290196 rgb
f
62.7652 170.935 mo
61.3842 170.935 60.2651 169.816 60.2651 168.435 cv
60.2651 167.054 61.3842 165.936 62.7652 165.936 cv
64.146 165.936 65.2655 167.054 65.2655 168.435 cv
65.2655 169.816 64.146 170.935 62.7652 170.935 cv
62.7652 163.435 mo
61.3842 163.435 60.2651 162.316 60.2651 160.934 cv
60.2651 159.554 61.3842 158.435 62.7652 158.435 cv
64.146 158.435 65.2655 159.554 65.2655 160.934 cv
65.2655 162.316 64.146 163.435 62.7652 163.435 cv
62.7652 155.935 mo
61.3842 155.935 60.2651 154.816 60.2651 153.435 cv
60.2651 152.054 61.3842 150.935 62.7652 150.935 cv
64.146 150.935 65.2655 152.054 65.2655 153.435 cv
65.2655 154.816 64.146 155.935 62.7652 155.935 cv
.105882 .0392157 .270588 rgb
f
116.243 197.548 mo
85.5727 197.548 li
85.5727 150.844 li
184.88 150.844 li
184.88 172.1 li
183.018 172.1 li
183.018 172.157 li
160.735 172.157 li
160.735 183.595 li
116.243 183.595 li
116.243 194.747 li
115.71 194.88 115.316 195.362 115.316 195.935 cv
115.316 196.509 115.71 196.99 116.243 197.123 cv
116.243 197.548 li
111.031 194.711 mo
110.354 194.711 109.806 195.259 109.806 195.935 cv
109.806 196.611 110.354 197.159 111.031 197.159 cv
111.707 197.159 112.255 196.611 112.255 195.935 cv
112.255 195.259 111.707 194.711 111.031 194.711 cv
105.521 194.711 mo
104.844 194.711 104.296 195.259 104.296 195.935 cv
104.296 196.611 104.844 197.159 105.521 197.159 cv
106.197 197.159 106.745 196.611 106.745 195.935 cv
106.745 195.259 106.197 194.711 105.521 194.711 cv
100.01 194.711 mo
99.3334 194.711 98.7856 195.259 98.7856 195.935 cv
98.7856 196.611 99.3334 197.159 100.01 197.159 cv
100.686 197.159 101.234 196.611 101.234 195.935 cv
101.234 195.259 100.686 194.711 100.01 194.711 cv
94.4999 194.711 mo
93.8238 194.711 93.2753 195.259 93.2753 195.935 cv
93.2753 196.611 93.8238 197.159 94.4999 197.159 cv
95.1763 197.159 95.7246 196.611 95.7246 195.935 cv
95.7246 195.259 95.1763 194.711 94.4999 194.711 cv
88.9898 194.711 mo
88.3135 194.711 87.7652 195.259 87.7652 195.935 cv
87.7652 196.611 88.3135 197.159 88.9898 197.159 cv
89.666 197.159 90.2143 196.611 90.2143 195.935 cv
90.2143 195.259 89.666 194.711 88.9898 194.711 cv
.0392157 .0392157 .239216 rgb
f
184.88 172.157 mo
183.018 172.157 li
183.018 172.1 li
184.88 172.1 li
184.88 172.157 li
.168627 .305882 .698039 rgb
f
111.031 197.159 mo
110.354 197.159 109.806 196.611 109.806 195.935 cv
109.806 195.259 110.354 194.711 111.031 194.711 cv
111.707 194.711 112.255 195.259 112.255 195.935 cv
112.255 196.611 111.707 197.159 111.031 197.159 cv
105.521 197.159 mo
104.844 197.159 104.296 196.611 104.296 195.935 cv
104.296 195.259 104.844 194.711 105.521 194.711 cv
106.197 194.711 106.745 195.259 106.745 195.935 cv
106.745 196.611 106.197 197.159 105.521 197.159 cv
100.01 197.159 mo
99.3334 197.159 98.7856 196.611 98.7856 195.935 cv
98.7856 195.259 99.3334 194.711 100.01 194.711 cv
100.686 194.711 101.234 195.259 101.234 195.935 cv
101.234 196.611 100.686 197.159 100.01 197.159 cv
94.4999 197.159 mo
93.8238 197.159 93.2753 196.611 93.2753 195.935 cv
93.2753 195.259 93.8238 194.711 94.4999 194.711 cv
95.1763 194.711 95.7246 195.259 95.7246 195.935 cv
95.7246 196.611 95.1763 197.159 94.4999 197.159 cv
88.9898 197.159 mo
88.3135 197.159 87.7652 196.611 87.7652 195.935 cv
87.7652 195.259 88.3135 194.711 88.9898 194.711 cv
89.666 194.711 90.2143 195.259 90.2143 195.935 cv
90.2143 196.611 89.666 197.159 88.9898 197.159 cv
116.243 197.123 mo
115.71 196.99 115.316 196.509 115.316 195.935 cv
115.316 195.362 115.71 194.88 116.243 194.747 cv
116.243 197.123 li
.403922 .0392157 .313725 rgb
f
78.5186 238.246 mo
51.8248 238.246 li
51.8248 237.482 li
54.5938 237.482 li
54.5938 236.071 li
57.8417 236.071 li
57.8417 237.482 li
64.5883 237.482 li
64.5883 236.071 li
78.5186 236.071 li
78.5186 238.246 li
1 .0392157 .423529 rgb
f
51.8248 238.246 mo
40.1229 238.246 li
40.1229 237.482 li
44.5992 237.482 li
44.5992 236.351 li
46.3994 236.351 li
46.3994 236.071 li
47.8471 236.071 li
47.8471 237.482 li
51.8248 237.482 li
51.8248 238.246 li
23.751 238.246 mo
12.2304 238.246 li
12.2304 236.351 li
13.5936 236.351 li
13.5936 236.071 li
18.9248 236.071 li
18.9248 236.351 li
23.751 236.351 li
23.751 238.246 li
1 .0392157 .478431 rgb
f
184.88 183.595 mo
160.735 183.595 li
160.735 172.157 li
183.018 172.157 li
183.018 174.275 li
184.88 174.275 li
184.88 183.595 li
.0392157 .0392157 .317647 rgb
f
184.88 174.275 mo
183.018 174.275 li
183.018 172.157 li
184.88 172.157 li
184.88 174.275 li
.168627 .305882 .729412 rgb
f
46.3994 242.378 mo
44.5992 242.378 li
44.5992 239.765 li
37.8526 239.765 li
37.8526 242.378 li
35.3276 242.378 li
35.3276 238.772 li
46.3994 238.772 li
46.3994 242.378 li
.231373 .0392157 .305882 rgb
f
46.3994 243.801 mo
44.5992 243.801 li
44.5992 242.378 li
46.3994 242.378 li
46.3994 243.801 li
37.8526 243.801 mo
35.3276 243.801 li
35.3276 242.378 li
37.8526 242.378 li
37.8526 243.801 li
f
29.9967 242.378 mo
18.9248 242.378 li
18.9248 238.772 li
29.9967 238.772 li
29.9967 242.378 li
f
29.9967 243.801 mo
18.9248 243.801 li
18.9248 242.378 li
29.9967 242.378 li
29.9967 243.801 li
13.5936 243.801 mo
12.2304 243.801 li
12.2304 243.365 li
13.5936 243.365 li
13.5936 243.801 li
f
46.3994 236.071 mo
44.5992 236.071 li
44.5992 232.743 li
40.1229 232.743 li
40.1229 232.68 li
35.3276 232.68 li
35.3276 231.323 li
46.3994 231.323 li
46.3994 236.071 li
f
46.3994 236.351 mo
44.5992 236.351 li
44.5992 236.071 li
46.3994 236.071 li
46.3994 236.351 li
1 .0392157 .498039 rgb
f
23.751 236.071 mo
18.9248 236.071 li
18.9248 231.323 li
29.9967 231.323 li
29.9967 232.68 li
23.751 232.68 li
23.751 236.071 li
.231373 .0392157 .305882 rgb
f
23.751 236.351 mo
18.9248 236.351 li
18.9248 236.071 li
23.751 236.071 li
23.751 236.351 li
1 .0392157 .498039 rgb
f
13.5936 236.071 mo
12.2304 236.071 li
12.2304 231.323 li
13.5936 231.323 li
13.5936 236.071 li
.231373 .0392157 .305882 rgb
f
13.5936 236.351 mo
12.2304 236.351 li
12.2304 236.071 li
13.5936 236.071 li
13.5936 236.351 li
1 .0392157 .498039 rgb
f
46.3994 228.902 mo
44.5992 228.902 li
44.5992 225.721 li
37.8526 225.721 li
37.8526 228.902 li
35.3276 228.902 li
35.3276 223.874 li
46.3994 223.874 li
46.3994 228.902 li
29.9967 228.902 mo
18.9248 228.902 li
18.9248 223.874 li
29.9967 223.874 li
29.9967 228.902 li
13.5936 228.902 mo
12.2304 228.902 li
12.2304 223.874 li
13.5936 223.874 li
13.5936 228.902 li
46.3994 221.453 mo
44.5992 221.453 li
44.5992 218.699 li
37.8526 218.699 li
37.8526 221.453 li
35.3276 221.453 li
35.3276 218.16 li
46.3994 218.16 li
46.3994 221.453 li
29.9967 221.453 mo
18.9248 221.453 li
18.9248 218.16 li
29.9967 218.16 li
29.9967 221.453 li
13.5936 221.453 mo
12.2304 221.453 li
12.2304 218.16 li
13.5936 218.16 li
13.5936 221.453 li
46.3994 212.895 mo
35.3276 212.895 li
35.3276 208.975 li
46.3994 208.975 li
46.3994 212.895 li
29.9967 212.895 mo
18.9248 212.895 li
18.9248 208.975 li
29.9967 208.975 li
29.9967 212.895 li
13.5936 212.895 mo
2.52155 212.895 li
2.52155 208.975 li
13.5936 208.975 li
13.5936 212.895 li
.231373 .0392157 .305882 rgb
f
15.2441 242.378 mo
13.5936 242.378 li
13.5936 238.772 li
12.2304 238.772 li
12.2304 238.432 li
15.2441 238.432 li
15.2441 242.378 li
.0509804 .384314 .537255 rgb
f
15.2441 243.365 mo
13.5936 243.365 li
13.5936 242.378 li
15.2441 242.378 li
15.2441 243.365 li
f
13.5936 242.378 mo
12.2304 242.378 li
12.2304 238.772 li
13.5936 238.772 li
13.5936 242.378 li
.239216 .384314 .552941 rgb
f
13.5936 243.365 mo
12.2304 243.365 li
12.2304 242.378 li
13.5936 242.378 li
13.5936 243.365 li
f
16.7075 185.542 mo
0 185.542 li
0 183.542 li
16.7075 183.542 li
16.7075 185.542 li
.0392157 .192157 .654902 rgb
f
160.735 197.548 mo
116.243 197.548 li
116.243 197.123 li
116.338 197.147 116.438 197.159 116.541 197.159 cv
117.217 197.159 117.765 196.611 117.765 195.935 cv
117.765 195.259 117.217 194.711 116.541 194.711 cv
116.438 194.711 116.338 194.723 116.243 194.747 cv
116.243 183.595 li
160.735 183.595 li
160.735 197.548 li
.0392157 .0392157 .305882 rgb
f
116.541 197.159 mo
116.438 197.159 116.338 197.147 116.243 197.123 cv
116.243 194.747 li
116.338 194.723 116.438 194.711 116.541 194.711 cv
117.217 194.711 117.765 195.259 117.765 195.935 cv
117.765 196.611 117.217 197.159 116.541 197.159 cv
.403922 .0392157 .372549 rgb
f
184.88 197.548 mo
160.735 197.548 li
160.735 183.595 li
184.88 183.595 li
184.88 197.548 li
.0392157 .0392157 .376471 rgb
f
68.4786 185.873 mo
67.0982 185.873 65.9785 184.754 65.9785 183.373 cv
65.9785 181.992 67.0982 180.873 68.4786 180.873 cv
69.8594 180.873 70.9791 181.992 70.9791 183.373 cv
70.9791 184.754 69.8594 185.873 68.4786 185.873 cv
68.4786 178.373 mo
67.0982 178.373 65.9785 177.254 65.9785 175.873 cv
65.9785 174.492 67.0982 173.373 68.4786 173.373 cv
69.8594 173.373 70.9791 174.492 70.9791 175.873 cv
70.9791 177.254 69.8594 178.373 68.4786 178.373 cv
68.4786 170.873 mo
67.0982 170.873 65.9785 169.754 65.9785 168.373 cv
65.9785 166.992 67.0982 165.873 68.4786 165.873 cv
69.8594 165.873 70.9791 166.992 70.9791 168.373 cv
70.9791 169.754 69.8594 170.873 68.4786 170.873 cv
68.4786 163.373 mo
67.0982 163.373 65.9785 162.254 65.9785 160.873 cv
65.9785 159.492 67.0982 158.373 68.4786 158.373 cv
69.8594 158.373 70.9791 159.492 70.9791 160.873 cv
70.9791 162.254 69.8594 163.373 68.4786 163.373 cv
68.4786 155.873 mo
67.0982 155.873 65.9785 154.754 65.9785 153.373 cv
65.9785 151.992 67.0982 150.873 68.4786 150.873 cv
69.8594 150.873 70.9791 151.992 70.9791 153.373 cv
70.9791 154.754 69.8594 155.873 68.4786 155.873 cv
.270588 .0392157 .384314 rgb
f
27.2081 256.594 mo
26.5317 256.594 25.9835 256.046 25.9835 255.369 cv
25.9835 254.692 26.5317 254.145 27.2081 254.145 cv
27.8843 254.145 28.4325 254.692 28.4325 255.369 cv
28.4325 256.046 27.8843 256.594 27.2081 256.594 cv
21.6978 256.594 mo
21.0214 256.594 20.4732 256.046 20.4732 255.369 cv
20.4732 254.692 21.0214 254.145 21.6978 254.145 cv
22.374 254.145 22.9224 254.692 22.9224 255.369 cv
22.9224 256.046 22.374 256.594 21.6978 256.594 cv
16.1875 256.594 mo
15.5113 256.594 14.9628 256.046 14.9628 255.369 cv
14.9628 254.692 15.5113 254.145 16.1875 254.145 cv
16.8639 254.145 17.4121 254.692 17.4121 255.369 cv
17.4121 256.046 16.8639 256.594 16.1875 256.594 cv
1 .113725 .203922 rgb
f
40.1229 238.613 mo
23.751 238.613 li
23.751 238.246 li
40.1229 238.246 li
40.1229 238.613 li
35.3276 236.071 mo
29.9967 236.071 li
29.9967 232.68 li
35.3276 232.68 li
35.3276 236.071 li
.137255 .0392157 .309804 rgb
f
40.1229 238.246 mo
23.751 238.246 li
23.751 236.351 li
29.9967 236.351 li
29.9967 236.071 li
35.3276 236.071 li
35.3276 236.351 li
37.8526 236.351 li
37.8526 237.482 li
40.1229 237.482 li
40.1229 238.246 li
1 .0392157 .494118 rgb
f
37.8526 236.071 mo
35.3276 236.071 li
35.3276 232.68 li
40.1229 232.68 li
40.1229 232.743 li
37.8526 232.743 li
37.8526 236.071 li
.313725 .0392157 .32549 rgb
f
37.8526 236.351 mo
35.3276 236.351 li
35.3276 236.071 li
37.8526 236.071 li
37.8526 236.351 li
1 .0392157 .509804 rgb
f
29.9967 236.071 mo
23.751 236.071 li
23.751 232.68 li
29.9967 232.68 li
29.9967 236.071 li
.313725 .0392157 .32549 rgb
f
29.9967 236.351 mo
23.751 236.351 li
23.751 236.071 li
29.9967 236.071 li
29.9967 236.351 li
1 .0392157 .509804 rgb
f
12.2304 262.065 mo
0 262.065 li
0 256.545 li
.509382 256.397 .881404 255.927 .881404 255.369 cv
.881404 254.811 .509382 254.341 0 254.193 cv
0 251.115 li
12.2304 251.115 li
12.2304 262.065 li
10.6772 254.145 mo
10.001 254.145 9.45253 254.692 9.45253 255.369 cv
9.45253 256.046 10.001 256.594 10.6772 256.594 cv
11.3536 256.594 11.9018 256.046 11.9018 255.369 cv
11.9018 254.692 11.3536 254.145 10.6772 254.145 cv
5.16708 254.145 mo
4.49069 254.145 3.94288 254.692 3.94288 255.369 cv
3.94288 256.046 4.49069 256.594 5.16708 256.594 cv
5.84325 256.594 6.39149 256.046 6.39149 255.369 cv
6.39149 254.692 5.84325 254.145 5.16708 254.145 cv
12.2304 246.465 mo
0 246.465 li
0 244.586 li
2.6352 244.586 li
2.70623 244.599 2.77933 244.605 2.85405 244.605 cv
2.92875 244.605 3.00183 244.599 3.07284 244.586 cv
8.14551 244.586 li
8.21654 244.599 8.28964 244.605 8.36436 244.605 cv
8.43906 244.605 8.51213 244.599 8.58314 244.586 cv
12.2304 244.586 li
12.2304 246.465 li
.0392157 .0392157 .203922 rgb
f
12.2304 244.586 mo
8.58314 244.586 li
8.71135 244.563 8.83272 244.52 8.94372 244.46 cv
12.2304 244.46 li
12.2304 244.586 li
8.14551 244.586 mo
3.07284 244.586 li
3.20106 244.563 3.32244 244.52 3.43346 244.46 cv
7.78485 244.46 li
7.89587 244.52 8.01727 244.563 8.14551 244.586 cv
2.6352 244.586 mo
0 244.586 li
0 244.46 li
2.27454 244.46 li
2.38556 244.52 2.50696 244.563 2.6352 244.586 cv
.0392157 .0392157 .290196 rgb
f
12.2304 244.46 mo
8.94372 244.46 li
8.98896 244.436 9.03247 244.409 9.07407 244.379 cv
12.2304 244.379 li
12.2304 244.46 li
7.78485 244.46 mo
3.43346 244.46 li
3.47871 244.436 3.52223 244.409 3.56384 244.379 cv
7.65448 244.379 li
7.69609 244.409 7.7396 244.436 7.78485 244.46 cv
2.27454 244.46 mo
0 244.46 li
0 244.379 li
2.14417 244.379 li
2.18578 244.409 2.22929 244.436 2.27454 244.46 cv
12.2304 238.432 mo
0 238.432 li
0 238.246 li
12.2304 238.246 li
12.2304 238.432 li
2.52155 236.071 mo
0 236.071 li
0 215.386 li
.906155 215.386 li
.906155 218.16 li
2.52155 218.16 li
2.52155 221.453 li
12.2304 221.453 li
12.2304 223.874 li
2.52155 223.874 li
2.52155 228.902 li
12.2304 228.902 li
12.2304 231.323 li
2.52155 231.323 li
2.52155 236.071 li
f
12.2304 244.379 mo
9.07407 244.379 li
9.27403 244.237 9.42936 244.035 9.51496 243.801 cv
12.2304 243.801 li
12.2304 244.379 li
7.65448 244.379 mo
3.56384 244.379 li
3.76384 244.237 3.91921 244.035 4.00484 243.801 cv
7.21354 243.801 li
7.29915 244.035 7.45448 244.237 7.65448 244.379 cv
2.14417 244.379 mo
0 244.379 li
0 243.365 li
1.62951 243.365 li
1.62945 243.37 1.62942 243.376 1.62942 243.381 cv
1.62942 243.793 1.83259 244.157 2.14417 244.379 cv
f
12.2304 238.246 mo
0 238.246 li
0 236.071 li
2.52155 236.071 li
2.52155 236.351 li
12.2304 236.351 li
12.2304 238.246 li
1 .0392157 .478431 rgb
f
12.2304 243.801 mo
9.51496 243.801 li
9.56272 243.67 9.58878 243.528 9.58878 243.381 cv
9.58878 243.376 9.58874 243.37 9.58868 243.365 cv
12.2304 243.365 li
12.2304 243.801 li
7.21354 243.801 mo
4.00484 243.801 li
4.05262 243.67 4.07868 243.528 4.07868 243.381 cv
4.07868 243.376 4.07865 243.37 4.07859 243.365 cv
7.13982 243.365 li
7.13976 243.37 7.13972 243.376 7.13972 243.381 cv
7.13972 243.528 7.16577 243.67 7.21354 243.801 cv
.231373 .0392157 .305882 rgb
f
12.2304 236.071 mo
2.52155 236.071 li
2.52155 231.323 li
12.2304 231.323 li
12.2304 236.071 li
f
12.2304 236.351 mo
2.52155 236.351 li
2.52155 236.071 li
12.2304 236.071 li
12.2304 236.351 li
1 .0392157 .498039 rgb
f
12.2304 228.902 mo
2.52155 228.902 li
2.52155 223.874 li
12.2304 223.874 li
12.2304 228.902 li
12.2304 221.453 mo
2.52155 221.453 li
2.52155 218.16 li
12.2304 218.16 li
12.2304 221.453 li
.231373 .0392157 .305882 rgb
f
2.15143 242.378 mo
0 242.378 li
0 238.432 li
12.2304 238.432 li
12.2304 238.772 li
2.52155 238.772 li
2.52155 242.202 li
2.38744 242.24 2.26264 242.3 2.15143 242.378 cv
.0509804 .384314 .537255 rgb
f
1.62951 243.365 mo
0 243.365 li
0 242.378 li
2.15143 242.378 li
1.83973 242.597 1.63461 242.957 1.62951 243.365 cv
f
12.2304 242.378 mo
9.06681 242.378 li
8.86794 242.238 8.62572 242.156 8.36436 242.156 cv
8.10291 242.156 7.86064 242.238 7.66174 242.378 cv
3.55657 242.378 li
3.35767 242.238 3.11541 242.156 2.85405 242.156 cv
2.73879 242.156 2.62729 242.172 2.52155 242.202 cv
2.52155 238.772 li
12.2304 238.772 li
12.2304 242.378 li
.239216 .384314 .552941 rgb
f
12.2304 243.365 mo
9.58868 243.365 li
9.58358 242.957 9.37846 242.597 9.06681 242.378 cv
12.2304 242.378 li
12.2304 243.365 li
7.13982 243.365 mo
4.07859 243.365 li
4.07349 242.957 3.86829 242.597 3.55657 242.378 cv
7.66174 242.378 li
7.35004 242.597 7.14492 242.957 7.13982 243.365 cv
f
10.6772 256.594 mo
10.001 256.594 9.45253 256.046 9.45253 255.369 cv
9.45253 254.692 10.001 254.145 10.6772 254.145 cv
11.3536 254.145 11.9018 254.692 11.9018 255.369 cv
11.9018 256.046 11.3536 256.594 10.6772 256.594 cv
5.16708 256.594 mo
4.49069 256.594 3.94288 256.046 3.94288 255.369 cv
3.94288 254.692 4.49069 254.145 5.16708 254.145 cv
5.84325 254.145 6.39149 254.692 6.39149 255.369 cv
6.39149 256.046 5.84325 256.594 5.16708 256.594 cv
0 256.545 mo
0 254.193 li
.509382 254.341 .881404 254.811 .881404 255.369 cv
.881404 255.927 .509382 256.397 0 256.545 cv
1 .113725 .203922 rgb
f
8.36436 244.605 mo
8.28964 244.605 8.21654 244.599 8.14551 244.586 cv
8.58314 244.586 li
8.51213 244.599 8.43906 244.605 8.36436 244.605 cv
1 .101961 .211765 rgb
f
8.58314 244.586 mo
8.14551 244.586 li
8.01727 244.563 7.89587 244.52 7.78485 244.46 cv
8.94372 244.46 li
8.83272 244.52 8.71135 244.563 8.58314 244.586 cv
1 .101961 .294118 rgb
f
8.94372 244.46 mo
7.78485 244.46 li
7.7396 244.436 7.69609 244.409 7.65448 244.379 cv
9.07407 244.379 li
9.03247 244.409 8.98896 244.436 8.94372 244.46 cv
f
9.07407 244.379 mo
7.65448 244.379 li
7.45448 244.237 7.29915 244.035 7.21354 243.801 cv
9.51496 243.801 li
9.42936 244.035 9.27403 244.237 9.07407 244.379 cv
f
9.51496 243.801 mo
7.21354 243.801 li
7.16577 243.67 7.13972 243.528 7.13972 243.381 cv
7.13972 243.376 7.13976 243.37 7.13982 243.365 cv
9.58868 243.365 li
9.58874 243.37 9.58878 243.376 9.58878 243.381 cv
9.58878 243.528 9.56272 243.67 9.51496 243.801 cv
1 .101961 .313725 rgb
f
9.06681 242.378 mo
7.66174 242.378 li
7.86064 242.238 8.10291 242.156 8.36436 242.156 cv
8.62572 242.156 8.86794 242.238 9.06681 242.378 cv
1 .423529 .556863 rgb
f
9.58868 243.365 mo
7.13982 243.365 li
7.14492 242.957 7.35004 242.597 7.66174 242.378 cv
9.06681 242.378 li
9.37846 242.597 9.58358 242.957 9.58868 243.365 cv
f
2.85405 244.605 mo
2.77933 244.605 2.70623 244.599 2.6352 244.586 cv
3.07284 244.586 li
3.00183 244.599 2.92875 244.605 2.85405 244.605 cv
1 .101961 .211765 rgb
f
3.07284 244.586 mo
2.6352 244.586 li
2.50696 244.563 2.38556 244.52 2.27454 244.46 cv
3.43346 244.46 li
3.32244 244.52 3.20106 244.563 3.07284 244.586 cv
1 .101961 .294118 rgb
f
3.43346 244.46 mo
2.27454 244.46 li
2.22929 244.436 2.18578 244.409 2.14417 244.379 cv
3.56384 244.379 li
3.52223 244.409 3.47871 244.436 3.43346 244.46 cv
f
3.56384 244.379 mo
2.14417 244.379 li
1.83259 244.157 1.62942 243.793 1.62942 243.381 cv
1.62942 243.376 1.62945 243.37 1.62951 243.365 cv
2.52155 243.365 li
2.52155 243.801 li
4.00484 243.801 li
3.91921 244.035 3.76384 244.237 3.56384 244.379 cv
f
4.00484 243.801 mo
2.52155 243.801 li
2.52155 243.365 li
4.07859 243.365 li
4.07865 243.37 4.07868 243.376 4.07868 243.381 cv
4.07868 243.528 4.05262 243.67 4.00484 243.801 cv
1 .101961 .313725 rgb
f
2.52155 242.378 mo
2.15143 242.378 li
2.26264 242.3 2.38744 242.24 2.52155 242.202 cv
2.52155 242.378 li
1 .423529 .541176 rgb
f
2.52155 243.365 mo
1.62951 243.365 li
1.63461 242.957 1.83973 242.597 2.15143 242.378 cv
2.52155 242.378 li
2.52155 243.365 li
f
3.55657 242.378 mo
2.52155 242.378 li
2.52155 242.202 li
2.62729 242.172 2.73879 242.156 2.85405 242.156 cv
3.11541 242.156 3.35767 242.238 3.55657 242.378 cv
1 .423529 .556863 rgb
f
4.07859 243.365 mo
2.52155 243.365 li
2.52155 242.378 li
3.55657 242.378 li
3.86829 242.597 4.07349 242.957 4.07859 243.365 cv
f
78.5186 270 mo
12.2304 270 li
12.2304 262.065 li
78.5186 262.065 li
78.5186 269.196 li
37.8165 269.196 li
37.8165 269.919 li
78.5186 269.919 li
78.5186 270 li
.0392157 .0392157 .203922 rgb
f
78.5186 269.919 mo
37.8165 269.919 li
37.8165 269.196 li
78.5186 269.196 li
78.5186 269.919 li
.298039 .0823529 .286274 rgb
f
12.2304 270 mo
0 270 li
0 262.065 li
12.2304 262.065 li
12.2304 270 li
.0392157 .0392157 .203922 rgb
f
64.5883 251.525 mo
57.8417 251.525 li
57.8417 246.786 li
64.5883 246.786 li
64.5883 251.525 li
54.5938 251.525 mo
47.8471 251.525 li
47.8471 246.786 li
54.5938 246.786 li
54.5938 251.525 li
44.5992 251.525 mo
37.8526 251.525 li
37.8526 251.115 li
44.5992 251.115 li
44.5992 251.525 li
64.5883 244.504 mo
57.8417 244.504 li
57.8417 244.46 li
64.5883 244.46 li
64.5883 244.504 li
.231373 .0627451 .243137 rgb
f
64.5883 244.46 mo
57.8417 244.46 li
57.8417 239.765 li
64.5883 239.765 li
64.5883 244.46 li
f
54.5938 244.504 mo
51.8248 244.504 li
51.8248 244.46 li
54.5938 244.46 li
54.5938 244.504 li
f
51.8248 244.504 mo
47.8471 244.504 li
47.8471 244.46 li
51.8248 244.46 li
51.8248 244.504 li
.231373 .0627451 .32549 rgb
f
54.5938 244.46 mo
51.8248 244.46 li
51.8248 239.765 li
54.5938 239.765 li
54.5938 244.46 li
.231373 .0627451 .243137 rgb
f
51.8248 244.46 mo
47.8471 244.46 li
47.8471 244.379 li
48.6041 244.379 li
48.6041 242.378 li
47.8471 242.378 li
47.8471 239.765 li
51.8248 239.765 li
51.8248 244.46 li
.231373 .0627451 .32549 rgb
f
48.6041 244.379 mo
47.8471 244.379 li
47.8471 242.378 li
48.6041 242.378 li
48.6041 244.379 li
f
44.5992 244.504 mo
37.8526 244.504 li
37.8526 244.46 li
44.5992 244.46 li
44.5992 244.504 li
f
44.5992 244.46 mo
37.8526 244.46 li
37.8526 244.379 li
44.5992 244.379 li
44.5992 244.46 li
f
44.5992 244.379 mo
37.8526 244.379 li
37.8526 243.801 li
44.5992 243.801 li
44.5992 244.379 li
f
44.5992 242.378 mo
37.8526 242.378 li
37.8526 239.765 li
44.5992 239.765 li
44.5992 242.378 li
.388235 .0627451 .341176 rgb
f
44.5992 243.801 mo
37.8526 243.801 li
37.8526 242.378 li
44.5992 242.378 li
44.5992 243.801 li
f
64.5883 236.071 mo
57.8417 236.071 li
57.8417 232.743 li
64.5883 232.743 li
64.5883 236.071 li
.231373 .0627451 .243137 rgb
f
64.5883 237.482 mo
57.8417 237.482 li
57.8417 236.071 li
64.5883 236.071 li
64.5883 237.482 li
1 .0627451 .45098 rgb
f
54.5938 236.071 mo
51.8248 236.071 li
51.8248 232.743 li
54.5938 232.743 li
54.5938 236.071 li
.231373 .0627451 .243137 rgb
f
51.8248 236.071 mo
47.8471 236.071 li
47.8471 232.743 li
51.8248 232.743 li
51.8248 236.071 li
.231373 .0627451 .32549 rgb
f
54.5938 237.482 mo
51.8248 237.482 li
51.8248 236.071 li
54.5938 236.071 li
54.5938 237.482 li
1 .0627451 .45098 rgb
f
51.8248 237.482 mo
47.8471 237.482 li
47.8471 236.071 li
51.8248 236.071 li
51.8248 237.482 li
44.5992 237.482 mo
40.1229 237.482 li
40.1229 236.351 li
44.5992 236.351 li
44.5992 237.482 li
1 .0627451 .501961 rgb
f
44.5992 236.071 mo
40.1229 236.071 li
40.1229 232.743 li
44.5992 232.743 li
44.5992 236.071 li
.388235 .0627451 .341176 rgb
f
44.5992 236.351 mo
40.1229 236.351 li
40.1229 236.071 li
44.5992 236.071 li
44.5992 236.351 li
1 .0627451 .521569 rgb
f
40.1229 237.482 mo
37.8526 237.482 li
37.8526 236.351 li
40.1229 236.351 li
40.1229 237.482 li
1 .0627451 .517647 rgb
f
40.1229 236.071 mo
37.8526 236.071 li
37.8526 232.743 li
40.1229 232.743 li
40.1229 236.071 li
.447059 .0627451 .356863 rgb
f
40.1229 236.351 mo
37.8526 236.351 li
37.8526 236.071 li
40.1229 236.071 li
40.1229 236.351 li
1 .0627451 .533333 rgb
f
64.5883 230.461 mo
57.8417 230.461 li
57.8417 225.721 li
64.5883 225.721 li
64.5883 230.461 li
54.5938 230.461 mo
51.8248 230.461 li
51.8248 225.721 li
54.5938 225.721 li
54.5938 230.461 li
.231373 .0627451 .243137 rgb
f
51.8248 230.461 mo
47.8471 230.461 li
47.8471 225.721 li
51.8248 225.721 li
51.8248 230.461 li
44.5992 230.461 mo
37.8526 230.461 li
37.8526 228.902 li
44.5992 228.902 li
44.5992 230.461 li
.231373 .0627451 .32549 rgb
f
44.5992 228.902 mo
37.8526 228.902 li
37.8526 225.721 li
44.5992 225.721 li
44.5992 228.902 li
.388235 .0627451 .341176 rgb
f
64.5883 223.438 mo
57.8417 223.438 li
57.8417 218.699 li
64.5883 218.699 li
64.5883 223.438 li
54.5938 223.438 mo
51.8248 223.438 li
51.8248 218.699 li
54.5938 218.699 li
54.5938 223.438 li
.231373 .0627451 .243137 rgb
f
51.8248 223.438 mo
47.8471 223.438 li
47.8471 218.699 li
51.8248 218.699 li
51.8248 223.438 li
44.5992 223.438 mo
37.8526 223.438 li
37.8526 221.453 li
44.5992 221.453 li
44.5992 223.438 li
.231373 .0627451 .32549 rgb
f
44.5992 221.453 mo
37.8526 221.453 li
37.8526 218.699 li
44.5992 218.699 li
44.5992 221.453 li
.388235 .0627451 .341176 rgb
f
45.6046 251.115 mo
44.5992 251.115 li
44.5992 246.786 li
37.8526 246.786 li
37.8526 251.115 li
12.2304 251.115 li
12.2304 246.465 li
45.6046 246.465 li
45.6046 251.115 li
.262745 .6 .666667 rgb
f
12.2304 251.115 mo
0 251.115 li
0 246.465 li
12.2304 246.465 li
12.2304 251.115 li
f
44.5992 251.115 mo
37.8526 251.115 li
37.8526 246.786 li
44.5992 246.786 li
44.5992 251.115 li
.411765 .611765 .682353 rgb
f
46.4614 218.16 mo
46.3994 218.16 li
46.3994 216.425 li
35.3276 216.425 li
35.3276 218.16 li
29.9967 218.16 li
29.9967 216.425 li
18.9248 216.425 li
18.9248 218.16 li
13.5936 218.16 li
13.5936 216.425 li
12.2304 216.425 li
12.2304 215.386 li
.906155 215.386 li
.906155 212.895 li
2.52155 212.895 li
2.52155 214.003 li
13.5936 214.003 li
13.5936 212.895 li
18.9248 212.895 li
18.9248 214.003 li
29.9967 214.003 li
29.9967 212.895 li
35.3276 212.895 li
35.3276 214.003 li
46.3994 214.003 li
46.3994 212.895 li
46.4614 212.895 li
46.4614 218.16 li
1 .25098 .596078 rgb
f
46.3994 218.16 mo
35.3276 218.16 li
35.3276 216.425 li
46.3994 216.425 li
46.3994 218.16 li
29.9967 218.16 mo
18.9248 218.16 li
18.9248 216.425 li
29.9967 216.425 li
29.9967 218.16 li
13.5936 218.16 mo
12.2304 218.16 li
12.2304 216.425 li
13.5936 216.425 li
13.5936 218.16 li
46.3994 214.003 mo
35.3276 214.003 li
35.3276 212.895 li
46.3994 212.895 li
46.3994 214.003 li
29.9967 214.003 mo
18.9248 214.003 li
18.9248 212.895 li
29.9967 212.895 li
29.9967 214.003 li
13.5936 214.003 mo
2.52155 214.003 li
2.52155 212.895 li
13.5936 212.895 li
13.5936 214.003 li
1 .25098 .603922 rgb
f
2.52155 218.16 mo
.906155 218.16 li
.906155 215.386 li
12.2304 215.386 li
12.2304 216.425 li
2.52155 216.425 li
2.52155 218.16 li
1 .25098 .596078 rgb
f
12.2304 218.16 mo
2.52155 218.16 li
2.52155 216.425 li
12.2304 216.425 li
12.2304 218.16 li
1 .25098 .603922 rgb
f
245.554 262.065 mo
244.237 262.065 li
244.237 250.209 li
245.554 250.209 li
245.554 262.065 li
0 0 .101961 rgb
f
244.237 262.065 mo
243.819 262.065 li
243.819 250.209 li
244.237 250.209 li
244.237 262.065 li
0 0 .188235 rgb
f
222.214 267.092 mo
184.88 267.092 li
184.88 250.209 li
243.819 250.209 li
243.819 262.065 li
222.214 262.065 li
222.214 267.092 li
.00392157 .00392157 .203922 rgb
f
245.554 250.209 mo
244.237 250.209 li
244.237 244.586 li
245.554 244.586 li
245.554 250.209 li
0 0 .180392 rgb
f
244.237 250.209 mo
243.819 250.209 li
243.819 244.586 li
244.237 244.586 li
244.237 250.209 li
0 0 .258824 rgb
f
245.554 244.586 mo
244.237 244.586 li
244.237 244.46 li
245.554 244.46 li
245.554 244.586 li
0 0 .262745 rgb
f
244.237 244.586 mo
243.819 244.586 li
243.819 244.46 li
244.237 244.46 li
244.237 244.586 li
0 0 .333333 rgb
f
245.554 244.46 mo
244.237 244.46 li
244.237 221.02 li
245.499 221.02 li
245.499 218.981 li
244.237 218.981 li
244.237 218 li
245.499 218 li
245.499 215.961 li
244.237 215.961 li
244.237 214.979 li
245.499 214.979 li
245.499 212.94 li
244.237 212.94 li
244.237 211.959 li
245.499 211.959 li
245.499 209.92 li
244.237 209.92 li
244.237 208.938 li
245.499 208.938 li
245.499 206.899 li
244.237 206.899 li
244.237 202.651 li
245.554 202.651 li
245.554 244.46 li
245.554 198.746 mo
244.237 198.746 li
244.237 197.548 li
245.554 197.548 li
245.554 198.746 li
0 0 .262745 rgb
f
244.237 244.46 mo
243.819 244.46 li
243.819 221.02 li
244.237 221.02 li
244.237 244.46 li
244.237 218.981 mo
243.819 218.981 li
243.819 218 li
244.237 218 li
244.237 218.981 li
244.237 215.961 mo
243.819 215.961 li
243.819 214.979 li
244.237 214.979 li
244.237 215.961 li
244.237 212.94 mo
243.819 212.94 li
243.819 211.959 li
244.237 211.959 li
244.237 212.94 li
244.237 209.92 mo
243.819 209.92 li
243.819 208.938 li
244.237 208.938 li
244.237 209.92 li
244.237 206.899 mo
243.819 206.899 li
243.819 202.651 li
244.237 202.651 li
244.237 206.899 li
244.237 198.746 mo
243.819 198.746 li
243.819 197.548 li
244.237 197.548 li
244.237 198.746 li
0 0 .333333 rgb
f
245.554 202.651 mo
244.237 202.651 li
244.237 202.335 li
245.554 202.335 li
245.554 202.651 li
.2 0 .286274 rgb
f
244.237 202.651 mo
243.819 202.651 li
243.819 202.335 li
244.237 202.335 li
244.237 202.651 li
.2 0 .356863 rgb
f
245.554 198.994 mo
244.237 198.994 li
244.237 198.746 li
245.554 198.746 li
245.554 198.994 li
.0313725 .231373 .431373 rgb
f
244.237 198.994 mo
243.819 198.994 li
243.819 198.746 li
244.237 198.746 li
244.237 198.994 li
.0313725 .231373 .486274 rgb
f
245.554 202.335 mo
244.237 202.335 li
244.237 198.994 li
245.554 198.994 li
245.554 202.335 li
.223529 .231373 .45098 rgb
f
244.237 202.335 mo
243.819 202.335 li
243.819 198.994 li
244.237 198.994 li
244.237 202.335 li
.223529 .231373 .501961 rgb
f
243.819 250.209 mo
184.88 250.209 li
184.88 244.586 li
243.819 244.586 li
243.819 250.209 li
.00392157 .00392157 .27451 rgb
f
243.819 244.586 mo
184.88 244.586 li
184.88 244.555 li
186.315 244.555 li
186.315 244.46 li
243.819 244.46 li
243.819 244.586 li
.00392157 .00392157 .352941 rgb
f
186.315 244.555 mo
184.88 244.555 li
184.88 244.46 li
186.315 244.46 li
186.315 244.555 li
.00392157 .309804 1 rgb
f
243.819 244.46 mo
186.315 244.46 li
186.315 240.966 li
184.88 240.966 li
184.88 209.077 li
221.466 209.077 li
221.466 207.076 li
220.193 207.076 li
220.193 206.899 li
211.652 206.899 li
211.652 207.076 li
184.88 207.076 li
184.88 199.057 li
196.033 199.057 li
196.033 202.651 li
209.177 202.651 li
209.177 199.057 li
211.847 199.057 li
211.847 197.548 li
243.819 197.548 li
243.819 198.746 li
233.02 198.746 li
233.02 202.335 li
234.979 202.335 li
234.979 202.651 li
243.819 202.651 li
243.819 206.899 li
236.958 206.899 li
236.958 208.938 li
243.819 208.938 li
243.819 209.92 li
236.958 209.92 li
236.958 211.959 li
243.819 211.959 li
243.819 212.94 li
236.958 212.94 li
236.958 214.979 li
243.819 214.979 li
243.819 215.961 li
236.958 215.961 li
236.958 218 li
243.819 218 li
243.819 218.981 li
236.958 218.981 li
236.958 221.02 li
243.819 221.02 li
243.819 244.46 li
224.305 218.981 mo
224.305 221.02 li
232.846 221.02 li
232.846 218.981 li
224.305 218.981 li
211.652 218.981 mo
211.652 221.02 li
220.193 221.02 li
220.193 218.981 li
211.652 218.981 li
224.305 215.961 mo
224.305 218 li
232.846 218 li
232.846 215.961 li
224.305 215.961 li
211.652 215.961 mo
211.652 218 li
220.193 218 li
220.193 215.961 li
211.652 215.961 li
224.305 212.94 mo
224.305 214.979 li
232.846 214.979 li
232.846 212.94 li
224.305 212.94 li
211.652 212.94 mo
211.652 214.979 li
220.193 214.979 li
220.193 212.94 li
211.652 212.94 li
224.305 209.92 mo
224.305 211.959 li
232.846 211.959 li
232.846 209.92 li
224.305 209.92 li
211.652 209.92 mo
211.652 211.959 li
220.193 211.959 li
220.193 209.92 li
211.652 209.92 li
224.305 206.899 mo
224.305 208.938 li
232.846 208.938 li
232.846 206.899 li
224.305 206.899 li
215.506 198.994 mo
215.506 202.651 li
228.65 202.651 li
228.65 198.994 li
215.506 198.994 li
.00392157 .00392157 .352941 rgb
f
186.315 244.46 mo
184.88 244.46 li
184.88 240.966 li
186.315 240.966 li
186.315 244.46 li
.00392157 .309804 1 rgb
f
211.847 199.057 mo
209.177 199.057 li
209.177 198.994 li
196.033 198.994 li
196.033 199.057 li
184.88 199.057 li
184.88 197.548 li
211.847 197.548 li
211.847 199.057 li
.00392157 .00392157 .376471 rgb
f
243.819 202.651 mo
234.979 202.651 li
234.979 202.335 li
243.819 202.335 li
243.819 202.651 li
228.65 202.651 mo
215.506 202.651 li
215.506 198.994 li
228.65 198.994 li
228.65 202.651 li
209.177 202.651 mo
196.033 202.651 li
196.033 199.057 li
209.177 199.057 li
209.177 202.651 li
.203922 .00392157 .364706 rgb
f
209.177 199.057 mo
196.033 199.057 li
196.033 198.994 li
209.177 198.994 li
209.177 199.057 li
.203922 .00392157 .396078 rgb
f
234.979 202.335 mo
233.02 202.335 li
233.02 198.746 li
243.819 198.746 li
243.819 198.994 li
234.979 198.994 li
234.979 202.335 li
.0352941 .235294 .498039 rgb
f
243.819 202.335 mo
234.979 202.335 li
234.979 198.994 li
243.819 198.994 li
243.819 202.335 li
.227451 .235294 .513725 rgb
f
245.499 221.02 mo
244.237 221.02 li
244.237 218.981 li
245.499 218.981 li
245.499 221.02 li
.141176 0 .278431 rgb
f
244.237 221.02 mo
243.819 221.02 li
243.819 218.981 li
244.237 218.981 li
244.237 221.02 li
.141176 0 .352941 rgb
f
245.499 218 mo
244.237 218 li
244.237 215.961 li
245.499 215.961 li
245.499 218 li
.141176 0 .278431 rgb
f
244.237 218 mo
243.819 218 li
243.819 215.961 li
244.237 215.961 li
244.237 218 li
.141176 0 .352941 rgb
f
245.499 214.979 mo
244.237 214.979 li
244.237 212.94 li
245.499 212.94 li
245.499 214.979 li
.141176 0 .278431 rgb
f
244.237 214.979 mo
243.819 214.979 li
243.819 212.94 li
244.237 212.94 li
244.237 214.979 li
.141176 0 .352941 rgb
f
245.499 211.959 mo
244.237 211.959 li
244.237 209.92 li
245.499 209.92 li
245.499 211.959 li
.141176 0 .278431 rgb
f
244.237 211.959 mo
243.819 211.959 li
243.819 209.92 li
244.237 209.92 li
244.237 211.959 li
.141176 0 .352941 rgb
f
245.499 208.938 mo
244.237 208.938 li
244.237 206.899 li
245.499 206.899 li
245.499 208.938 li
.141176 0 .278431 rgb
f
244.237 208.938 mo
243.819 208.938 li
243.819 206.899 li
244.237 206.899 li
244.237 208.938 li
.141176 0 .352941 rgb
f
243.819 221.02 mo
236.958 221.02 li
236.958 218.981 li
243.819 218.981 li
243.819 221.02 li
232.846 221.02 mo
224.305 221.02 li
224.305 218.981 li
232.846 218.981 li
232.846 221.02 li
220.193 221.02 mo
211.652 221.02 li
211.652 218.981 li
220.193 218.981 li
220.193 221.02 li
243.819 218 mo
236.958 218 li
236.958 215.961 li
243.819 215.961 li
243.819 218 li
232.846 218 mo
224.305 218 li
224.305 215.961 li
232.846 215.961 li
232.846 218 li
220.193 218 mo
211.652 218 li
211.652 215.961 li
220.193 215.961 li
220.193 218 li
243.819 214.979 mo
236.958 214.979 li
236.958 212.94 li
243.819 212.94 li
243.819 214.979 li
232.846 214.979 mo
224.305 214.979 li
224.305 212.94 li
232.846 212.94 li
232.846 214.979 li
220.193 214.979 mo
211.652 214.979 li
211.652 212.94 li
220.193 212.94 li
220.193 214.979 li
243.819 211.959 mo
236.958 211.959 li
236.958 209.92 li
243.819 209.92 li
243.819 211.959 li
232.846 211.959 mo
224.305 211.959 li
224.305 209.92 li
232.846 209.92 li
232.846 211.959 li
220.193 211.959 mo
211.652 211.959 li
211.652 209.92 li
220.193 209.92 li
220.193 211.959 li
243.819 208.938 mo
236.958 208.938 li
236.958 206.899 li
243.819 206.899 li
243.819 208.938 li
232.846 208.938 mo
224.305 208.938 li
224.305 206.899 li
232.846 206.899 li
232.846 208.938 li
220.193 207.076 mo
211.652 207.076 li
211.652 206.899 li
220.193 206.899 li
220.193 207.076 li
.145098 .00392157 .360784 rgb
f
221.466 209.077 mo
184.88 209.077 li
184.88 207.076 li
211.652 207.076 li
211.652 208.938 li
220.193 208.938 li
220.193 207.076 li
221.466 207.076 li
221.466 209.077 li
.0235294 .364706 .576471 rgb
f
220.193 208.938 mo
211.652 208.938 li
211.652 207.076 li
220.193 207.076 li
220.193 208.938 li
.160784 .364706 .588235 rgb
f
171.444 270 mo
147.012 270 li
147.012 262.065 li
78.5186 262.065 li
78.5186 244.555 li
116.243 244.555 li
116.243 250.209 li
184.88 250.209 li
184.88 267.092 li
171.444 267.092 li
171.444 270 li
.0392157 .0392157 .286274 rgb
f
116.243 244.555 mo
78.5186 244.555 li
78.5186 244.46 li
116.243 244.46 li
116.243 244.555 li
.0392157 .333333 1 rgb
f
116.243 240.966 mo
78.5186 240.966 li
78.5186 238.246 li
89.5155 238.246 li
89.5155 236.071 li
78.5186 236.071 li
78.5186 197.548 li
85.5727 197.548 li
85.5727 199.057 li
116.243 199.057 li
116.243 209.756 li
115.816 209.947 115.52 210.376 115.52 210.873 cv
115.52 211.371 115.816 211.799 116.243 211.991 cv
116.243 240.966 li
111.234 209.648 mo
110.558 209.648 110.009 210.197 110.009 210.873 cv
110.009 211.55 110.558 212.098 111.234 212.098 cv
111.91 212.098 112.459 211.55 112.459 210.873 cv
112.459 210.197 111.91 209.648 111.234 209.648 cv
105.724 209.648 mo
105.047 209.648 104.499 210.197 104.499 210.873 cv
104.499 211.55 105.047 212.098 105.724 212.098 cv
106.4 212.098 106.948 211.55 106.948 210.873 cv
106.948 210.197 106.4 209.648 105.724 209.648 cv
100.213 209.648 mo
99.5371 209.648 98.9887 210.197 98.9887 210.873 cv
98.9887 211.55 99.5371 212.098 100.213 212.098 cv
100.89 212.098 101.438 211.55 101.438 210.873 cv
101.438 210.197 100.89 209.648 100.213 209.648 cv
94.7032 209.648 mo
94.0268 209.648 93.4786 210.197 93.4786 210.873 cv
93.4786 211.55 94.0268 212.098 94.7032 212.098 cv
95.3794 212.098 95.9276 211.55 95.9276 210.873 cv
95.9276 210.197 95.3794 209.648 94.7032 209.648 cv
.0392157 .0392157 .286274 rgb
f
116.243 244.46 mo
78.5186 244.46 li
78.5186 240.966 li
116.243 240.966 li
116.243 244.46 li
.0392157 .333333 1 rgb
f
116.243 199.057 mo
85.5727 199.057 li
85.5727 197.548 li
116.243 197.548 li
116.243 199.057 li
.0392157 .0392157 .317647 rgb
f
89.5155 238.246 mo
78.5186 238.246 li
78.5186 236.071 li
89.5155 236.071 li
89.5155 238.246 li
1 .0392157 .482353 rgb
f
184.88 250.209 mo
116.243 250.209 li
116.243 244.555 li
160.735 244.555 li
160.735 244.586 li
184.88 244.586 li
184.88 250.209 li
.0392157 .0392157 .34902 rgb
f
160.735 244.555 mo
116.243 244.555 li
116.243 244.46 li
160.735 244.46 li
160.735 244.555 li
.0392157 .333333 1 rgb
f
160.735 240.966 mo
116.243 240.966 li
116.243 211.991 li
116.396 212.059 116.566 212.098 116.744 212.098 cv
117.42 212.098 117.968 211.55 117.968 210.873 cv
117.968 210.197 117.42 209.648 116.744 209.648 cv
116.566 209.648 116.396 209.687 116.243 209.756 cv
116.243 199.057 li
160.735 199.057 li
160.735 207.076 li
144.682 207.076 li
144.682 209.077 li
160.735 209.077 li
160.735 240.966 li
122.254 209.648 mo
121.578 209.648 121.03 210.197 121.03 210.873 cv
121.03 211.55 121.578 212.098 122.254 212.098 cv
122.931 212.098 123.479 211.55 123.479 210.873 cv
123.479 210.197 122.931 209.648 122.254 209.648 cv
.0392157 .0392157 .34902 rgb
f
160.735 244.46 mo
116.243 244.46 li
116.243 240.966 li
160.735 240.966 li
160.735 244.46 li
.0392157 .333333 1 rgb
f
160.735 199.057 mo
116.243 199.057 li
116.243 197.548 li
160.735 197.548 li
160.735 199.057 li
.0392157 .0392157 .376471 rgb
f
184.88 244.586 mo
160.735 244.586 li
160.735 244.555 li
184.88 244.555 li
184.88 244.586 li
.0392157 .0392157 .419608 rgb
f
184.88 244.555 mo
160.735 244.555 li
160.735 244.46 li
184.88 244.46 li
184.88 244.555 li
.0392157 .333333 1 rgb
f
184.88 240.966 mo
160.735 240.966 li
160.735 209.077 li
184.88 209.077 li
184.88 240.966 li
184.88 207.076 mo
160.735 207.076 li
160.735 199.057 li
184.88 199.057 li
184.88 207.076 li
.0392157 .0392157 .419608 rgb
f
184.88 244.46 mo
160.735 244.46 li
160.735 240.966 li
184.88 240.966 li
184.88 244.46 li
.0392157 .333333 1 rgb
f
184.88 199.057 mo
160.735 199.057 li
160.735 197.548 li
184.88 197.548 li
184.88 199.057 li
.0392157 .0392157 .439216 rgb
f
160.735 209.077 mo
144.682 209.077 li
144.682 207.076 li
160.735 207.076 li
160.735 209.077 li
.0588235 .388235 .580392 rgb
f
184.88 209.077 mo
160.735 209.077 li
160.735 207.076 li
184.88 207.076 li
184.88 209.077 li
.0588235 .388235 .619608 rgb
f
122.254 212.098 mo
121.578 212.098 121.03 211.55 121.03 210.873 cv
121.03 210.197 121.578 209.648 122.254 209.648 cv
122.931 209.648 123.479 210.197 123.479 210.873 cv
123.479 211.55 122.931 212.098 122.254 212.098 cv
1 .176471 .34902 rgb
f
116.243 211.991 mo
115.816 211.799 115.52 211.371 115.52 210.873 cv
115.52 210.376 115.816 209.947 116.243 209.756 cv
116.243 211.991 li
1 .176471 .286274 rgb
f
116.744 212.098 mo
116.566 212.098 116.396 212.059 116.243 211.991 cv
116.243 209.756 li
116.396 209.687 116.566 209.648 116.744 209.648 cv
117.42 209.648 117.968 210.197 117.968 210.873 cv
117.968 211.55 117.42 212.098 116.744 212.098 cv
1 .176471 .34902 rgb
f
111.234 212.098 mo
110.558 212.098 110.009 211.55 110.009 210.873 cv
110.009 210.197 110.558 209.648 111.234 209.648 cv
111.91 209.648 112.459 210.197 112.459 210.873 cv
112.459 211.55 111.91 212.098 111.234 212.098 cv
105.724 212.098 mo
105.047 212.098 104.499 211.55 104.499 210.873 cv
104.499 210.197 105.047 209.648 105.724 209.648 cv
106.4 209.648 106.948 210.197 106.948 210.873 cv
106.948 211.55 106.4 212.098 105.724 212.098 cv
100.213 212.098 mo
99.5371 212.098 98.9887 211.55 98.9887 210.873 cv
98.9887 210.197 99.5371 209.648 100.213 209.648 cv
100.89 209.648 101.438 210.197 101.438 210.873 cv
101.438 211.55 100.89 212.098 100.213 212.098 cv
94.7032 212.098 mo
94.0268 212.098 93.4786 211.55 93.4786 210.873 cv
93.4786 210.197 94.0268 209.648 94.7032 209.648 cv
95.3794 209.648 95.9276 210.197 95.9276 210.873 cv
95.9276 211.55 95.3794 212.098 94.7032 212.098 cv
1 .176471 .286274 rgb
f
147.012 270 mo
78.5186 270 li
78.5186 269.919 li
117.071 269.919 li
117.071 269.196 li
78.5186 269.196 li
78.5186 262.065 li
147.012 262.065 li
147.012 270 li
.0392157 .0392157 .286274 rgb
f
117.071 269.919 mo
78.5186 269.919 li
78.5186 269.196 li
117.071 269.196 li
117.071 269.919 li
.298039 .0823529 .360784 rgb
f
222.214 270 mo
184.88 270 li
184.88 267.092 li
222.214 267.092 li
222.214 270 li
.00392157 .00392157 .203922 rgb
f
184.88 270 mo
171.444 270 li
171.444 267.092 li
184.88 267.092 li
184.88 270 li
.0392157 .0392157 .286274 rgb
f
442.488 262.065 mo
432.2 262.065 li
432.2 258.624 li
432.731 258.497 433.128 258.025 433.139 257.458 cv
433.313 257.497 433.493 257.517 433.678 257.517 cv
435.059 257.517 436.178 256.398 436.178 255.016 cv
436.178 253.635 435.059 252.517 433.678 252.517 cv
433.125 252.517 432.614 252.696 432.2 252.999 cv
432.2 249.533 li
432.614 249.837 433.125 250.016 433.678 250.016 cv
435.059 250.016 436.178 248.897 436.178 247.516 cv
436.178 246.565 435.647 245.739 434.866 245.316 cv
437.326 245.316 li
437.326 244.586 li
442.488 244.586 li
442.488 262.065 li
432.2 245.499 mo
432.2 245.316 li
432.489 245.316 li
432.388 245.371 432.292 245.432 432.2 245.499 cv
.0196078 .0196078 .2 rgb
f
442.488 244.586 mo
437.326 244.586 li
437.326 243.365 li
441.663 243.365 li
441.663 244.46 li
442.488 244.46 li
442.488 244.586 li
.0196078 .0196078 .282353 rgb
f
437.326 245.316 mo
434.866 245.316 li
434.513 245.125 434.108 245.017 433.678 245.017 cv
433.247 245.017 432.842 245.125 432.489 245.316 cv
432.2 245.316 li
432.2 244.586 li
437.326 244.586 li
437.326 245.316 li
.215686 .0196078 .227451 rgb
f
437.326 244.586 mo
432.2 244.586 li
432.2 243.365 li
437.326 243.365 li
437.326 244.586 li
.215686 .0196078 .305882 rgb
f
433.678 257.517 mo
433.493 257.517 433.313 257.497 433.139 257.458 cv
433.14 257.45 433.14 257.441 433.14 257.433 cv
433.14 256.855 432.739 256.37 432.2 256.241 cv
432.2 252.999 li
432.614 252.696 433.125 252.517 433.678 252.517 cv
435.059 252.517 436.178 253.635 436.178 255.016 cv
436.178 256.398 435.059 257.517 433.678 257.517 cv
433.678 250.016 mo
433.125 250.016 432.614 249.837 432.2 249.533 cv
432.2 245.499 li
432.292 245.432 432.388 245.371 432.489 245.316 cv
434.866 245.316 li
435.647 245.739 436.178 246.565 436.178 247.516 cv
436.178 248.897 435.059 250.016 433.678 250.016 cv
.254902 .0862745 .360784 rgb
f
434.866 245.316 mo
432.489 245.316 li
432.842 245.125 433.247 245.017 433.678 245.017 cv
434.108 245.017 434.513 245.125 434.866 245.316 cv
.403922 .0862745 .380392 rgb
f
442.488 244.46 mo
441.663 244.46 li
441.663 243.365 li
442.488 243.365 li
442.488 244.46 li
.0196078 .0196078 .282353 rgb
f
441.663 238.432 mo
441.283 238.432 li
441.283 233.962 li
437.326 233.962 li
437.326 230.88 li
435.568 230.88 li
435.11 230.351 434.433 230.016 433.678 230.016 cv
433.125 230.016 432.614 230.196 432.2 230.499 cv
432.2 228.079 li
437.326 228.079 li
437.326 222.262 li
432.2 222.262 li
432.2 219.533 li
432.614 219.836 433.125 220.016 433.678 220.016 cv
434.273 220.016 434.82 219.808 435.249 219.46 cv
437.326 219.46 li
437.326 215.386 li
441.663 215.386 li
441.663 238.432 li
f
437.326 233.962 mo
435.717 233.962 li
436.007 233.554 436.178 233.055 436.178 232.517 cv
436.178 231.89 435.948 231.318 435.568 230.88 cv
437.326 230.88 li
437.326 233.962 li
437.326 228.079 mo
432.2 228.079 li
432.2 227.033 li
432.614 227.336 433.125 227.516 433.678 227.516 cv
435.059 227.516 436.178 226.396 436.178 225.017 cv
436.178 223.635 435.059 222.517 433.678 222.517 cv
433.125 222.517 432.614 222.696 432.2 222.999 cv
432.2 222.262 li
437.326 222.262 li
437.326 228.079 li
437.326 219.46 mo
435.249 219.46 li
435.74 219.063 436.077 218.485 436.159 217.827 cv
436.726 217.369 437.089 216.667 437.089 215.881 cv
437.089 215.711 437.072 215.546 437.04 215.386 cv
437.326 215.386 li
437.326 219.46 li
.215686 .0196078 .305882 rgb
f
435.568 230.88 mo
432.2 230.88 li
432.2 230.499 li
432.614 230.196 433.125 230.016 433.678 230.016 cv
434.433 230.016 435.11 230.351 435.568 230.88 cv
.254902 .0862745 .423529 rgb
f
435.717 233.962 mo
432.2 233.962 li
432.2 230.88 li
435.568 230.88 li
435.948 231.318 436.178 231.89 436.178 232.517 cv
436.178 233.055 436.007 233.554 435.717 233.962 cv
433.678 227.516 mo
433.125 227.516 432.614 227.336 432.2 227.033 cv
432.2 222.999 li
432.614 222.696 433.125 222.517 433.678 222.517 cv
435.059 222.517 436.178 223.635 436.178 225.017 cv
436.178 226.396 435.059 227.516 433.678 227.516 cv
.403922 .0862745 .443137 rgb
f
433.678 220.016 mo
433.125 220.016 432.614 219.836 432.2 219.533 cv
432.2 219.46 li
435.249 219.46 li
434.82 219.808 434.273 220.016 433.678 220.016 cv
.254902 .0862745 .423529 rgb
f
435.249 219.46 mo
432.2 219.46 li
432.2 216.621 li
432.516 217.64 433.466 218.381 434.589 218.381 cv
435.183 218.381 435.729 218.173 436.159 217.827 cv
436.077 218.485 435.74 219.063 435.249 219.46 cv
.403922 .0862745 .443137 rgb
f
442.488 238.432 mo
441.663 238.432 li
441.663 215.386 li
442.488 215.386 li
442.488 238.432 li
.0196078 .0196078 .282353 rgb
f
441.283 238.432 mo
435.612 238.432 li
435.153 237.873 434.457 237.517 433.678 237.517 cv
433.125 237.517 432.614 237.696 432.2 237.999 cv
432.2 236.697 li
437.326 236.697 li
437.326 233.962 li
441.283 233.962 li
441.283 238.432 li
.12549 1 .992157 rgb
f
437.326 236.697 mo
432.2 236.697 li
432.2 234.533 li
432.614 234.836 433.125 235.016 433.678 235.016 cv
434.52 235.016 435.264 234.6 435.717 233.962 cv
437.326 233.962 li
437.326 236.697 li
.301961 1 .992157 rgb
f
435.612 238.432 mo
432.2 238.432 li
432.2 237.999 li
432.614 237.696 433.125 237.517 433.678 237.517 cv
434.457 237.517 435.153 237.873 435.612 238.432 cv
.337255 1 .992157 rgb
f
433.678 235.016 mo
433.125 235.016 432.614 234.836 432.2 234.533 cv
432.2 233.962 li
435.717 233.962 li
435.264 234.6 434.52 235.016 433.678 235.016 cv
.470588 1 .992157 rgb
f
441.663 243.365 mo
437.326 243.365 li
437.326 239.499 li
436.124 239.499 li
436.068 239.233 435.97 238.983 435.838 238.756 cv
441.283 238.756 li
441.283 238.432 li
441.663 238.432 li
441.663 243.365 li
.0313725 .372549 .537255 rgb
f
437.326 243.365 mo
432.2 243.365 li
432.2 242.033 li
432.614 242.336 433.125 242.516 433.678 242.516 cv
435.059 242.516 436.178 241.397 436.178 240.016 cv
436.178 239.838 436.159 239.666 436.124 239.499 cv
437.326 239.499 li
437.326 243.365 li
.223529 .372549 .552941 rgb
f
436.124 239.499 mo
432.2 239.499 li
432.2 238.756 li
435.838 238.756 li
435.97 238.983 436.068 239.233 436.124 239.499 cv
.262745 .415686 .627451 rgb
f
433.678 242.516 mo
433.125 242.516 432.614 242.336 432.2 242.033 cv
432.2 239.499 li
436.124 239.499 li
436.159 239.666 436.178 239.838 436.178 240.016 cv
436.178 241.397 435.059 242.516 433.678 242.516 cv
.411765 .415686 .639216 rgb
f
442.488 243.365 mo
441.663 243.365 li
441.663 238.432 li
442.488 238.432 li
442.488 243.365 li
.0313725 .372549 .537255 rgb
f
441.283 238.756 mo
435.838 238.756 li
435.771 238.642 435.695 238.533 435.612 238.432 cv
441.283 238.432 li
441.283 238.756 li
.137255 1 .996078 rgb
f
435.838 238.756 mo
432.2 238.756 li
432.2 238.432 li
435.612 238.432 li
435.695 238.533 435.771 238.642 435.838 238.756 cv
.345098 1 .996078 rgb
f
436.159 217.827 mo
436.171 217.725 436.178 217.622 436.178 217.517 cv
436.178 216.615 435.701 215.825 434.986 215.386 cv
437.04 215.386 li
437.072 215.546 437.089 215.711 437.089 215.881 cv
437.089 216.667 436.726 217.369 436.159 217.827 cv
432.2 215.499 mo
432.2 215.386 li
432.369 215.386 li
432.311 215.421 432.255 215.459 432.2 215.499 cv
.247059 .0235294 .329412 rgb
f
434.589 218.381 mo
433.466 218.381 432.516 217.64 432.2 216.621 cv
432.2 215.499 li
432.255 215.459 432.311 215.421 432.369 215.386 cv
434.986 215.386 li
435.701 215.825 436.178 216.615 436.178 217.517 cv
436.178 217.622 436.171 217.725 436.159 217.827 cv
435.729 218.173 435.183 218.381 434.589 218.381 cv
.427451 .0901961 .462745 rgb
f
253.752 262.065 mo
248.752 262.065 li
248.766 260.696 249.88 259.591 251.252 259.591 cv
252.624 259.591 253.738 260.696 253.752 262.065 cv
251.252 257.091 mo
249.871 257.091 248.752 255.972 248.752 254.591 cv
248.752 253.21 249.871 252.091 251.252 252.091 cv
252.633 252.091 253.752 253.21 253.752 254.591 cv
253.752 255.972 252.633 257.091 251.252 257.091 cv
.0862745 .027451 .0862745 rgb
f
269.388 267.092 mo
251.319 267.092 li
251.296 267.091 251.274 267.091 251.252 267.091 cv
251.23 267.091 251.207 267.091 251.185 267.092 cv
245.554 267.092 li
245.554 262.065 li
248.752 262.065 li
248.752 262.074 248.752 262.082 248.752 262.091 cv
248.752 263.472 249.871 264.591 251.252 264.591 cv
252.633 264.591 253.752 263.472 253.752 262.091 cv
253.752 262.082 253.752 262.074 253.752 262.065 cv
269.388 262.065 li
269.388 267.092 li
0 0 0 rgb
f
358.836 267.092 mo
269.388 267.092 li
269.388 262.065 li
358.836 262.065 li
358.836 267.092 li
0 0 .0941176 rgb
f
398.992 267.092 mo
358.836 267.092 li
358.836 262.065 li
398.992 262.065 li
398.992 267.092 li
.00392157 .00392157 .113725 rgb
f
432.2 267.092 mo
398.992 267.092 li
398.992 262.065 li
432.2 262.065 li
432.2 267.092 li
.0196078 .0196078 .2 rgb
f
269.388 268.983 mo
253.678 268.983 li
253.411 267.917 252.46 267.122 251.319 267.092 cv
269.388 267.092 li
269.388 268.983 li
0 0 0 rgb
f
358.836 270 mo
335.1 270 li
335.1 268.983 li
269.388 268.983 li
269.388 267.092 li
358.836 267.092 li
358.836 270 li
0 0 .0941176 rgb
f
398.992 270 mo
358.836 270 li
358.836 267.092 li
398.992 267.092 li
398.992 270 li
.00392157 .00392157 .113725 rgb
f
432.2 270 mo
398.992 270 li
398.992 267.092 li
432.2 267.092 li
432.2 270 li
.0196078 .0196078 .2 rgb
f
248.826 268.983 mo
245.554 268.983 li
245.554 267.092 li
251.185 267.092 li
250.044 267.122 249.092 267.917 248.826 268.983 cv
0 0 0 rgb
f
269.388 270 mo
253.719 270 li
253.741 269.867 253.752 269.73 253.752 269.591 cv
253.752 269.381 253.726 269.178 253.678 268.983 cv
269.388 268.983 li
269.388 270 li
.623529 .227451 .337255 rgb
f
335.1 270 mo
269.388 270 li
269.388 268.983 li
335.1 268.983 li
335.1 270 li
.623529 .227451 .4 rgb
f
248.785 270 mo
245.554 270 li
245.554 268.983 li
248.826 268.983 li
248.778 269.178 248.752 269.381 248.752 269.591 cv
248.752 269.73 248.763 269.867 248.785 270 cv
.623529 .227451 .337255 rgb
f
245.554 267.092 mo
244.237 267.092 li
244.237 262.065 li
245.554 262.065 li
245.554 267.092 li
0 0 .101961 rgb
f
244.237 267.092 mo
243.819 267.092 li
243.819 262.065 li
244.237 262.065 li
244.237 267.092 li
0 0 .188235 rgb
f
243.819 267.092 mo
222.214 267.092 li
222.214 262.065 li
243.819 262.065 li
243.819 267.092 li
.00392157 .00392157 .203922 rgb
f
245.554 268.983 mo
244.237 268.983 li
244.237 267.092 li
245.554 267.092 li
245.554 268.983 li
0 0 .101961 rgb
f
244.237 268.983 mo
243.819 268.983 li
243.819 267.092 li
244.237 267.092 li
244.237 268.983 li
0 0 .188235 rgb
f
224.7 270 mo
222.214 270 li
222.214 267.092 li
243.819 267.092 li
243.819 268.983 li
224.7 268.983 li
224.7 270 li
.00392157 .00392157 .203922 rgb
f
245.554 270 mo
244.237 270 li
244.237 268.983 li
245.554 268.983 li
245.554 270 li
.623529 .227451 .403922 rgb
f
244.237 270 mo
243.819 270 li
243.819 268.983 li
244.237 268.983 li
244.237 270 li
.623529 .227451 .462745 rgb
f
243.819 270 mo
224.7 270 li
224.7 268.983 li
243.819 268.983 li
243.819 270 li
.623529 .231373 .470588 rgb
f
442.488 267.092 mo
432.2 267.092 li
432.2 262.065 li
442.488 262.065 li
442.488 267.092 li
.0196078 .0196078 .2 rgb
f
442.488 270 mo
432.2 270 li
432.2 267.092 li
442.488 267.092 li
442.488 270 li
f
251.319 267.092 mo
251.185 267.092 li
251.207 267.091 251.23 267.091 251.252 267.091 cv
251.274 267.091 251.296 267.091 251.319 267.092 cv
.0862745 .027451 .0862745 rgb
f
253.678 268.983 mo
248.826 268.983 li
249.092 267.917 250.044 267.122 251.185 267.092 cv
251.319 267.092 li
252.46 267.122 253.411 267.917 253.678 268.983 cv
f
253.719 270 mo
248.785 270 li
248.763 269.867 248.752 269.73 248.752 269.591 cv
248.752 269.381 248.778 269.178 248.826 268.983 cv
253.678 268.983 li
253.726 269.178 253.752 269.381 253.752 269.591 cv
253.752 269.73 253.741 269.867 253.719 270 cv
.654902 .25098 .396078 rgb
f
251.252 264.591 mo
249.871 264.591 248.752 263.472 248.752 262.091 cv
248.752 262.082 248.752 262.074 248.752 262.065 cv
253.752 262.065 li
253.752 262.074 253.752 262.082 253.752 262.091 cv
253.752 263.472 252.633 264.591 251.252 264.591 cv
.0862745 .027451 .0862745 rgb
f
480 172.157 mo
446.034 172.157 li
446.034 150.844 li
480 150.844 li
480 172.157 li
.0392157 .0392157 .203922 rgb
f
480 215.386 mo
478.209 215.386 li
478.209 213.643 li
464.411 213.643 li
464.411 215.386 li
457.767 215.386 li
457.767 213.643 li
455.811 213.643 li
455.89 213.399 455.933 213.139 455.933 212.869 cv
455.933 212.035 455.524 211.296 454.896 210.842 cv
457.767 210.842 li
457.767 205.024 li
455.909 205.024 li
455.741 203.807 454.697 202.869 453.433 202.869 cv
452.169 202.869 451.124 203.807 450.956 205.024 cv
446.034 205.024 li
446.034 199.863 li
451.924 199.863 li
452.344 200.181 452.866 200.369 453.433 200.369 cv
453.999 200.369 454.522 200.181 454.941 199.863 cv
480 199.863 li
480 215.386 li
464.411 205.024 mo
464.411 210.842 li
478.209 210.842 li
478.209 205.024 li
464.411 205.024 li
451.055 213.643 mo
446.034 213.643 li
446.034 210.842 li
451.969 210.842 li
451.341 211.296 450.933 212.035 450.933 212.869 cv
450.933 213.139 450.975 213.399 451.055 213.643 cv
.0392157 .0392157 .290196 rgb
f
480 197.688 mo
455.926 197.688 li
455.834 196.392 454.753 195.369 453.433 195.369 cv
452.112 195.369 451.032 196.392 450.939 197.688 cv
446.034 197.688 li
446.034 185.542 li
480 185.542 li
480 197.688 li
453.433 187.869 mo
452.052 187.869 450.933 188.988 450.933 190.369 cv
450.933 191.75 452.052 192.869 453.433 192.869 cv
454.814 192.869 455.933 191.75 455.933 190.369 cv
455.933 188.988 454.814 187.869 453.433 187.869 cv
f
480 183.542 mo
455.841 183.542 li
455.901 183.328 455.933 183.102 455.933 182.869 cv
455.933 181.488 454.814 180.369 453.433 180.369 cv
452.052 180.369 450.933 181.488 450.933 182.869 cv
450.933 183.102 450.965 183.328 451.024 183.542 cv
446.034 183.542 li
446.034 172.157 li
480 172.157 li
480 183.542 li
f
480 199.863 mo
454.941 199.863 li
455.543 199.407 455.933 198.683 455.933 197.869 cv
455.933 197.808 455.93 197.748 455.926 197.688 cv
480 197.688 li
480 199.863 li
451.924 199.863 mo
446.034 199.863 li
446.034 197.688 li
450.939 197.688 li
450.935 197.748 450.933 197.808 450.933 197.869 cv
450.933 198.683 451.322 199.407 451.924 199.863 cv
.223529 .403922 .552941 rgb
f
478.209 215.386 mo
464.411 215.386 li
464.411 213.643 li
478.209 213.643 li
478.209 215.386 li
457.767 215.386 mo
446.034 215.386 li
446.034 213.643 li
451.055 213.643 li
451.38 214.645 452.322 215.369 453.433 215.369 cv
454.544 215.369 455.485 214.645 455.811 213.643 cv
457.767 213.643 li
457.767 215.386 li
478.209 210.842 mo
464.411 210.842 li
464.411 205.024 li
478.209 205.024 li
478.209 210.842 li
457.767 210.842 mo
454.896 210.842 li
454.485 210.544 453.979 210.369 453.433 210.369 cv
452.886 210.369 452.381 210.544 451.969 210.842 cv
446.034 210.842 li
446.034 205.024 li
450.956 205.024 li
450.941 205.137 450.933 205.252 450.933 205.369 cv
450.933 206.75 452.052 207.869 453.433 207.869 cv
454.814 207.869 455.933 206.75 455.933 205.369 cv
455.933 205.252 455.925 205.137 455.909 205.024 cv
457.767 205.024 li
457.767 210.842 li
.231373 .0392157 .305882 rgb
f
443.97 215.386 mo
442.488 215.386 li
442.488 199.863 li
446.034 199.863 li
446.034 205.024 li
443.97 205.024 li
443.97 210.842 li
446.034 210.842 li
446.034 213.643 li
443.97 213.643 li
443.97 215.386 li
446.034 197.688 mo
442.488 197.688 li
442.488 185.542 li
446.034 185.542 li
446.034 197.688 li
.054902 .054902 .356863 rgb
f
446.034 199.863 mo
442.488 199.863 li
442.488 197.688 li
446.034 197.688 li
446.034 199.863 li
.235294 .411765 .6 rgb
f
446.034 215.386 mo
443.97 215.386 li
443.97 213.643 li
446.034 213.643 li
446.034 215.386 li
446.034 210.842 mo
443.97 210.842 li
443.97 205.024 li
446.034 205.024 li
446.034 210.842 li
.243137 .054902 .376471 rgb
f
446.034 172.157 mo
442.488 172.157 li
442.488 150.844 li
446.034 150.844 li
446.034 172.157 li
.054902 .054902 .282353 rgb
f
446.034 183.542 mo
442.488 183.542 li
442.488 172.157 li
446.034 172.157 li
446.034 183.542 li
.054902 .054902 .356863 rgb
f
480 185.542 mo
446.034 185.542 li
446.034 183.542 li
451.024 183.542 li
451.318 184.596 452.285 185.369 453.433 185.369 cv
454.58 185.369 455.547 184.596 455.841 183.542 cv
480 183.542 li
480 185.542 li
.0392157 .192157 .654902 rgb
f
446.034 185.542 mo
442.488 185.542 li
442.488 183.542 li
446.034 183.542 li
446.034 185.542 li
.054902 .203922 .686274 rgb
f
455.811 213.643 mo
451.055 213.643 li
450.975 213.399 450.933 213.139 450.933 212.869 cv
450.933 212.035 451.341 211.296 451.969 210.842 cv
454.896 210.842 li
455.524 211.296 455.933 212.035 455.933 212.869 cv
455.933 213.139 455.89 213.399 455.811 213.643 cv
.2 .0392157 .439216 rgb
f
453.433 215.369 mo
452.322 215.369 451.38 214.645 451.055 213.643 cv
455.811 213.643 li
455.485 214.645 454.544 215.369 453.433 215.369 cv
454.896 210.842 mo
451.969 210.842 li
452.381 210.544 452.886 210.369 453.433 210.369 cv
453.979 210.369 454.485 210.544 454.896 210.842 cv
.356863 .0392157 .454902 rgb
f
455.909 205.024 mo
450.956 205.024 li
451.124 203.807 452.169 202.869 453.433 202.869 cv
454.697 202.869 455.741 203.807 455.909 205.024 cv
.2 .0392157 .439216 rgb
f
453.433 207.869 mo
452.052 207.869 450.933 206.75 450.933 205.369 cv
450.933 205.252 450.941 205.137 450.956 205.024 cv
455.909 205.024 li
455.925 205.137 455.933 205.252 455.933 205.369 cv
455.933 206.75 454.814 207.869 453.433 207.869 cv
.356863 .0392157 .454902 rgb
f
453.433 200.369 mo
452.866 200.369 452.344 200.181 451.924 199.863 cv
454.941 199.863 li
454.522 200.181 453.999 200.369 453.433 200.369 cv
455.926 197.688 mo
450.939 197.688 li
451.032 196.392 452.112 195.369 453.433 195.369 cv
454.753 195.369 455.834 196.392 455.926 197.688 cv
.2 .0392157 .439216 rgb
f
454.941 199.863 mo
451.924 199.863 li
451.322 199.407 450.933 198.683 450.933 197.869 cv
450.933 197.808 450.935 197.748 450.939 197.688 cv
455.926 197.688 li
455.93 197.748 455.933 197.808 455.933 197.869 cv
455.933 198.683 455.543 199.407 454.941 199.863 cv
.352941 .403922 .647059 rgb
f
453.433 192.869 mo
452.052 192.869 450.933 191.75 450.933 190.369 cv
450.933 188.988 452.052 187.869 453.433 187.869 cv
454.814 187.869 455.933 188.988 455.933 190.369 cv
455.933 191.75 454.814 192.869 453.433 192.869 cv
455.841 183.542 mo
451.024 183.542 li
450.965 183.328 450.933 183.102 450.933 182.869 cv
450.933 181.488 452.052 180.369 453.433 180.369 cv
454.814 180.369 455.933 181.488 455.933 182.869 cv
455.933 183.102 455.901 183.328 455.841 183.542 cv
.2 .0392157 .439216 rgb
f
453.433 185.369 mo
452.285 185.369 451.318 184.596 451.024 183.542 cv
455.841 183.542 li
455.547 184.596 454.58 185.369 453.433 185.369 cv
.2 .192157 .729412 rgb
f
480 262.065 mo
446.034 262.065 li
446.034 245.316 li
457.767 245.316 li
457.767 244.586 li
460.594 244.586 li
460.666 244.599 460.739 244.605 460.813 244.605 cv
460.888 244.605 460.961 244.599 461.032 244.586 cv
464.411 244.586 li
464.411 245.316 li
478.209 245.316 li
478.209 244.586 li
480 244.586 li
480 246.465 li
464.952 246.465 li
464.952 251.115 li
480 251.115 li
480 254.193 li
479.891 254.161 479.776 254.145 479.657 254.145 cv
478.98 254.145 478.433 254.692 478.433 255.369 cv
478.433 256.046 478.98 256.594 479.657 256.594 cv
479.776 256.594 479.891 256.577 480 256.545 cv
480 262.065 li
.0392157 .0392157 .203922 rgb
f
480 244.586 mo
478.209 244.586 li
478.209 244.46 li
480 244.46 li
480 244.586 li
464.411 244.586 mo
461.032 244.586 li
461.16 244.563 461.281 244.52 461.392 244.46 cv
464.411 244.46 li
464.411 244.586 li
460.594 244.586 mo
457.767 244.586 li
457.767 244.46 li
460.234 244.46 li
460.345 244.52 460.466 244.563 460.594 244.586 cv
.0392157 .0392157 .290196 rgb
f
478.209 245.316 mo
464.411 245.316 li
464.411 244.586 li
466.104 244.586 li
466.175 244.599 466.249 244.605 466.323 244.605 cv
466.398 244.605 466.471 244.599 466.542 244.586 cv
471.615 244.586 li
471.686 244.599 471.759 244.605 471.834 244.605 cv
471.909 244.605 471.982 244.599 472.053 244.586 cv
477.125 244.586 li
477.196 244.599 477.269 244.605 477.344 244.605 cv
477.418 244.605 477.491 244.599 477.562 244.586 cv
478.209 244.586 li
478.209 245.316 li
.231373 .0392157 .231373 rgb
f
478.209 244.586 mo
477.562 244.586 li
477.691 244.563 477.812 244.52 477.923 244.46 cv
478.209 244.46 li
478.209 244.586 li
477.125 244.586 mo
472.053 244.586 li
472.181 244.563 472.302 244.52 472.413 244.46 cv
476.764 244.46 li
476.875 244.52 476.996 244.563 477.125 244.586 cv
471.615 244.586 mo
466.542 244.586 li
466.67 244.563 466.792 244.52 466.903 244.46 cv
471.254 244.46 li
471.365 244.52 471.487 244.563 471.615 244.586 cv
466.104 244.586 mo
464.411 244.586 li
464.411 244.46 li
465.744 244.46 li
465.855 244.52 465.976 244.563 466.104 244.586 cv
.231373 .0392157 .305882 rgb
f
457.767 245.316 mo
446.034 245.316 li
446.034 244.586 li
457.767 244.586 li
457.767 245.316 li
.231373 .0392157 .231373 rgb
f
457.767 244.586 mo
446.034 244.586 li
446.034 244.46 li
457.767 244.46 li
457.767 244.586 li
.231373 .0392157 .305882 rgb
f
480 244.46 mo
478.209 244.46 li
478.209 244.379 li
480 244.379 li
480 244.46 li
.0392157 .0392157 .290196 rgb
f
480 244.379 mo
478.209 244.379 li
478.209 244.247 li
478.431 244.026 478.568 243.719 478.568 243.381 cv
478.568 243.376 478.568 243.37 478.568 243.365 cv
480 243.365 li
480 244.379 li
f
478.209 244.46 mo
477.923 244.46 li
477.968 244.436 478.012 244.409 478.053 244.379 cv
478.209 244.379 li
478.209 244.46 li
.231373 .0392157 .305882 rgb
f
478.209 244.379 mo
478.053 244.379 li
478.109 244.339 478.161 244.295 478.209 244.247 cv
478.209 244.379 li
f
476.764 244.46 mo
472.413 244.46 li
472.458 244.436 472.502 244.409 472.543 244.379 cv
476.634 244.379 li
476.675 244.409 476.719 244.436 476.764 244.46 cv
f
476.634 244.379 mo
472.543 244.379 li
472.855 244.157 473.058 243.793 473.058 243.381 cv
473.058 243.376 473.058 243.37 473.057 243.365 cv
476.119 243.365 li
476.119 243.37 476.119 243.376 476.119 243.381 cv
476.119 243.793 476.322 244.157 476.634 244.379 cv
f
471.254 244.46 mo
466.903 244.46 li
466.948 244.436 466.992 244.409 467.033 244.379 cv
471.124 244.379 li
471.166 244.409 471.209 244.436 471.254 244.46 cv
f
471.124 244.379 mo
467.033 244.379 li
467.345 244.157 467.548 243.793 467.548 243.381 cv
467.548 243.376 467.548 243.37 467.548 243.365 cv
470.609 243.365 li
470.609 243.37 470.609 243.376 470.609 243.381 cv
470.609 243.793 470.812 244.157 471.124 244.379 cv
f
464.411 244.46 mo
461.392 244.46 li
461.438 244.436 461.481 244.409 461.523 244.379 cv
464.411 244.379 li
464.411 244.46 li
.0392157 .0392157 .290196 rgb
f
464.411 244.379 mo
461.523 244.379 li
461.834 244.157 462.037 243.793 462.037 243.381 cv
462.037 243.376 462.037 243.37 462.037 243.365 cv
464.411 243.365 li
464.411 244.379 li
f
465.744 244.46 mo
464.411 244.46 li
464.411 244.379 li
465.613 244.379 li
465.655 244.409 465.698 244.436 465.744 244.46 cv
.231373 .0392157 .305882 rgb
f
465.613 244.379 mo
464.411 244.379 li
464.411 243.365 li
465.099 243.365 li
465.099 243.37 465.099 243.376 465.099 243.381 cv
465.099 243.793 465.302 244.157 465.613 244.379 cv
f
460.234 244.46 mo
457.767 244.46 li
457.767 244.379 li
460.103 244.379 li
460.145 244.409 460.188 244.436 460.234 244.46 cv
.0392157 .0392157 .290196 rgb
f
460.103 244.379 mo
457.767 244.379 li
457.767 243.365 li
459.589 243.365 li
459.589 243.37 459.589 243.376 459.589 243.381 cv
459.589 243.793 459.792 244.157 460.103 244.379 cv
f
457.767 244.46 mo
446.034 244.46 li
446.034 243.365 li
451.819 243.365 li
451.819 244.379 li
457.767 244.379 li
457.767 244.46 li
.231373 .0392157 .305882 rgb
f
457.767 244.379 mo
451.819 244.379 li
451.819 243.365 li
457.767 243.365 li
457.767 244.379 li
f
480 238.432 mo
446.034 238.432 li
446.034 236.697 li
457.767 236.697 li
457.767 230.88 li
446.034 230.88 li
446.034 228.079 li
450.941 228.079 li
451.048 229.362 452.122 230.369 453.433 230.369 cv
454.743 230.369 455.817 229.362 455.924 228.079 cv
457.767 228.079 li
457.767 222.262 li
455.066 222.262 li
455.597 221.803 455.933 221.126 455.933 220.369 cv
455.933 220.048 455.872 219.742 455.762 219.46 cv
457.767 219.46 li
457.767 215.386 li
464.411 215.386 li
464.411 219.46 li
478.209 219.46 li
478.209 215.386 li
480 215.386 li
480 236.071 li
478.209 236.071 li
478.209 230.88 li
464.411 230.88 li
464.411 236.697 li
468.31 236.697 li
468.31 238.246 li
480 238.246 li
480 238.432 li
464.411 222.262 mo
464.411 228.079 li
478.209 228.079 li
478.209 222.262 li
464.411 222.262 li
451.799 222.262 mo
446.034 222.262 li
446.034 219.46 li
451.103 219.46 li
450.993 219.742 450.933 220.048 450.933 220.369 cv
450.933 221.126 451.268 221.803 451.799 222.262 cv
.0392157 .0392157 .290196 rgb
f
468.31 236.697 mo
464.411 236.697 li
464.411 230.88 li
478.209 230.88 li
478.209 236.071 li
468.31 236.071 li
468.31 236.697 li
457.767 236.697 mo
446.034 236.697 li
446.034 230.88 li
457.767 230.88 li
457.767 236.697 li
478.209 228.079 mo
464.411 228.079 li
464.411 222.262 li
478.209 222.262 li
478.209 228.079 li
457.767 228.079 mo
455.924 228.079 li
455.93 228.01 455.933 227.94 455.933 227.869 cv
455.933 226.488 454.814 225.369 453.433 225.369 cv
452.052 225.369 450.933 226.488 450.933 227.869 cv
450.933 227.94 450.936 228.01 450.941 228.079 cv
446.034 228.079 li
446.034 222.262 li
451.799 222.262 li
452.237 222.64 452.808 222.869 453.433 222.869 cv
454.057 222.869 454.628 222.64 455.066 222.262 cv
457.767 222.262 li
457.767 228.079 li
478.209 219.46 mo
464.411 219.46 li
464.411 215.386 li
478.209 215.386 li
478.209 219.46 li
457.767 219.46 mo
455.762 219.46 li
455.399 218.529 454.493 217.869 453.433 217.869 cv
452.372 217.869 451.467 218.529 451.103 219.46 cv
446.034 219.46 li
446.034 215.386 li
457.767 215.386 li
457.767 219.46 li
.231373 .0392157 .305882 rgb
f
480 238.246 mo
468.31 238.246 li
468.31 236.697 li
478.209 236.697 li
478.209 236.071 li
480 236.071 li
480 238.246 li
1 .0392157 .478431 rgb
f
478.209 236.697 mo
468.31 236.697 li
468.31 236.071 li
478.209 236.071 li
478.209 236.697 li
1 .0392157 .494118 rgb
f
446.034 262.065 mo
442.488 262.065 li
442.488 244.586 li
443.97 244.586 li
443.97 245.316 li
446.034 245.316 li
446.034 262.065 li
.054902 .054902 .282353 rgb
f
443.97 244.586 mo
442.488 244.586 li
442.488 244.46 li
443.97 244.46 li
443.97 244.586 li
.054902 .054902 .356863 rgb
f
446.034 245.316 mo
443.97 245.316 li
443.97 244.586 li
446.034 244.586 li
446.034 245.316 li
.243137 .054902 .305882 rgb
f
446.034 244.586 mo
443.97 244.586 li
443.97 244.46 li
446.034 244.46 li
446.034 244.586 li
.243137 .054902 .376471 rgb
f
443.97 244.46 mo
442.488 244.46 li
442.488 243.365 li
443.97 243.365 li
443.97 244.46 li
.054902 .054902 .356863 rgb
f
446.034 244.46 mo
443.97 244.46 li
443.97 243.365 li
446.034 243.365 li
446.034 244.46 li
.243137 .054902 .376471 rgb
f
446.034 238.432 mo
442.488 238.432 li
442.488 215.386 li
443.97 215.386 li
443.97 219.46 li
446.034 219.46 li
446.034 222.262 li
443.97 222.262 li
443.97 228.079 li
446.034 228.079 li
446.034 230.88 li
443.97 230.88 li
443.97 236.697 li
446.034 236.697 li
446.034 238.432 li
.054902 .054902 .356863 rgb
f
446.034 236.697 mo
443.97 236.697 li
443.97 230.88 li
446.034 230.88 li
446.034 236.697 li
446.034 228.079 mo
443.97 228.079 li
443.97 222.262 li
446.034 222.262 li
446.034 228.079 li
446.034 219.46 mo
443.97 219.46 li
443.97 215.386 li
446.034 215.386 li
446.034 219.46 li
.243137 .054902 .376471 rgb
f
480 242.378 mo
478.209 242.378 li
478.209 239.499 li
464.411 239.499 li
464.411 242.378 li
461.515 242.378 li
461.317 242.238 461.075 242.156 460.813 242.156 cv
460.552 242.156 460.31 242.238 460.111 242.378 cv
457.767 242.378 li
457.767 239.499 li
446.034 239.499 li
446.034 238.432 li
480 238.432 li
480 242.378 li
.0509804 .384314 .537255 rgb
f
480 243.365 mo
478.568 243.365 li
478.564 243.033 478.427 242.733 478.209 242.515 cv
478.209 242.378 li
480 242.378 li
480 243.365 li
464.411 243.365 mo
462.037 243.365 li
462.032 242.957 461.827 242.597 461.515 242.378 cv
464.411 242.378 li
464.411 243.365 li
459.589 243.365 mo
457.767 243.365 li
457.767 242.378 li
460.111 242.378 li
459.799 242.597 459.594 242.957 459.589 243.365 cv
f
451.819 243.365 mo
446.034 243.365 li
446.034 239.499 li
457.767 239.499 li
457.767 242.378 li
451.819 242.378 li
451.819 243.365 li
.239216 .384314 .552941 rgb
f
478.209 242.378 mo
478.046 242.378 li
477.847 242.238 477.605 242.156 477.344 242.156 cv
477.082 242.156 476.84 242.238 476.641 242.378 cv
472.536 242.378 li
472.337 242.238 472.095 242.156 471.834 242.156 cv
471.572 242.156 471.33 242.238 471.131 242.378 cv
467.026 242.378 li
466.827 242.238 466.585 242.156 466.323 242.156 cv
466.062 242.156 465.819 242.238 465.62 242.378 cv
464.411 242.378 li
464.411 239.499 li
478.209 239.499 li
478.209 242.378 li
f
476.119 243.365 mo
473.057 243.365 li
473.052 242.957 472.847 242.597 472.536 242.378 cv
476.641 242.378 li
476.329 242.597 476.124 242.957 476.119 243.365 cv
470.609 243.365 mo
467.548 243.365 li
467.543 242.957 467.338 242.597 467.026 242.378 cv
471.131 242.378 li
470.82 242.597 470.615 242.957 470.609 243.365 cv
465.099 243.365 mo
464.411 243.365 li
464.411 242.378 li
465.62 242.378 li
465.309 242.597 465.104 242.957 465.099 243.365 cv
457.767 243.365 mo
451.819 243.365 li
451.819 242.378 li
457.767 242.378 li
457.767 243.365 li
478.209 242.515 mo
478.159 242.464 478.104 242.419 478.046 242.378 cv
478.209 242.378 li
478.209 242.515 li
f
443.97 243.365 mo
442.488 243.365 li
442.488 238.432 li
446.034 238.432 li
446.034 239.499 li
443.97 239.499 li
443.97 243.365 li
.0666667 .396078 .584314 rgb
f
446.034 243.365 mo
443.97 243.365 li
443.97 239.499 li
446.034 239.499 li
446.034 243.365 li
.25098 .396078 .6 rgb
f
453.433 230.369 mo
452.122 230.369 451.048 229.362 450.941 228.079 cv
455.924 228.079 li
455.817 229.362 454.743 230.369 453.433 230.369 cv
.2 .0392157 .439216 rgb
f
455.924 228.079 mo
450.941 228.079 li
450.936 228.01 450.933 227.94 450.933 227.869 cv
450.933 226.488 452.052 225.369 453.433 225.369 cv
454.814 225.369 455.933 226.488 455.933 227.869 cv
455.933 227.94 455.93 228.01 455.924 228.079 cv
.356863 .0392157 .454902 rgb
f
455.066 222.262 mo
451.799 222.262 li
451.268 221.803 450.933 221.126 450.933 220.369 cv
450.933 220.048 450.993 219.742 451.103 219.46 cv
455.762 219.46 li
455.872 219.742 455.933 220.048 455.933 220.369 cv
455.933 221.126 455.597 221.803 455.066 222.262 cv
.2 .0392157 .439216 rgb
f
453.433 222.869 mo
452.808 222.869 452.237 222.64 451.799 222.262 cv
455.066 222.262 li
454.628 222.64 454.057 222.869 453.433 222.869 cv
455.762 219.46 mo
451.103 219.46 li
451.467 218.529 452.372 217.869 453.433 217.869 cv
454.493 217.869 455.399 218.529 455.762 219.46 cv
.356863 .0392157 .454902 rgb
f
479.657 256.594 mo
478.98 256.594 478.433 256.046 478.433 255.369 cv
478.433 254.692 478.98 254.145 479.657 254.145 cv
479.776 254.145 479.891 254.161 480 254.193 cv
480 256.545 li
479.891 256.577 479.776 256.594 479.657 256.594 cv
1 .113725 .203922 rgb
f
477.344 244.605 mo
477.269 244.605 477.196 244.599 477.125 244.586 cv
477.562 244.586 li
477.491 244.599 477.418 244.605 477.344 244.605 cv
1 .101961 .239216 rgb
f
477.562 244.586 mo
477.125 244.586 li
476.996 244.563 476.875 244.52 476.764 244.46 cv
477.923 244.46 li
477.812 244.52 477.691 244.563 477.562 244.586 cv
1 .101961 .313725 rgb
f
478.209 244.247 mo
478.209 243.365 li
478.568 243.365 li
478.568 243.37 478.568 243.376 478.568 243.381 cv
478.568 243.719 478.431 244.026 478.209 244.247 cv
1 .101961 .294118 rgb
f
477.923 244.46 mo
476.764 244.46 li
476.719 244.436 476.675 244.409 476.634 244.379 cv
478.053 244.379 li
478.012 244.409 477.968 244.436 477.923 244.46 cv
1 .101961 .313725 rgb
f
478.053 244.379 mo
476.634 244.379 li
476.322 244.157 476.119 243.793 476.119 243.381 cv
476.119 243.376 476.119 243.37 476.119 243.365 cv
478.209 243.365 li
478.209 244.247 li
478.161 244.295 478.109 244.339 478.053 244.379 cv
f
478.568 243.365 mo
478.209 243.365 li
478.209 242.515 li
478.427 242.733 478.564 243.033 478.568 243.365 cv
1 .423529 .541176 rgb
f
478.046 242.378 mo
476.641 242.378 li
476.84 242.238 477.082 242.156 477.344 242.156 cv
477.605 242.156 477.847 242.238 478.046 242.378 cv
1 .423529 .556863 rgb
f
478.209 243.365 mo
476.119 243.365 li
476.124 242.957 476.329 242.597 476.641 242.378 cv
478.046 242.378 li
478.104 242.419 478.159 242.464 478.209 242.515 cv
478.209 243.365 li
f
471.834 244.605 mo
471.759 244.605 471.686 244.599 471.615 244.586 cv
472.053 244.586 li
471.982 244.599 471.909 244.605 471.834 244.605 cv
1 .101961 .239216 rgb
f
472.053 244.586 mo
471.615 244.586 li
471.487 244.563 471.365 244.52 471.254 244.46 cv
472.413 244.46 li
472.302 244.52 472.181 244.563 472.053 244.586 cv
1 .101961 .313725 rgb
f
472.413 244.46 mo
471.254 244.46 li
471.209 244.436 471.166 244.409 471.124 244.379 cv
472.543 244.379 li
472.502 244.409 472.458 244.436 472.413 244.46 cv
f
472.543 244.379 mo
471.124 244.379 li
470.812 244.157 470.609 243.793 470.609 243.381 cv
470.609 243.376 470.609 243.37 470.609 243.365 cv
473.057 243.365 li
473.058 243.37 473.058 243.376 473.058 243.381 cv
473.058 243.793 472.855 244.157 472.543 244.379 cv
f
472.536 242.378 mo
471.131 242.378 li
471.33 242.238 471.572 242.156 471.834 242.156 cv
472.095 242.156 472.337 242.238 472.536 242.378 cv
1 .423529 .556863 rgb
f
473.057 243.365 mo
470.609 243.365 li
470.615 242.957 470.82 242.597 471.131 242.378 cv
472.536 242.378 li
472.847 242.597 473.052 242.957 473.057 243.365 cv
f
466.323 244.605 mo
466.249 244.605 466.175 244.599 466.104 244.586 cv
466.542 244.586 li
466.471 244.599 466.398 244.605 466.323 244.605 cv
1 .101961 .239216 rgb
f
466.542 244.586 mo
466.104 244.586 li
465.976 244.563 465.855 244.52 465.744 244.46 cv
466.903 244.46 li
466.792 244.52 466.67 244.563 466.542 244.586 cv
1 .101961 .313725 rgb
f
466.903 244.46 mo
465.744 244.46 li
465.698 244.436 465.655 244.409 465.613 244.379 cv
467.033 244.379 li
466.992 244.409 466.948 244.436 466.903 244.46 cv
f
467.033 244.379 mo
465.613 244.379 li
465.302 244.157 465.099 243.793 465.099 243.381 cv
465.099 243.376 465.099 243.37 465.099 243.365 cv
467.548 243.365 li
467.548 243.37 467.548 243.376 467.548 243.381 cv
467.548 243.793 467.345 244.157 467.033 244.379 cv
f
467.026 242.378 mo
465.62 242.378 li
465.819 242.238 466.062 242.156 466.323 242.156 cv
466.585 242.156 466.827 242.238 467.026 242.378 cv
1 .423529 .556863 rgb
f
467.548 243.365 mo
465.099 243.365 li
465.104 242.957 465.309 242.597 465.62 242.378 cv
467.026 242.378 li
467.338 242.597 467.543 242.957 467.548 243.365 cv
f
460.813 244.605 mo
460.739 244.605 460.666 244.599 460.594 244.586 cv
461.032 244.586 li
460.961 244.599 460.888 244.605 460.813 244.605 cv
1 .101961 .211765 rgb
f
461.032 244.586 mo
460.594 244.586 li
460.466 244.563 460.345 244.52 460.234 244.46 cv
461.392 244.46 li
461.281 244.52 461.16 244.563 461.032 244.586 cv
1 .101961 .294118 rgb
f
461.392 244.46 mo
460.234 244.46 li
460.188 244.436 460.145 244.409 460.103 244.379 cv
461.523 244.379 li
461.481 244.409 461.438 244.436 461.392 244.46 cv
f
461.523 244.379 mo
460.103 244.379 li
459.792 244.157 459.589 243.793 459.589 243.381 cv
459.589 243.376 459.589 243.37 459.589 243.365 cv
462.037 243.365 li
462.037 243.37 462.037 243.376 462.037 243.381 cv
462.037 243.793 461.834 244.157 461.523 244.379 cv
f
461.515 242.378 mo
460.111 242.378 li
460.31 242.238 460.552 242.156 460.813 242.156 cv
461.075 242.156 461.317 242.238 461.515 242.378 cv
1 .423529 .541176 rgb
f
462.037 243.365 mo
459.589 243.365 li
459.594 242.957 459.799 242.597 460.111 242.378 cv
461.515 242.378 li
461.827 242.597 462.032 242.957 462.037 243.365 cv
f
480 270 mo
462.045 270 li
462.045 267.092 li
446.034 267.092 li
446.034 262.065 li
480 262.065 li
480 270 li
.0392157 .0392157 .203922 rgb
f
446.034 267.092 mo
442.488 267.092 li
442.488 262.065 li
446.034 262.065 li
446.034 267.092 li
.054902 .054902 .282353 rgb
f
462.045 270 mo
446.034 270 li
446.034 267.092 li
462.045 267.092 li
462.045 270 li
.0392157 .0392157 .203922 rgb
f
446.034 270 mo
442.488 270 li
442.488 267.092 li
446.034 267.092 li
446.034 270 li
.054902 .054902 .282353 rgb
f
480 251.115 mo
464.952 251.115 li
464.952 246.465 li
480 246.465 li
480 251.115 li
.262745 .6 .666667 rgb
f
378.14 232.433 mo
376.759 232.433 375.64 231.313 375.64 229.933 cv
375.64 228.552 376.759 227.433 378.14 227.433 cv
379.278 227.433 380.239 228.194 380.541 229.235 cv
380.541 230.63 li
380.239 231.671 379.278 232.433 378.14 232.433 cv
.215686 .0862745 .411765 rgb
f
380.541 230.63 mo
380.541 229.235 li
380.605 229.456 380.64 229.691 380.64 229.933 cv
380.64 230.175 380.605 230.409 380.541 230.63 cv
.215686 .0862745 .415686 rgb
f
378.14 224.933 mo
376.759 224.933 375.64 223.813 375.64 222.433 cv
375.64 221.052 376.759 219.933 378.14 219.933 cv
379.278 219.933 380.239 220.694 380.541 221.735 cv
380.541 223.13 li
380.239 224.171 379.278 224.933 378.14 224.933 cv
.215686 .0862745 .411765 rgb
f
380.541 223.13 mo
380.541 221.735 li
380.605 221.956 380.64 222.191 380.64 222.433 cv
380.64 222.675 380.605 222.909 380.541 223.13 cv
.215686 .0862745 .415686 rgb
f
378.14 217.433 mo
376.759 217.433 375.64 216.314 375.64 214.933 cv
375.64 213.553 376.756 212.435 378.135 212.433 cv
378.135 212.85 li
379.523 212.85 li
380.009 213.173 380.375 213.661 380.541 214.235 cv
380.541 215.63 li
380.239 216.672 379.278 217.433 378.14 217.433 cv
.215686 .0862745 .411765 rgb
f
379.523 212.85 mo
378.135 212.85 li
378.135 212.433 li
378.136 212.433 378.138 212.433 378.14 212.433 cv
378.651 212.433 379.127 212.586 379.523 212.85 cv
.286274 .0941176 .427451 rgb
f
380.541 215.63 mo
380.541 214.235 li
380.605 214.456 380.64 214.69 380.64 214.933 cv
380.64 215.175 380.605 215.409 380.541 215.63 cv
.215686 .0862745 .415686 rgb
f
378.135 205.528 mo
376.52 205.528 li
376.955 205.158 377.518 204.934 378.135 204.933 cv
378.135 205.528 li
.215686 .0862745 .411765 rgb
f
379.76 205.528 mo
378.135 205.528 li
378.135 204.933 li
378.136 204.933 378.138 204.933 378.14 204.933 cv
378.758 204.933 379.323 205.157 379.76 205.528 cv
.286274 .0941176 .427451 rgb
f
378.14 209.933 mo
376.759 209.933 375.64 208.814 375.64 207.433 cv
375.64 206.67 375.981 205.987 376.52 205.528 cv
378.135 205.528 li
378.135 206.281 li
380.359 206.281 li
380.434 206.425 380.495 206.577 380.541 206.735 cv
380.541 207.349 li
378.135 207.349 li
378.135 209.565 li
379.445 209.565 li
379.065 209.798 378.618 209.933 378.14 209.933 cv
.215686 1 .988235 rgb
f
379.445 209.565 mo
378.135 209.565 li
378.135 207.349 li
380.541 207.349 li
380.541 208.13 li
380.366 208.734 379.969 209.244 379.445 209.565 cv
.286274 1 .988235 rgb
f
380.359 206.281 mo
378.135 206.281 li
378.135 205.528 li
379.76 205.528 li
380.005 205.737 380.209 205.993 380.359 206.281 cv
f
380.638 207.349 mo
380.541 207.349 li
380.541 206.735 li
380.598 206.931 380.631 207.136 380.638 207.349 cv
.215686 1 .988235 rgb
f
380.541 208.13 mo
380.541 207.349 li
380.638 207.349 li
380.639 207.377 380.64 207.405 380.64 207.433 cv
380.64 207.675 380.605 207.909 380.541 208.13 cv
.286274 1 .988235 rgb
f
378.135 202.433 mo
376.756 202.43 375.64 201.312 375.64 199.933 cv
375.64 198.552 376.759 197.433 378.14 197.433 cv
378.335 197.433 378.524 197.455 378.706 197.497 cv
378.135 197.497 li
378.135 199.714 li
380.541 199.714 li
380.541 200.63 li
380.526 200.681 380.51 200.731 380.492 200.78 cv
378.135 200.78 li
378.135 202.433 li
.215686 .0862745 .411765 rgb
f
378.14 202.433 mo
378.138 202.433 378.136 202.433 378.135 202.433 cv
378.135 200.78 li
380.492 200.78 li
380.145 201.744 379.223 202.433 378.14 202.433 cv
380.541 199.714 mo
378.135 199.714 li
378.135 197.497 li
378.706 197.497 li
379.588 197.701 380.291 198.372 380.541 199.235 cv
380.541 199.714 li
.286274 .0941176 .427451 rgb
f
380.541 200.63 mo
380.541 199.714 li
380.63 199.714 li
380.636 199.786 380.64 199.859 380.64 199.933 cv
380.64 200.175 380.605 200.409 380.541 200.63 cv
.215686 .0862745 .415686 rgb
f
380.63 199.714 mo
380.541 199.714 li
380.541 199.235 li
380.586 199.389 380.616 199.549 380.63 199.714 cv
.286274 .0941176 .427451 rgb
f
378.14 194.933 mo
376.759 194.933 375.64 193.813 375.64 192.433 cv
375.64 191.052 376.759 189.933 378.14 189.933 cv
379.278 189.933 380.239 190.694 380.541 191.735 cv
380.541 193.13 li
380.239 194.172 379.278 194.933 378.14 194.933 cv
.215686 .0862745 .411765 rgb
f
380.541 193.13 mo
380.541 191.735 li
380.605 191.956 380.64 192.191 380.64 192.433 cv
380.64 192.675 380.605 192.909 380.541 193.13 cv
.215686 .0862745 .415686 rgb
f
380.252 183.595 mo
376.027 183.595 li
376.471 182.896 377.251 182.433 378.14 182.433 cv
379.028 182.433 379.809 182.896 380.252 183.595 cv
.215686 .0862745 .360784 rgb
f
378.14 187.433 mo
376.759 187.433 375.64 186.313 375.64 184.933 cv
375.64 184.44 375.782 183.982 376.027 183.595 cv
380.252 183.595 li
380.377 183.791 380.475 184.006 380.541 184.235 cv
380.541 185.63 li
380.239 186.671 379.278 187.433 378.14 187.433 cv
.215686 .0862745 .411765 rgb
f
380.541 185.63 mo
380.541 184.235 li
380.605 184.456 380.64 184.691 380.64 184.933 cv
380.64 185.175 380.605 185.409 380.541 185.63 cv
.215686 .0862745 .415686 rgb
f
431.915 258.657 mo
431.239 258.657 430.69 258.109 430.69 257.433 cv
430.69 256.896 431.036 256.44 431.517 256.274 cv
431.69 256.572 431.924 256.831 432.2 257.034 cv
432.2 258.624 li
432.109 258.646 432.013 258.657 431.915 258.657 cv
.862745 .0196078 .207843 rgb
f
432.2 257.034 mo
431.924 256.831 431.69 256.572 431.517 256.274 cv
431.642 256.231 431.776 256.208 431.915 256.208 cv
432.013 256.208 432.109 256.22 432.2 256.241 cv
432.2 257.034 li
.894118 .0862745 .368627 rgb
f
432.2 258.624 mo
432.2 257.034 li
432.476 257.236 432.794 257.383 433.139 257.458 cv
433.128 258.025 432.731 258.497 432.2 258.624 cv
.862745 .0196078 .207843 rgb
f
433.139 257.458 mo
432.794 257.383 432.476 257.236 432.2 257.034 cv
432.2 256.241 li
432.739 256.37 433.14 256.855 433.14 257.433 cv
433.14 257.441 433.14 257.45 433.139 257.458 cv
.894118 .0862745 .368627 rgb
f
426.405 258.657 mo
425.729 258.657 425.181 258.109 425.181 257.433 cv
425.181 256.757 425.729 256.208 426.405 256.208 cv
427.081 256.208 427.63 256.757 427.63 257.433 cv
427.63 258.109 427.081 258.657 426.405 258.657 cv
.862745 .0196078 .207843 rgb
f
420.895 258.657 mo
420.219 258.657 419.67 258.109 419.67 257.433 cv
419.67 256.757 420.219 256.208 420.895 256.208 cv
421.571 256.208 422.119 256.757 422.119 257.433 cv
422.119 258.109 421.571 258.657 420.895 258.657 cv
415.385 258.657 mo
414.708 258.657 414.16 258.109 414.16 257.433 cv
414.16 256.757 414.708 256.208 415.385 256.208 cv
416.06 256.208 416.609 256.757 416.609 257.433 cv
416.609 258.109 416.06 258.657 415.385 258.657 cv
409.874 258.657 mo
409.198 258.657 408.65 258.109 408.65 257.433 cv
408.65 256.757 409.198 256.208 409.874 256.208 cv
410.551 256.208 411.099 256.757 411.099 257.433 cv
411.099 258.109 410.551 258.657 409.874 258.657 cv
404.364 258.657 mo
403.688 258.657 403.14 258.109 403.14 257.433 cv
403.14 256.757 403.688 256.208 404.364 256.208 cv
405.04 256.208 405.589 256.757 405.589 257.433 cv
405.589 258.109 405.04 258.657 404.364 258.657 cv
.862745 .0196078 .215686 rgb
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 21.0.2%%For: (Halai Mikhail) ()%%Title: (temp.eps)%%CreationDate: 12/13/17 13:43%%Canvassize: 16383%AI9_DataStream%Gb",KG@TVloC2V\nf8hZ8I0mWQW/8LWK:EqQkBfS#&\ARO5FT"7rjg0"Rk48L?.=eD@ZqcMIn]6)+eusP1Bl/C9pi7li1jUi\X/Z%iX@>k=STZeF-4Omo0Vh=C6[7!K=9LuT,DrDmI`6GVAm4.;!,C<#otO=pdGMFWg]f7$`,_Wd[H)i%f#47;cE;!d8p)e+[I7gqi&-n%p7Mq<8"UAqHp23GUo="a^]Yd7`fZ1m1eA1-ps7+]Kj&EgqM*F:lCGsDZqMJG-JkKN<D5BFg'H*qB*E_mA_!5)d/#**OP:++p7ieH%&.>%P&YOn@#sa6bIjjWDq2L[[JGgijUOV*3US#nG-H(Wu9]k[mMb#PamfF6`GkdQ/g='R$Y951>k`sY@=&\rFee:bT#p+Pm=SO!6%`G,dUDsEOKKi";7j:DP<(lC2#GBKqbdo=)!K_AEBWZ%c";F\FRquJk<,V$`gPR5#?BW?(*C%bu*"9an4EBi$TWWiklIIinZeOW5b%s#(g\'Vhi)_<c8\J4=r3,Z3,g-\HS.q5tq%U.k]e?+!VZY:t`O=qhT#r"EO*>X8q>&<13:AMuq4!bZ:>'^-+K31=mo,?tM<9gSuR%S:TXi)U3T7ZOmGDBV6d&-MNI2eMTp\#ta8d(h#`TrfcaL9U8!@IUDJE,1+PTk*Ri>.WJ\r]"(QnUUQ?eHLNKq2VeCTfCZZMS+@Nt%!o4)e;[30uq*^"hbmqTNGCk=,T$ObEr3U,#KC2%'VU)B?Wd7eW?)a+'DLaLCU!rQ_I#3SYn8o&'%&F"2i4IGbTesC/GL:t\L)Mgs%KV%t>rVt!Q@4$RnE4_Ud>j!2/e%5`dZe]/>B:@7GN"C_*kR,Rai"lQOa$ke&Wr8Ce(r7u=0H:o7DDHnDSHd#.P6htmSIkuAVAT8M%]$YO(*ba7-q`EV).,>23M_2>DBaj%0T`5JmpNB]kR_?/YSV3L6mUemdMr/l021X\D'f8F>:tccY)PN=sCG&f::Q>W20SZ=qdm<"&%GNbQ?i'YDCP1<s-&i`Ihc]ljuqY8Hh+$U-mN1t%2\tO3bc&*S\TALZ8jDR8\-BLbs44Toi`r,+r7P;i:]o0)G+8")mrp4Y9)/!$M%JH'J$LjN6J[3dHV`JW%o^[H"nP3Xn;a`Xosg_K]Y]5)ncN$<aJ.-3(M,n;LE9e@(U7l<8.Gelm;pf@cu%PgHR/HS[/m"3L%PM4#4%R=MZ6)QZtjM4:Vs)tg;+GDcp,$6a:P%]n6rNIqVHVP1s4_UP50OBm;S+"&O+c2efuD1<Md4gh%gOaB@i7$$6GKq^$rILjYRg%r0T%cPoJ\%8,Dlr7boJrp=HHmjEkImI:!tJ=*)JGQM!LIiJ()TW\n&6)e(jIin?\!?kKOl=TA>7QmjmYi#Y\DRKI\eCj20ju^*FT4!5p%U*Zbe_^UAiGs.D>46j$?;!^(L-1D9*iP=gVX+X,,6m064fBi=;P1;XHr^6>0-#]_O@,i2h*-M3[_UlpplGYF(76Ns+$`2QVZsT.>%Tt1%R%,Ce?gA=tOL%tZDeZY/iI;9b9B'm+k0AB[L:]na@?;j3SJ!FimW;I9*kk?/'\/0BQ)'7^Bs-Eu#h::!_rRWG6S#CN:]&Uls%-[>-XWOZcM%qPX>/FU"rIT-*.7\Nt62gn#L=Ntsa`Bgi6\k/ONm\5Rt$IQI8Y$Ta4M[i)Q3S16nKsl7(r<aN=R6MFip)lp/mcW/l%O.hQDopb!YM-a30a(uCojbiU,]cT."/-!&c%f@#rd=<JOni0/hfB1X_L7o$`W&0rHePJ?kG:'\Gd-80WTtgH]Oecc6.o[c4=t]q<%aGrA7r_^%Rg#W$t(*/2X;$.s<*V8fF3N&hV]Jn>P^!WH'JDG*(V>,cXo>s=$c2P9_3\DZk]1*G;Wo7ZBpC8O.j_=YEKaXQFEUj_t%r;-MbV[f:s>.:1fdh=$@<[WfUg8kHcF]pn3IpeKGRbFa>'?)p-9H!mMo*<>k;$',P%C?+ac>NC.V-kX-cl'2d.t*4O"1SK>mGIXD%$&Y?'9j-_[Gsd!!J,ojV5_kg.FdY::Z/:3WC8+rrg^NQs#>gV^E=h"^L3<>5egE(-C2&hUE&iA[h#FZHMYb,eW-dZM_drf'$/iQ[%+(//[)0:)T].2ZYS1K6GE]Tb1ZSTnMH.9WWi*=(.:(Lu%';r^>?iYt&'5=X_eQQX-Q8$PrVI,QsQ8$PrVZ2`3EW;4/;pA,]VUeN7%AoEtj9gQoYfa9r@au$X51!>qr):L-HRUo1!N9Q739QB2.k=jZtaI.WN1$(Do+=io;`$2>_UMAp/d/VMlR'JUekJob`:i8`?3)0=`%0ui:uU=ZS\eUO%=M2o\T/(sd:QKgVEd-EQS:3sRL9k3+]f4mIVrsmMMBR0fMjI^['<!1&feW0u8!jE_RENK0:J^a?-c\#"MERF0f%e%n#(B=%;M7CSI^1JlRd;iH[ll1L<:!*,!Opje?a^iJQ9mHP_bBB4)[r,oOsT:P0TN1*XAM\SYg:h04-rp/QW.&TGq5qD`@"Q(-X%9*JjNof\CMB!]etji;'BrqWY[I[gqcr01f]O<Fkfrl8R;IsbW<E2GQUrBd0/b+C,mWC>!#(9EoeMb*i]/I*#$C4h\Q;TAaIHH2AP%k"j0res_$bpl`rfX1u^kh;gH%2(g7"=@[5*0NW"o!E`u!J9AhEp)@kV+2Dn\KkCjfM?*(O`D#Ft(fubB=m)YCYk[*Xb<A^6q%I?1%i%)hQWU<kGl7*^aY8E"AWR:`e%*["\r+_cIaD$AX/MMU8o-Etk5>UjHceuk>anhFR.V@u(3MYnDg/-<AP7-V^nY"+e6H^`JoKW.#%R/j;n[_BNDTG*OX>8p2B3=+QblumkaLh[Sdh"hO-q]?Q!l:/76T&i'p5+/"`rsRVYq8@/!^a],J)k+=2rrG&8\RIVmION:&Qtc4\%^[p+S?S<;p`flr81hT&/n]7nTT=>kK)4Pru'4CZ3X6Z1$AFS('KFVB^;sQlO!9)`"(AHtX(AE<H+6/A'bZsPBN;qE(Vpsd5ThIi<%FB#B@CA8fN!B,d(HMhoj/gcqUIp/r$*`KT^rkot=^WcZ;C!mB6IDNY,n3O*C[b9t]8ju2;Si]uaT4k3;.tDC*[bZ%<(6]E\l!Ni[%//_Buh#5MgIJrPPgj(PdB]LE*q)D5@r$am=CUa2V1N2I\U[LqTC%PBdaU.>+cgh&lAQi_lJ/b6_l$3N_B22h(>_Jg15\6\V9"!A@%03t,2!cH0l-p2SQ85cDqg4OUXT1E+@[XVR$Xk?R:ald[fe?,CQ6Vj#fD>EpaNT8SU@]poio0pkmJ,aonA4K,AQVI2WZTZ^S]Zm@Y%%,BG:7/H`bYc_ZsPjaeF$Wd#9@K[&@b_CU3lC9Co=fho8"fu<7(_+t']cH$e-Z8V/frkQ@)-Ojq"qGTG<Vs">?Kj<$6.WJ/F:/&3%4t`ij3sP5;\O:u,TA#/g>ac[cQlUhSFjp?l`uot-he@3r!M0SiC!K!IYbe=AUU(bebmm)<q$HTq%RPPTB,b7VVq+/Y%RPQ?K+L>7%_Wa2h0fc(t*JBe#KU=k.^;*$j+A9`(/pC[e+9Xhh#VhmAWq$<'63N]*dlP[efKk;nk4C_G6;7&)`90/$&O^Dc-dW*4m5$rA/'+uh%fsq(]EW;TU*r#lUroY-n+QB$nM.rrAk:D(>_=R+HC42ZgkDMHH3']oWp+VI:E/m0S0TDKQHJ_!p1C*Su*RnW]boG6W6%)W9PqrCo%$_T\iJ,03IP_uP]k+62Qako8+_P^2rT"[Jb1ilGKpZ1Y3aDHt#hmqA:H+_YnXm<;2&p/kas-#6LZIH2uo"R4Q^@_:`@/?KQs&HH_%:&4edM(b7d</@/oaN>LgM]h2aLo-fdOj+qInZFDbq5B0W(Hnj/U-,(-;&+2'bP5$6XGTSui6slg@eR0a;&MR_Bb/H`<NS,?j'S!A%lD(C0rG7Q%6T"c=ZT^cq1/s(liGU1Ks)#Vcq#;]=&GcJVSH&H>g"+3HLgTfM(=No*P_6VSFm;b9Iu1XqrTRR3)D19)k-4R:5&kGS%.6>P>YGZhq#;`2jS_%?hqlea!;nhGg^[XAX&"M9Zi3?*Cjenu!L/0FP[DqHg?lcYC_Y[cDEG&rUf%H,*\W(49d8p,FSC+8(Y5qT7%^nnJ'ifO3A-G[.):m,s=l;NK<NA^+pPhgh,3Lnp:$H0_ra)\Uu3@^P3a79m.bAF[tl.!F[4-no<R6=f)[UV>PZ(12`c?:agH'(OB%Q41/=Cr)\0;U0G7B=jDW?gF6L;SJL@b]YFbB(2kG>&=i/)>R2qZTn0gAPb6XDb<7I-Ol"Q,eM$G&#T$,T#-He94JjQ"$q,Y^s!Y[%0SMi]ZT"P74H9BP0],l)e%\VA88HcqIJ>s36-nth/C\Y9=ZL1s:7@H3]PceO^T9/O8!qhk>UMb:.EuU"Sjdk0DQ%;_'-_=:'4bq1%p!%uT\u,0[%CNdH)bOc0#3N#>1b1HfGpp_o@\p*@QXKIqU?UQB/>^I_-pO0f6%@ZoTZG*kDYRX?Nbf@V0*S_;IaeCTXI2ToXEFFS%R<>^6<ZhH$AgbG[]\jF\[=5QmJuAC=4['uJ%kLfMh_*tl59lNL@k-U:9Ecc!P\.=]=m][!]9q,$B!mP"m:',.p_sj>8qgE[YR28X%KJBN5b\@s/gIHbMNSI\$AQF*pb<sZL"D>-/O0-+nN%e17K)&T:nn6Pj5BP0;T./$iV6!HLZbOR[eH9'PT%<6&!A79rY2`<;.V@<&%IlltIc_A_9Z9PmcI=Xo3"C@ClFrd&8<bAe#boSD,3S1O.99T<6f!<W.+WPkIS39as&-F"BI.g+!akJ<fqad,a6`KA.Id7q,5*)2$%?#(MM0)r3gP94K1^[NGABpffaXk$GJLhT5Y#.(D1T-g3-aQhhffi9E7/J5I[7b5V^W[-p1Ic*%H`Ui&<,PM+j\c8LXn7g:fT@s_M%"=ff#5uX*T`G%Lkd0KiU5Td62d4@/CpP'UMClQp3mn:J#OQ'KN)WX/Iea0K_n>3JU5Z8pnV"=&1<W[a5P@ZsScnh^*N"6d)p)2@_%-")V)crhZ&g?+1_Gq/mr=J&RpVIrbr<<B$b&$nmD+(/JW$(0gnUV`]eW36=aHh8&ZTUMQRqMKHj2ZoQM21&%9!ZUl@QD?8rNLfo"%[IQCT^J*Mu<]Ym,.9P=h6130aD5YdIVY3>(Q'hL5Pd8_9o7m*":cjpBRDVkm^FiDS0D:n6b.&oK=XHDY8kgmnKm=Sd-D*GJG07G&%batBrRi_+uW?7ZD`5R/Y-`9dtamXoHlN'=0r<&Ge3fe^bH4N^V&j4YP]cA5p_l`pL!<7sQ6MVi@PL@5p%lA6sT;cWB,]97*r+YkL%KX'8+/D"iQeO/4O-1YbG&Q)op'N#DjAuCGKXo]V/4k"b4aGgk)a'C@tg(j8ZUd41.eBa6sT>,tAq7OPA.7-r>C0&IT1R6`u`q339%I[2e7Ei*!b1h@ih/8+fm.:tTh/8+g_3Rd$pmjmNo?g#qdf>sC-hq.iq=jpniAkCH&Bpp>BZ_V;')mc@)1FGn:q@fc$r0KsDJk.Uh%Rm-D[qPR)YY'%E]2j=:mfN6:c^=&#6:]JFea]ZW5]<a\\[e2^0eK9XAAiK.UAt"5;)u'2UGJ6;X-(rqt"$cMn"9/#)fg)a-SU-nA%9T5sAZo&<0>Otk0)eDaCZo18u8FJ$nB)h`tOP4<Ms#n`pd*6/E2F[1-YYR)C^>]bGE4Sa/)Vr;,0?\b23WE*:Z+oqhQnMI'SJG!9%oQ=J=n")^e"qgX4C=DI9-D*uq%?-`R;2Z/8:rM=,rV&t6PLBk;@i;t4?b@@$`u+4uKgM362kZ$jNW6RDh\nd5dV@@6W8m>808*$:%m6=Oc(\@W_+%7B$STi8`PMP3ah=<eP"88=m=3JpaX?X5qg<'c:XH3)MJE+\$ji[PVeN<'BaQ<,_`K[]bjUXa1Z[cU&Y^F9;V.f\N%=iBm9&^/M6kBBN#Q`j<]r?"4V4"ZZNIWP)CT@mT4BNTf:^Q3.sY`@H8rS',l=WdC&&!D)/"'AW`B"u_oK076P;g?jnWX.NX>Kh2p%540NqaZB.sX9[UjRB:&,[Ht@n1:>;-J6>":b?090Gd`Q*N@JP`fE^T\ru4VakGb3$hSM,jHM@SXpa6pW5KCPe;Z53m6HR.n/:=1b%qFeKgp+*g)C%dA*g!a"$ZpNIRTUL69J#](/*d$e_F/In0q;@lI:Su_ILFDJLh^8Xa;*b%._!JPbI:*,Ql,N7?'58@trn"`!od,3V%5Q05e&"4T4oYCR+?gq+U+"DX8m0E#PNf0h/#(CrC"on$eAQ7YWVI004%hoHomnW6Yr[K;&IUS62?eH%d^a]6d?<7&(*c#Mg3?@%;%Qa;eImon799f;K9isQPorkpkmH1iui8i_F_;dHnC6BeJC=NmgrV'&RoO*gfMTMrDr6seg[=AhHo;5(1.97&I!qQ%%mIpKOJrhq%K%32JkV@nVR)l.#ht%"3G<)Y%^rQbQ#FoM\WFeE.NRV1e?EpMslrK0Q"3I"EiEBn'N2J"DVY-iMie>i+p1QhMk`s3quX,,k[5HHpZ5%cC7<8Le!Qi'>8Gk..BS;i[-Xeesd]NLUiU$qF*/h3R\3%pF1RA_q[kaWgD74g)0H#Tjspoe5[`8C/fbppO<R=5@tU(CXu5KBXKDU%]!`)u%k8$\T@]j3KZOXAmpY<:M_p/E@!s#1;04dLB(3PLL&WCsr)UOCo9Y]h0;=6Lp?'qe3r6;qrW;\.jW5,>J;8FR'0-)75a/J*%Cj.beDF0%PkM5):kg,4iJ;ZE;+`am05a7cM7%'?$r.+ndI#oeGj$g$'9kqs:qJl*I^)Y"F<rdXNiBtYZqaW,8"n9dU*%"LQ>K:B.%_'B?9P`bI<,SPsn9[V@=?cCfmQ%+DCQ2:sQhs25k]EglW\A.ho2[l<?X,IP5au+WU$2uOO#UsF_<iNHF^Qj^o.^TH\V7.l^3(l?]%g-YasedK8LWToV^`!q17]YIb0T8MO\AR.Z:rZC)e]YH8C/RGc0A^H1E+KP."\]FBRr>dF#I3Vh,aKr\R/8of&^^sD&IT]a2C'[&K%"nYVM<7?$qBNqomA`T7l3(=hDPR/4B2'>ep,rk?MGQZHSVF+u-&#dK4C8ds-gCNDG9h5S[>-n7bC+QS%l_(Y@+JX&X;0p4D%uX.+%*#K]bZ"kmI[9)$GO5`+V+0ueRT&5H3,0qc4S_is&MUC1K'Y$D4"J:pf4.Pq*h`g;gPa`]c`heNim[u!;@SuNbi*i!86=fE>A>Hsi%@n5u]N*;pCVH6sdUk^4(0'nn=8cAZdqY.kCaE&K;2GkVILuD.Zj9JKQb+RA<gOEt<IjQhWnP<QO:t+@"r9*EcUSjbM'<V&f3eEg\%+.j@gM+=$6-7`G3QM,(NVKauti+^QeR[)4eMrUlA#n>%!eh9uk)_^QRe!QMTmiUqFGtq'&'#dS.-IAe[0c09$69e@#)H+ob_m&,G%_1K<_'Q`6G5P.=FO5o=),OgnmRWP(NADj5ZE>$92@[-OL`&n42eiu$\onh4#bfFIi.0opXk;*Ljpe@t7*Wa&;p!G=te\4q8JEXc=%+ob%r(91F*+c(7QNP3tac,6OA5Vt:\L@Q88RbCUJZP_+$\N(mGcX9^M3ECKdd"Tp6X%)[c0"?Tfe=NfPlm%!Im8!ucm[ueTLK.Rs%AZVPHl3!lcL<fGZTGt*ZoFo1gU*`<SMF.%#KpofYdT6IKMR2r;`cA#YFCF6Vc1XD$>d9#('J%f\doEEu+Z+&4f.oXdm>7k!B#4[j%('L!_LAXoPX7qBG.9b2[_bp`5e=a!,)Go=V[FKi(=pKc3%G`(BL)@Wg3Zl^K%!4cQg,,iQoFKJ6a[V&27*Eeq&_K![k35kfQDdX)%0h>\BCNe3(?i>1N;J7Kj/X9)G)$9%;9DfNZ:/D7;9=C*Ha:C,P[]q@5k^e?D=+?3TrG>E^p6@i6/a*p<6PH8NJ+rQZ:0S942%Hp&%9Ch6Y8gk8$?t7RL)g]\6%6.h4Xndm.4<GuMFr;d.s/=Y5[/aAb<#g"l0ZeYb>S@X=rhCB;UY4lBW<oZ'Vu5"sQ/Km5T@6E/2<Z6X%o=E=M7\,FkghL%5e8!6XLZK_K*@i_lD#+VsQSob)GB0tfCn;'hQ;W(i.AMWa4Z.l8'I3ptCgO(-AuBt/dCp,%-IE+G*E5=gWb-%7%G5WQ2mL86N5!8S]#.]b>7LM;];&Q!]W'EUaP6'1sfgl#'5O'<6bi]?JgueV'X+Y*0Q>'&nX(`Q$>e-oY4/bu315*d$9Ij;Q$WA+s%&,m"UC>GWhHh*@@%.'8=rr=Y?`aqS;nE&qDRjG[gm:*bHgMP8do"m5)[P-R*FnG0Q"!@5/ojEL>*N@rp`WaIVN/I@"4Jq2,ftZrh%3cKSBFpD2hF="kR96urg\VYd9kXJRSNcH4F5LKA"T1*Pn$8>j:bIJ[)I0:YZCA[+82k"!$e]S7]G)E0M^:H6c$V*7N*FN!0<Nf#M%S+Tt0DAa/AM?Y:)4u*51R*eiT]^7h45?j3L4MnCWeoYAd`7mOjF7W3]+*;7DaE>W=`ciD^EjOY(OL=pT7qD4/^"l;FOcek8>/Er@%biZdpk&&(NonJt5%CR)KTVoZ.^]rI2hl#)X&lj!_ZJ2Lq2t3cB=mlgH&F3RY3b3%eb&>n90YSbF['BD4`ee;T7gdr^fs#+!h2b-<%(FiIo)uiYO+&f%nU3EYT#^*KaM0G1mYhi^'G':RU4/::u+@h@@nXm'<%D:FW85WS2ZBZ0"pC>UY)Ha:m,0FE9^Y&h+iAKojatanT%JIn%;rC(oA\mhjn"[F>5%@+\`Z3Dk!`Y_W>SNET<d)[UHju%^H^>9kpoTaU:?J4t"6T)m<*mq:Arnd2MksGoBBf_C4(h@J2!ak1t%m%m&S\VresJe2Q-oXJUe=O:hXD'X0CZ"7r&qoXo<#H&:Mc-:\nr<.P1c/)`R#Q_s@E-%0,RBCr8839Ph<lJUN[$j:>pUCtR]`WH2%8#b<+\.I&fg2#8$b%N7fN7&#unCt>uXe^W6UARO8W$_#qY/EO*gGRjH%iWt@EbssZO8$!hc#f^u;]LRlhpe/ASKH;bT7D?>bV8'_%Xn)F]\V&X93k]`S&oeA5Y:8<%`W1?l(!$=(JCr]r#E6oQchW7aSAZ.K45R:\F4J(tr;@LE2Dk&gHuGem(h(24T8:Z5%Xq,cMLsG,%`-#+e"N-:+/7DsWaYr,1"%6RXEt?XKZNs?1Z,p!U;HmVdAAiJ"XW'u*M'e3b0@<Y_$H`>NMa^HTrD@=$P/KnL>,S!kC@D$i^f#'E%:jdX(KVg[VpYH:";"Ol@5j'.[-9#5*VK^m<_gi)[)\fTg!?:@n%8kT/!h##4L>KYH]\(5#eS#Wsg6EMDpM9J@2c1[B5l=(mg=_Ao%XtYh_m'_$%ET8a):Ubp85=Z,64:/d[_?t.+<j`:LEULLG$JM3U+Kka,AQlj'HFKdbWq'q7pge:AW2]q]]/Wilbs@htDi`'tT\oW<%&4TpPa#CfMeaS1Lhl8Tu<$oV!8uH/8P.g[1b&0a\`7W`/,!Q5%WIrQhTi@.]#q;FF[7`21I`/%d3u(Rd1M)rEnDVRL:,L!'S`io<%X;HI%,=s,n-I_hED$Y%h*RQjSb-WI8C,g(7a;Ir$b?-'r$aN/Ing&X:cE,^&?^]HLoMB\Sg\,`f)RaZnd(bRF7&SKq]07K!R.4S.%i239^]K7k7DX[$[H&(qgOnNOb8/BI`HO$KP$LJb-L:tS<Y468u,"10;U\JMCZ`'Y2V9;]AKBoAbN@\FpR4&:.)XCPt?WB0dNLK.=%UJOqh;3(rc^Bm6&]LBSB-uh++/ZmW[`F.%1nf%h)<X>6L-QNDr<A?>:\k:#'$*:0HBA'q/!@SH-]7"b)^%QKFQU@\5:ScNu?FqLf%(!3!rF%h>Sgr5;EjfPGMp0a\RR=bTucbb33d7oQ*[sP].+5=B`?J\Y!edgB0ds*ofm'RcOohP99+'r/Sc8:eSDc+%"cNssuaihAg%@r?Lcn?@;11^4[LT4<nX#e7;HMX"b[Zh61j0tI+E=A<\8FaM6e&[OY;8T#<\L>D'tT<@XT(Qr!m>0Jh4G:M96@_"ZhW_gA4H=AcS%fb!WGqUsK@1j9aC9==FZ&+nat`--ff5sEID?Dh/<jm0HJ[RM:'I??+=E_X2-^OJe>15W(%7*0TkO3+M)r\:t29=/3^[E'K*Z<+0Q%7IX^H?_1$ug"PJoR+@GSbsj;@k[tgn*UO`)Q_eMP0"`L>G*fC,4MYtjo2L4fiR?4Zp7Q^C:<03_`DeS+cnTgU;6#8ZM#=gsX5kc.%q+@O#4`>57,4&2YIBrPZ94jJCo,2\T\oW#(d+GF!PSX,FN9+f.L.Rf1eeQSG0"u-YT+7o9/[Du.2e!;M<2$hoLA6fV2\-ko>X[5W%H;(1sQ0!1*qfm0fCd2_p7<-"B@oGkYJ<%#qBEr#nHe>r^@2"u-nX?;S)pQU<!rAaS[o_R)C0D:sg85"^Kh*t?YdJG@>Eek(kiL`/%=P+3AqGV4rWd;FrPSYAqg7:tA"POGg(Q_8WKkoY[K>qUQh22PZb;?E&"c@b636nZW>>+d2m*7jq"SBSF`e'](7B#eT!J`n[G4Jkg%Vlf:?OkDk'Q?t?K0t5@-R-kCugY']N1"kCZ[Y<mjHY]taHLc_HkqEP@:=HjE"WF3J*<mQj#3_?>$e.`/0T6O?Zd3lpZYFEF'CLP*%8ue,(NFcnk7rLCV=^Fc0ji_`@/95g"3mFJHZF+05/c#+M;4icB\_GQ=3LG"Woe,u4a0*kG:$OR-ID(*T1gbt0c!!2,cY%!n1^r<f%M^Vn2FdJ\!Htsh#:(+*mq/!EaA<)X4d&-2_pA<[aH#34IGr#WX&L8[5=mF>28r*A]W+\OC98nM*L`7RTUFO.)3R.3Z,.Y=#Us?Vh%m:N?q6^#D8Yk>;ec[p;@Y/Si#r%tK*n&UZL[2!+Rc>KC9^nV%<OQ1FbfLn@Ldb&$;@bo:qr(??)OeT9VG>*,KC!1&*3ul,q6<<\.%9AO9Y+^DBpYsKZ'=t33r>9/!V@]kS>1^TAG]`b&]6o4L*Xs\*f/h^,^*HOBFK<p!nb(G%i0,ItGbC1q'>O#'t/s7\)=(C/sG3!JN%E80sD(:PRCmG3XWQo$gX@eR=l;9S3rjeHJBAj4Dq0sR:_QhXh(PmaCfeFL.$0;aHuknSA$$$uVd%27!h^N<Q+YPi2tX`^f=<2jlD%#Uk^B%YAS99g<(W96'JcF\up*6at+4Zk+`E9Q(fnes?%6i)Xc`?8-SGZZ!Hp+E6sT@e7_<p'l'30A/,4\5$=!.Qq^^V:7ru?B\^'%p_NR:mQpnQgu%clC+J+Dkr/-;Hh7[(g[?aq'lluU/KpWA9pGsoQ0l%rGGQ2R'eFX,0@k\;[5d`hoFfn@kgdIY<u1Qf4j`Uq`L"K$%orFU/8T*p.'%#_$$G8W4.8A\/Sl<ToM0"0cNPUYVTUdnh)b[':aSEAq]=!!Sl%n>]Z9TH(muu8K8im9-<R]G0>tp`Z%WAgfpiNhE%0I9<-k^"0A!%MMP`Th]T;U<u9?f=p_4u<(<]kmft*YV[8&++Nni6uJmCgo9iRT(:#:a6S`VUEa"UEGqJH5sAn=c45_-,^eC!^%ST%VO/2F@Odg!RP5*eQ3pPV]n_Ba@<n5R@ETQ.^kZL3h^*Rjp.r/jdH*"YFe9k5&sH[J9%p&MF\W?r3M(H<-T79gPWQ09`N(D:ec)Wo%L=G-X@D[Bb?id$'oD9PTS34\t[WB3Pp4=k$;'+h-N%@7oJgE*8fbghu4^X=S+ME^gN-EM*/mKNqE_U+eYj`0ZMVhg0ZJq"NLP([+%2>/%iC`A&Oec7`U2Cp`XZ041r]\F'^e.hY+a$UR"1PsuTi;)AIbH"WaljuXm3K/XK<3[bql@pVcBr%-GX/Qp-qp,cF7!la;IUe8t%g6eX[[uWNYl^;*86`^nn>WcJ?-6q5AiRIj["[Z[cOtJtD6bh/Nl0>42:G/[oM"GHk\R<LX%]krg6N6*AFsA)89u&5JWT=T2?L?d2%&@l=Uam4Z(HD^N1SBOu:DbK4j7YDG&s(m'D6\ZVdCRi[80'5lA0Vd<I4M#<_IV/o5#Bu1!A6[PMnnNG=c85_AGM/ad[koO1qH6Nu%FL%gdifd5o#ZaU,BeP_gc5ef<..):1rfYlgIpJ\-hEqp%e]h+F9'^2"NJS<o,FpI=Zg):Chi4a7Ui\SXh1;i*YQsEW8DV?0!`Ds]%gWE]+YF4A&#_F!*]#F@8j,8[,iX6qVLt;C6s,rlT852pVoH09\!3(eiof3d+8"uD#ZR>KqC:P4>Ua:tJ9*^fGQ5(Lt*2[]ml].0e%l>'rH30CZ@WVqV=;-I'+!mu&b4F+]15*%i"EB$W4ma7cT30C`W2Z"NR.$6Z;'btrF+L=<8B+9?jZS,X!Ki74.nd*G[AuB@5/gKD>%$?J=R"C]iK!./ESW8HY!IkKa#s.bOQVqJaa7"slJ^4hF_(&5/ehs8RSAN@3@STrNt`[!!;bGL'J9,4jF%!pO_kfUm4.?hCQb>tKD%>#f"8>24e,T=J_hA/Z!;%:Ju,g"-.4!lRgKgeYD>@uuM:eMq2nCnS`).G\IA_sS%qYu;Ul[RMDt*I;a:+e@N54X;!u@fGV3FWmCC%$t**k&\0K]QF402IP6PC_I<<=/:#6'DqcWTUP%;llMRH&KlV&-L[/$m)In2P&mL"Z)-,lI[(Y=qC(*tJB&sTkhbAAKig=7?Bc)h&%DWCM<(DGGsFuNc)G*en;EoqnfIG.EaVn#*^U=V#E@?1odT2P7B;;Cu@`4[Ic.@c=Xern&NiI655]#K<5\q^,pXkJ?VkouaLNeSKD%;Du'cId/2^cXTTeNEEFlMkBp)m@<[k,6a&)GkTKdI5,STe7-;**ODRuIm(l)c!Ek1/`@EUeR9fL?e-ei^-?rN7aULU<)Bc0R_>SK%WXA9CL`^YUR3@LiZ?u`@Go0S"HhOc;?KOer9f?Z6Hie@RH@+4=*So.D;iTO%-e3%@/[*jI[k\J>qC\&Xln=`a;-XY#,g8T*=ZsCR%ju:eV-.Np3rNl1(QFNRgBsE<.Nk's;n`3SobWS0ZmXb1[3;Jkh>&dTEL1>GcFbRd?N.cS/esq&h]RJK)`\?%ThrEMJ>-A<VLm5jD%j)38VG+1)&/N0NhSkdJT&=[J[LJs,n.P^33`N@5Ei;Tl*1D[49ZO=mWh92Y]6+_E7k-&Y8WUnZHHKq4=bJS^alog6j(0rf=:rQ[9%[b%hjpOuT]Cg>mFi17?7I`tH]V8ZpCH"#qq>D)H<CXV3Gp2D=hJqG"Tmc-j4*bg1"aRbn/`F?`?-jP[o75#H]'l)h#L31so:-U&.%(AiN8EWK-E%h&>&*\tGd?V87"5:qYiKDW>6$\bq$iX5)CCTY%m>WtB,ODZY8cee)nqMF?Ka2d<dRudFE_g@BG<lL9Fk35^+:%]sh%_KE5FPPSlI\#/'1i#-f$<TNb4HgUgt12?PuH^GBq>3Ne+Eni>NR9ec`06<;eg)[I.C\P[Oha?&oFob31^(JbdKo/L<n6U>%,'X4.%7gB?fT1=L;SU]DOb%_+:%>$/X4tVGo[Gm+9C!JC&@+a7KWj?c>qq2P/$So:l^!`1,C[6*-F<c!oge;q6aP5]jCF*]5jT4qoacuR&%4iu:9QhB.)g0Ya::\iOC0#>.!FIU\tVlML\?=Rul-2dGPAKI5m4Wph:B3SdB$q,!0Ei#!K?f80Y3EnT6_2<'?$B*[;KmY6?=O1WC%oo&dfD>GA$YI@F/9iA$qafEj@P2FFU$#[Nl0?be&Y17hrl5J!Y/icNMa$a"6Y/#q?)F5Z,_`TT<XZc']*SV2#p0iAp]A'u@'ZG[!%bk4f#rZ&$"FX_T9.h)d>42Tr!S%,E:P8bmQ/L!00^Il@j^6>h1?C^9VQ=:2orALa+T&F&-ef3o'M`oQ>7h3T=kodV<eE^\tb5'gn%F>7eB[Wq\8DP-@dU\8^l&'J&?%Rj!ZoEt@R/cq_MBg#ZN)3F2^[5K`A%sj9iH]`^N-tt4pos6O38GF%'%'*u'MY;42nsS2alV8NP%ImLo%L^LD!Lm;>[H#6FfheH]rFs8Dh(p[Q#?n5<&4U:@dIc[5KNKVHij<JQJlIHV@'a?BO!OR&rf[Z7c`#G2t&/FTGVG?A4$Yf<P%/%N(:>p/=)*<s?Xl8gYW<,_/!fX^'`.6`3&NZ83c8d./jN'??kP4+hrT.b;,'tsd7j,'_\?nJ:pic-#]E-mo!;md?i.PUE`dPqpk%&3Wn`NT1i`.qr]H*,)3qbhgjm35]rtmo1AUEN,.rR,.[#(tB"ZX5"V@2S%^nZQ$+4.%h5I6e].HC3\dcMCrAmLNeNlkeO4iR+B4:%,#0GcND'@i/r6P1j=`,DijCAUOd%C_*:HCs[&.tQL(\a_`e\3<S1@NBb@C`o@2-p-;OX>S?&8`l=[T#<oKkdSG5>7I,Giu,iL4"Y%0U8J>AR9V79I=T:F4/&,E3Sl@Io4"<nn,#;Zik+?X5Lua4qYRbGjJZ:.iYG"'2r^Rk@1@40c7^(pj;CONaWhI/HY$]_N47m`1_UM%gsYaj1'Sgi<ZF?mckLrPSE/`I]V*2dH?Z[\*5Pi'Og\?:UUMX=3E^8QCi!5TXkbE*XK;lg,6]YJhUHTqBs6,Y>MnuKb$k2t6XR9K%S*J!k)e?[=P*C1Ig,OsX5'aW3HG/D_-'c)b@S+?Fp[2;>LKI?M2JWEF(j<UhC3H03iG8p4UR@#GDmWc&Ge9?h-gP1$`BgIafmX*p%o\sjUH,)/%cSYgpaOY@2\<[92e5n^W'l9DNb$b3/-,gPh-m04YbR9`3Ngf*6eZ*S2q043B]:&Ukj1[R819C<4eiEVl4Z_;cG;bA7%]0SQF=-dmKc,WH_42pe.`N6aQ^rtWC@*Pfr;\p@%m;^"c9sPSKRElopZ=*A6l)pXG[<M#am_mQFTJIC8QC7,VSJUFteclXZ@HVJb%#?fF=>CJ)0Z)l@C:QB4rI?N^4H<*p`[M7IkMXstuFoWA)b_X6<^'2o/GO[-M(,n1PeOjP.;-)#k>+@54h;$h.5VN)C>KnsnS33&A%q3T,f".cl&`jnsZZW?(i,"Q9Dkcp5H2JVRJCJarj8ubgmpDi)Q_>(sUnJXrgZ1+F"K&H<9!!@Hb!Om59E.9`^loJ.X'MIlHafXW>%!@2SjHV0T;P[CS%M<\!P'X`)3-#00!YgU^!V<hr<]s>%hH^%8sCBk.&;A3TWF4CSQ`f7X5*%SnL5qnS,Ue[!Ed<97&(6&FV@Hi.\%('jM];n:Id+a[M@]ghQQ=`<GoDAnl"E8n>jc!Q.Ie,*4i_\DYP@r^\,rCoFV&Ya[L3#ZXkSV-MNb/B(9dH@b%+6T!,S/:X7nQVua%k-!AsU&F-&>!5m.p/ZmV,@u'<EoRm*Y-r!s4U90q2U%NY7Vb*_fXtK4%*cV@ds>,;g>c#6kF"fF)UBI<RHpOmT46(f(@itGBaOEP%G.4=^npBZ[K&[`;.0&@Lj\h+_4emf'*=<e[X12PS=%Mai>Z3pK1.tW\24';mo('AXlKj8Onh2MS%%7S8fu%cgEnRd=5<j!+SF0_i%)`O*pO@@Du+X3;BjXgtA3bTVP]I4>9+D^Ye`kl5YUIDin*6TACA=.ME24-b-?EUT?&#_+I\r6,jmXA$9?UKh^SF*)_I,ZSTC/k%c%a8an6:?d%b`b"\H9`c:;>e*)GZiRm]Tc9]_FI<a^)Ec4*TC'\'&gYi1=93>0l'bCYD5tL/AVUg#]NjlSlJ#q3=RYI=L7u*,XT#>3%4qDSm@'Y93#5'nsH@hadd-70jpZ0[,SEX4`o$4oPRs`=k[ZAh4MTJT=Pe)2!hJ2Sm:1-#gn"9o&RO0Y'^;n*E=so\c:VRe5^1tf8%n+MZpM$s&Ma\&N5jq1K"2:QQC+m\i=W2K?OL%I^h)JUXQSrs(cW,tAILnaZ>ULgMt$R)@%IWLR<g(-A=KJ%Tg0DsYDh)oAcl[r"M%bU9316E4a_QjFF=?"nIKbms.W,)g^t"D")&*=sUJf+FU3)J\9,^Ih$qE4><"R4Cn=$O1'(,,^3f;%DA&FL(\!T8UmgCJoei)Z[p)%c/khU$Oo-KoJH*VQt^8=.3Pc1c0kHF*,KKQ@4kidjf>9TD6fn\k9r1EHNJ`RFNhWmr67a\NAPo6H0bYb)).ApZ_%+6Ed/"oX7/FB%Z/FEmH>id!qb!cd(cHg"RlMOhIbN&*F]1fT:A*F)8:_l*oH%T9DSM-WqqQMWbW?W[*-L;R\U!*NSA7)>BTZVUiIsi*<<<geOq0:9%Zj)IQ4D9[Y';)`)T#*',J'b11jG*aZ4oP8AE6M3g%1"b%Q1M>P"*DRG<S$'@YW#SncGC-'JPK2R]r^i6b'2AQH5=p*G"UDGCT-\p%M+hd!ORFh]0L!7l8r7+-LcR><Vi'pZ+&kP.c!'_Plhl;UU%>u?nW))fA=bccHo:L/(YYC%_KcWVH%Ua*r:mPr.)843-7[`q"`j'l%(c';)Q8S)bn8OJ4Xo>&39_Ks?5XV>ua!8)]+Zd/Ds*bdMoblZCp-1JtJh;kGRA$[V__1N9#hOI:$6&2mo;';Z*Su,Ygj:hbBK:,C%khS*-O\tsiWA/(Q4%`EZ&?]6DUI745DfRN6OXV?)'(K@^pQnJtO*@Frhp$A&K/1lRhW\Ai_[3dNqo0ThU49sR^/tJ8;>A+P'H&9$%*4`Pu;"%\/F"VO-b?NR-&3FYUhaXg+3BnVO-qALdAfA@&D2K(I*GcKu6?OrH\]gEK2K?(i]k_-:E&]e<cOSFMiS0nD2S4FL05p!<%Lp<L'erCORm,gl!Cg9ot-#W`,\T+))bK]tT_[l#(G0n;`m1m2sIf'J,UG(;>G]e9q**tXqT8Q6f+a<e#r<K9SRA=hO5f8@G"+;bt%`5fFn+!Tn;f=\JW:9&Z.T;;bgSPNQT^.%"unhU35H`7u)U9C']CRUMHGL>#@ZZ564Z@T_jnCNnHc?A0aaumPSQ'0F!C[`daNP:_@%,(%Lie/E^@7?-F_p*-UP(-\jkT\d4QZWC=#?SS='2K9>t_1t"0J'DV*isgFM6snubQ^tT#oKe&CA3S6pap.j&AW_O"JT&08k;0Nd%m2s39cu%jd-#,WYPoZY5CghOQ9s;U`;Pgj/,bI`51,.90O1Fi@`]^nT&]l('fI&dlGVIg]#TinGC*DA?Z3T_NP?kiYTO+ebM]Y0L%\r0$U&.Y1PTbP8T@rgOQHG.__M:q`mMkIhiMNRH^CR4Nl>B_EUpiXu7TimaQiuEEc5j/[86P+>7kR#&,VVQEE")6rj)1FTUE4H^g%[A;-,]+Y![P+_Qt[s&XfMsB_.3k)i=+b!H)os^i$G,Ma=>LIFjpX0Sh9=hN.>t_of2Ud=.\QDYDc4F;Kr9@2G/_/G<KD\dLi)C8J%.d2oNr^JG_>bKKIK,DcHng=LN32lcMZ/.N($HI>dL1lQCkA\<knlP^0&[D;=P<a7F0m?^BVt$)BqGAiaM=#ZdEep4Fc%FmPBs(.3%%8o^*$T6;lCFgKmcgPka)BYd*fX/Xgb+@mdr.q5jr:qL40'K:o+P_dLF%gF(72p5g8$Hf0ZJuI32LTtc1TXJQQTq\`rs18Gl$.G]%^![D:=8-(>iTrE,2JZj?iSDC8icEu)<HRnR4rc_rGmgfnaK*t5Z!O,X2.K]/dC4i-MCqajK^6,`9D5*&$2kQ.[N/Z]cS%G!KGW4F%-fIK@<XqVfR(>rFV``W2nclK<?J3ls_pM^d&$I$k-Gm%Zq/glKlKKc<J&o<X'BOHq]O#MoLT1"#H'n#VC7&;j08A/rV%DdU[LU3l%g;6cjUn<XNPWWQqEh;"rDd8$h_OD;4QF$)Sd^9qKff;/(mp9k__oWB/$`>paZf0.,_K.]GA1WK,B5bo]I\ciP4uhp^KTG,F<4JSh%T#2qfZ"WoK8N7!JQW).Jn_fcB?W&hLiN'f\I/$0<bD#DV[i7ToiT=#H5FlR#iKk1l(+rs"'Z8IjmUE\,h'n!r]$_+uQDjb$HfOfO%XIgj5_Jb_*[r?hVfq/cs."h>LDYeU,.D;rB^XBX&S<%6)WVLclnhNu]/"?,]IGCEPbk&"WL\&s9o#gmm7d"3/B3EoV:E$]\o9mTe%EBaDE`6BAd*bb/!L],]te*8YHJ"`EWjtHU5V>4=&n3!MRq>'2_pj'U/#0O?u"(o8m#mf5mh8f?ZR</F.qTG5B_L0a5>Zg!/)[k&*%q0F2j'_W>Vp/YATQe9rBe5gl'>;)JRL#g5=h*Uhrn8r*R8ECWpf<+FoZ\NU>U%Go:?asBt/h]?0h>%699JI=4HEk0QarJ+?72@p#%RDqR3.90`F5M`Fn0!AjOMm91n`Zhg9oX`,!0ADEU_t2XBc;?O5R*!e"Mu.<?^3CX0jqf]%HJ=A0M2f3fL\7^S7:fufI^+'De6$P#%oEL60ra$c]hAg@X73YA`-\Y*-J<&rf.%Q1@:W4M^-VHO`1fZ%qp)<+RaRRZ$1f>#$aiNjss!I<4[GE+Xf;9+)I==27FDI08;Ri`G%9?XI&q,1\$h-K$Yq9>aq1\uPLfhANl7@*Y#X.uNORoX1$['[9TFEbH#?;d^K[o?H)qk[']3jCMt8$A8GHIq]K\@R-qb[!@YQ8d,K%+-tAG3k'KU>-'?K4m_Mf?T2&tb>3c1nT%@6N@hUI#LCTl<cT#Sht#'9GU64NDcR!DfN?gUQ23#Ar8u8H0mL[&;Q%%3o'i;O<iUr2%_MXYVKU%#_BKj"t<\)Sj9^F;[((*.Nh5=R'](_NX7F)UKC@pXBEuf\V_ai,::'mjeh_^0sNF^pUX,3\MKiR(dqmO)Jca?gJfgU&V%Hq@C?Dft_e[B(efX0(OErG#\h^5k^Xou@mol-HWZrV:Ibqa/hB-Ylj:G("aJ`0C((,kcO8-"?iK$ZRf)[dq(m?=WO2-Ylq+rI-?M%b;\$J/%pYEgW)*nXn'?kf%T6:FaUo%C;o4qSQK.PLo973PIKlQO]Krk=8W.>IsJOfNjfW;NVK/q7jVX/qr<@6<7V](7Mi!KNilEc%'3Bmi`Ir8R\Y%4Y450Q/+hP-'^UP\q9@X2p4Yt`?>!Lj,Zg2h%LJR5DM#@,(fi+;B=\3I-m,^Qlg?"S^FkAo_TW[S5CT;d-nl,kX%dZK0I_H_bk:SR1IFtq^D%i";r^=5T+0%1]/md-QO0p/qWMIEr[A'Bt)e!QoSdk,XIRb2,MC/JNu$4G$n1gB=N!Z-8n1]5EBHR>U#%fgg<BahAPU&iY;g9$Kf7omS7-D/Y8(gu3*dT"A-2luVIZ@ZTi[M`j8T>4(qP[5cM$AMOksEr@i;=5n@[Ip6+lL"4`GXru+Fqa*K[%?5-!J`FkmGX_>S@I(LZ,5&c*%8#po;ch<rjDT&RrVBo7PI9#W6dFrVgH7a"$mrtV'9U_15FuE-lk#(\L?8tY718>n]am#Y&Y'cgV%Crn?q,0Y7FCMdRhH$d91Oe3/:ce@40\5aL(NFlld3u?RT4OWjr0!go%b\!2gS#,I]@C(9.\@gKrW9Z$MAV&`2AmUs2B8t'MQ6JI[%\)(kD0AH$QgW]B:C,NSNU,4@ScW?#pgYG5gh-&Jo13U+4ji<pUUXb!fkIY6Nr_BrU?.t:Y1TfK('B=*,Zs,NE<UsqY?)+IAan=,r%ojg[*Q]oCR82sah\%8R.dpjoI.eh1eY'O;J?.Z8qWRk^XO^?mZ]r'o_5s'MEV2Y%FH>at_2(GlA81&>^b%=OF@4,"?pCB'fo%mAi%nRbVBMPhi8m,;Y&OaXl[UpAgCj'lnSBr@@l9<6Iqj[2"mCTb*ao?5ah^&7#=6dD=&Xil+f[,9UGDa_)/ppft'G7Zn<.XR5=b44=m%/8FNMnkj!`HY0YYD]60WrV!6l5?KEVm2VprdFX#oqb$#/<SfMAUBBZ>E(=2i*>V;-a2>o^\oY6!HJ^g<^3dFPJi$U7J(a0)<[?_6%Yl2eAk9>W>Eb`#/\@R/QNmcmej.0dCF'Q:m1<6T_c1":uX>`mP6LOj6RU8$7Bl?.F:D:eEc-u"m`LPf2&(XM5EinFZVP,Q2*UGru%cCXo/rU]MgD/_,hp%e2XGpP3^3NpDTkf(^@)0N4-^5<_.de`B#qrI=P\?7Gi(AHB5b/L:-BX\\IIu'AcddC0#Ch)S6<:AG]Q`HCP%L!0,edDk9R0mS4^PVu`Ir6mQPFkkV0^8`dH?E^-g+u^=K:=X-Hf6:,'rn==<jDKYLa4Hg0fZN>N]ldSjNP-m#\(SgFo'PI#,Me'=%B'jK2;:rQ4X_m9Gm9I#;:Y0onpIB&ul+[!nhKaop=2GK98Fu9.U"nIL$pQ))js#kU-QD0fbO]3%;(lYC';l*D:T*0`g/CpT]mNR[%?KRgi<bV$6EmoiX7(Ird9;Y(c?CpT^'kQp.r1NC'YHF/&jB5=t*1WRd2_WJ%b#d,oZa-i>^8ORMrN!J"V:_R3/,IYE;AIdJYLW4O%AQ7DcpJI2;Uj2QKq_#!cRE^X.]Dkp2SR11^C9:[&Xg8F_:d6Na4kEn$4ksGk4.D59p%DBQCDfU*H\cPtcS%6FS"5`E7%^["=lnSL%p^h5UG3]Cf/U9pg[]ZnbZ.43g.b[qk>gdKp[+_+dC%&Em>K(d_M9-i_Q<3//:2ZJKkZ$-4D1,,Po_$+Mp0)C!GIG'kFh5p_.mC^i%oiV!.0(L@&m-nrF#Kj[kAeV2,9KZW!c`?&30,gh3St4`#I+@'@h&P81F^OG!IJILY]fQokZ%[Gs.'<QrdFN)6bnmN\+]/`sN"f`G%*kq+L=t%_!oMhZhTr61[;%:Ho1r%D*_iN(2qn+ZJnfS<3[+"9ml!t,i4[Z\OqZ5?bo(*h96LV7oq.@>ZpLi@Q)YbnoELNXhEJB`F%m5`bs=MQ"]#!Uu&iKHa</BlZBV8Q'Br?BP,h"=pmIL0s[Q8ha[Z8+10F/Big'I.W\qS7WsZ@F3384csQ:[euKL#Q?hi<:)9TOg1#%"#1`mE$96g(,uG:]3-7n'GD+J8k:_\1Ft4&auh>eY>S-:XGDf;1INMpQJrGf,gb"kj,B'2J8<(:"\;cnE+&nd7LO$a'?u*6q`6FU%#9VrAFTBYU$ugtk8!F.Ea7^Y_S0T6`F>a@6N?ScOKqK+c"*QL`MK,(r&j-Ccdh2os/_UKMU,P+f%Lb]i7m)AoPfT%"3Pe9lW&!Of%(`4!=@RDalJ;BGC+Vm'WK)<q%8Yeb['qJ_ML*JEU&<`OmEd=r%&UY*\Q^Q$lSl11"_;m^69*p_l3O5iY?mJo$n_4V,#n'.?C*=ds%Z,h3$()*bPRNYi@$&N3r&sEJBak7f'-OUO&pQ0KobT*,1"d/K!b^gdTX?cC]#]_m-IL"jf@=qf[D+(N`2E=ZINe'bjPDtq4MdC?i%+L3+82&kV^AE"cB*g4d2=AD]VJQa+Ojb1^=8qn5';@J-3#.P(D&;!Ie#pG'maWmmOi$b$NI83I,4A1lo/-m],%<A;Q&/!n3$"f(<%F5Y#*d3C9i-Q%CZLC,.:c$0B"+b[cLaQ:o@j@WpG,A$#j"SUbA.lP3N/5'HX+=&rdjRQh),5<4BcBMH3a!Q^Nk9V5eaK\-?@Dl"K%UY\BUEB,p$<uRQu7qP$&d%opt5Xo9U2eYQLR;J$9Z\=4nHUp1CoBPEW=ts07'@9Xq0cYu".#n=pK-7CIi@'7dAV?$;^mIcGca(N?%m'M9Y&VrFm0Qja=Z![VglbWu]N#$Y?=Fg4!gXh!j55514W&,`O2j;;dPa=iU:^9H@TQXCGr>`ZIgQt\OVCQ:R=3CS0%=gfb*AR[M%N9%"m"k_tq5\uX(OP!Uq&9:L+"igTUZ:#W<U-qj$YZLmWO:?2SZ&lKN%S;>4NoaqbC9g?')E`To&06<2>%.ff2Sc/,6!OUG,d%Cg%+]:u<@N_'^g9Aq.j9R:PJ08Ai**t0A0"41\@5225j]I7ZTe+B>Y8:G>KE)E,\IR<s37Mf$_k<"-&]#e^L^EB,:!#d:0d6$16QiW6%"<AH@Y[ZU2Go`'g'G;`43j_3\$.dB6We>XBaR4rOI!6uC!1,VXJ]k\pK9QljEEOJ:)F?76M?GLV(4ZtCL,]6<86cIVKY\9VI"J+2%1=Q>K#sfG)$k32M8L.lS!NqM"`*q"^ieUtU,/aUc6V.nF'Zg$QJk0:S!!FGaip^D#EOd*Q#`AupA;]pP*WX#i\-cm5iV?60\-.-1%CY2/t&Sse0R,C>#M6LXt>X!I>W[jqM+N1W1NgLRpQeN[?S-;\t7>bQZS)u/VF&id:i["nVA8obsH7&iHB1!4S@h31s?;?5#cNY+h%&5C'8b@p!V3nb]n'UQ4ZnN9>3BTWjN:6mIY+<I9pir:c;.VPH.Q@VJ3QGH`.oNl%7bd%pr)SD=E.C]pm5`6BdD8GW&^pF\Y(5%c$%9+5EoL7rY-M;^&C,Sh!sFu0Y]LmH"k#%"/E*!&ScBSkkW:r*/u]$,++>#+I62FJM'A2<k*,8LKO&1`hC$SRJD/.RUE=R<1Y]J>)`%#nnGA&841@ZG9#@#fC+-'If%T&CV%8;W&.;BeX'5[A?T][$YIH<*MbK&06Z"W&`dM'/57,H(^0j-4gKh1uso#5eFMfK+W+k_$T^8%o[8<WP`hFX3kdk[\)r<_L^mrDW)hrP"*oh6/%ZUo0@9!dq-Y2:"7$u;_I5LH+UjS)KAjP5&&'2:!\t\I9*O<2OWHtP#)IVA4r@!T%49J=gf^kJ]"!gml_CA4#oGA]b#9u3`8<K4r!XZ!@UjR`H.?*1)-:Jc($R?GT@eBm;ehD\sQkWs>,g]RU8]_M*(rQ^"@7#W=O?c>7%0%MaBa!O8pR\WcR$lk&S-laA/J%S7f.d@NiNFE%R&1Q$U>Tf_iQ]s.b0T$I4_k[R5E.N]A?*(b*_C.lm%[/)qJcsd35Z70*3CY`T%EL7;G'I;&Q^Pd4CcnUCiS9P3(JIc;2YkXSo"pO<-rkqa@6uf_/%Ntf]Tpeb[QUelmCng!mR@b$5L9r*-%g9a7bJ+T/0i7JXAhNA#%^i:dD88nX+2kh=VTjRtBaeF:/fF3p,86'Vc*@9T*O(08n)R;19<Zkd(H"9K72XC(E@@@]j`"=%%&Om\:mP9\f24@u'`X^PoEM49.%J\[!"O:)dHV*G]UJ\W,SD_+GqK`G-"#.@F=UCG_#YZ]pfJ1u.;O#.5*VSJ&0*1/gI(!1L3L*4%2JepmtOu7fHc5<MU@5N9,M&iMQ%YliHGLb^Scd7=@u3RJ^p$@opG('piATe)kU0Y>(/dsQ07l55C8fIXs\EJA)@!]W#JZ#N-Yn%oD7N.T\c&?roj453$F&#2":/5:+r%22Pro'N#3"GV^=+aq,Vu\>7%N'!?\7[6UOG6cHQk2G1d&K!\2Q%m([qO:&)>Kb[,qMY9a[h7b40o>C<p[>[^H'El>[-]`"1%-EZf%+hqM5!a6_?U4<;mc88B;JIU+VZ!)HCR6QIt$\]r^$oG36iG:tkH-DlErK*K_34ss$.Z'gY&K>+#V3V6*f7(R#U#[,]."(1I0\Og)%(CI2TUuo268RScqRP.tti=SL"3Gun[3LM`tL_;1[+gk6"r]lqo&d5MK3q4gMa+B9n?V;W!,3'CBDm1o86N@K8+G4W@,BeE<0[0it%SLq,[LMNL&?L?^G6N.H-6<obgRl2o+G`GEpJjrrf0!IS@&NS2KT&WRi#H7IWqunVDUp5"C;Dj+<R=\sQVuZ`d'Mgt%?7:H!G]pXr%/XY[Qo/CIrbC9?+o&p949QujRN$+6E`%FmX_s(^8+q,A>)B]-7]U_?h+j7aLb8;EW,&_d&&&SfGE%I`@(M)cD&3/5Li*7*$P8'G!%aFcPWIESk#Y[DHj;$?SQd=kPm)m#U?[G)%R$IB"oOTVl0TmdI[C_org&:pC'%L?eb!-PS,EgesMgIR&&6_u+jPas%D8&\CH8%Pdk%+G(sQ\UP6B#r3RA+`KdV$W"!%;i%MfW#QAb51.U:QU'\h5gXU\2Ij11CsIg3_qSi-%kJbT;J$k;b/9u?UcfiZDHLcgkuI5o/Ie2*%"7jP#1iqc%OLZKcW!d^7F-*XoG%*gnKVo+qG8Rc>KNRB*mffs[C5;J@*>4tc<eCi)Km+Fq1:`cW&3Hn6JhmXu_u>IZ_pW$F)OB4]%&lLI6M"2F"V34o+##/innB?\0/-m];e&W-D60(?<H7k9tf"9-'Llb!01P1\MD'19k321\QY[.RUU,hM$SY_)VDa?qISOSW9%O+tJ%Jt<>aL\:'j59f0Mln%ItG8j)q1cjmkp<nc`iiq:m@6\Tr4L,KEC)<!?+m?JPOnnE#59co2Tn&G!nF\2o7U%$\*uJH5[/BHU-4)F>%;W:YRJk4]FW+7&ZQ!#p:UNm_=::+fTg&W?$,*62ea9%,HJt*),/s.1t"7]3D`5X&jn9?+>WWb^piM4>;RPD8?/i"(#&9WO6Et0rq%Je:SZ'd7'$bbGN`!6>HIKkNku(5;#n8]$1kS<,F_@2G1RQ:mC&?:ln,bBV`t-ioYtfLV)K^'f&$GHj1!NsLX)LSUCQ;/AeGO(ot'%072dCd>e7f)#tI@MuX/@R3o/kU(LA\+TMlT,P>.=W[dOP*Y?spO@.P%3o%9u*#V4V22;1^A7WeD"<=EN$(gQuV]T24-&<*TQPg=\%A=C<rLuqS]L&fc^=jL>=BCQ,]K?XL=L;3sR6f;EpL1!DM49QXri.pA0+9N6=IF3TUL>tGf]-'Fh&noDU@^G1%8\2c+/gs$.i+W<c%KZFNB<$]O.klMmV>\oE#?7E/?4:R,n`H[(ATE%0?m)tId(uERTnY8:+^h1bY:j(kiL\+^"1Jc@P4c/pC;\-s3hZZ'r\_%l>7V$Xb%VcaAQ>*MjA!o@PN@F!lL"O5=&g*fF5<ZY<s(d$Dpdk1qBZOh@GJR\h1N1!1=3ob_t":1jp\2%W=ZG('[*<3_'"8N%XM.uQ8QmblJ%JJ9]GOFdp-dfO6c5kMBkRNF/o=N7W^<ue<GFrAW-coN7f/L!s-;U2$gQN[W9U8&4>67"b59h<*Od%DfnQH^u<lK>si;-\:YN2u2*%gAa[b4^RZ\U\3!!//o7L]#\?rFMn`le#^)sj+>p:^iK3`)D<?aZodUZZ8u`q\8Y$/^rD29j<9'!2RB+_Rh*U*W/]g-&mu?Z,^Ui1%m=Ljdbm.d%e4+G'$.()^&j6@_c%9Zf%Q5DjePR:)jX#FLCUiNeJC%./ZZPPAo)[Mb[8C1r!#Q4TQU!%R!P'-1(j*oOp'&!!*ld:f%i%!C\\JfUpq1)]r&**3nE0]d?>`CesHpFitLN.SG\4Up0Y!sFJ4s3qK_mm>^>UA,I6DHFs*tY.,@9f0"5.6N4@(JsR5d!R",":6H%4qLf7_jJ+#>noFD=._CV;2D:2@8(#"Y(@[UX%aPd.)]-S0IAH!=1o*beYS7A']LTd(m>cLX'?T3B[T4*$6`A1N60aD'c;hic$CbT%dCa!MG)#,_ZV#/,j,qR'8&MkY3X[QufV,P5#TtV=UOn,DL)bgQ/dU&Q,fHG5c\?*XR&n8''Id0=:JFDCA"P;>Wt8HT3:kdg[2AHo%9a1M-]+WtO(29#>n.)B^JER,sNhI0.Seb#k_=h5g#?8\#d)q?nbMdeV%,-;b@).@.>R2Si152jGmU\bm@6B&%:_n_%#p_?Im_T"8%#;"4n76s6hYoh1QF"r7U0hpZ6c<Ie$k?nHZ_@Pe![2?aB-/kB#E'_d#$3Hb?bW0/fK$?s*3F>((b``_^$9fTuCrHZ40*16@"UVIE%:_;jg@Fgj(&T!g;,l<gb@TYtO%ZF49b[X\NA:GGimLahQ.YPZER&aMZMBC'mp^"SW.^%'&R&aU2UE@][q?XeY.^%JsR&+>VL_%SX%qZsVR)Qr3oR&ss:UHct'r<PS\"XV_TWiZiDG@6)qnYI1jpP0?l+2R-:6Km9[\U&Fupq^4kO5LtOip,BS\U&ERqS?FmO5LtOip*+g%=c+P_pjd2:O'ip$iTd"ffm7frqSR.*O5R>H!5*4>4GQ]?n01Y4fq!Q4fND^4N`*,9-tkCPnc]fg1@rF#3b]bKYQ>+ufB:AkE2'ZB%eGM$"a4![*3YR&o36p2'Sf0W%jFZ19928"Om*[R?CYbi3HF_8hppu[uYlJ*G77onI1C@A(=Yf:]eu8krg1#dbb;kdF?$mgb5j*"2%Bb?fSVhSFfCDQkV%+/ZE^3qjSC3A,t0k)AKJ2B;O-BVhH9R(sES&FItZo`&upcLqm!L:sC6s(9?Bpa]0d-@]liq!eVd0UPZ+<mRJ%(TcuBk6lAmCSUYq,%ua6jopnP$Uu<Nna$dnqJ%8-n0(C.h)Q-3MC2f7Nqn?E?D-qE3EdND2akX4]*i\&llbp$\Oms_k,%%:SU`^M%G%p`%*1`.")ku;)h16.V[Lr@d#aLH[o?_HAmXe[I4!]2=NlFS.@03Y5;;@8U?'q[!Hj=<:!t[_!kp%%#kdX6/@'55iN.*HIm3DD=%<!]nD0Ls.d'gJ(dp^qm@<*[Ds0LEqm7R%`hq@S)r.YR(-OK3#\L`ai@r\-6CrQSL\<a)fW8rcChP,o!@,GGT`AFW)-i&lXmmQ<60%&Zon*\fHRo=u`_f#t%RGL]R^bZN\kV0U`;$&"dFL9"TXKc8j0]/S?huG(ai>c@Omt@gXio[&&5+`CI@Q=Fl.1k^&&1?J+LX_)*6]%p(9+%^%!;iErq&]?&IZn2=p#[3]I?HB:^88a0$RD5T^-leeATNG^Ls28*]$:Eb.6sU!&o8X?aWf]->;KTo7IS!c!0$S^9fWk_[3P%-V=)B(G,PBD^dKYRG/cHHOW)mI`0ufTI!R5DpP*Z[[bDMY_!8CdH+\^W6jdDJM]T-ScFM27!/8@5OSho7_lA@iHnpD)9>"34#UVX%UkC"dHB*f)F;XV6\-ZTj\PuhV^fsHp+2mH@NSm)rg+Z]"efYO6BeI5"!_m(nJQTUm&Nh,i1^K",GoM>Z:gAa\&WHeW52$8X&i5"1%MbG7RUV"+9JE(,0!En6c@6>h#3!Xn,U.O.%RrR*U*7U_pX-Y_r#=gcs-<MOe8-e.QNC+F/>4@/(MB'W'icZ($5TI2bR!^$:,)>]5%E'&ra+cbDq6mD\5Oi(9lb`3la!227hP7P`3j:E@F[Auh'ii(*f4UQ0C3K+4%k"sVtZ\0MCLoWE_+eq]O4qL5H_g"`-Xs+mBX#:?L%&&_?+0HLaB8!,^JeXM8+"Q1bM(^l2R;5=XD[:Wk<!BH#W_F(&@($Rtg[FqKK+c[b%nW6U7Jd7BNXi0G9QXCh+a%m%Pl-ZDJTVjq,%kW/pL@V@?Z+OQJ@Y6F)>\dZgAOMpBkK<udAf)6pf&FeB\<_,:QJTKEC/J[L.$M]2d3]_eKcD^))0`p('7L-qIZkPU+!W`sZF@dF*%.8EqPV"nEqK`h2R9HT*\8*]T["FSdj:[gJ-emj7</dNIXkBNNc4$=UO2N#bcW\Q!ti9XHDU'/,)+Rmsj4tO&t\cq-#Iu[9KnZ6k2%Rl;EPj20l1FjD&plYuV-N%`E?X81\ki<b>Q_Bio`MBLCG0GQehm]60A)keIL\<s'9U[&tGT",^:@!5o%#G7??N$9fM*i?f4\Ba92%iWmAL2'72j<()K#]i<?U(gOBm0`&Ve^7#Qr9SI!'@40HtI2D$\RKkLbTaNEc0N\,rpkG`Wg*^=;VF`7d0O+E!pdV47g36qXVB(VE%0LGX]pq0Q3m?95.dj,YmR'$<!Hm;U,mCP&Rdk4*SR&g/tI--_Y\3&ae8F=#C=4?qD(-6j.$Zi^?Jo?I&X*kUmCRV'Y#ICg&Jo?="%XaLFDB\L;d#:$T?K$R)DcoqcB2,.!=KA"s#_)F^"f"MN52=4lFK=T\X_<4tg.@-lN-4;;uE<6G<SjZd!j_2=+b3&POeeT5*3/d9>%Z!K])"W0(8HpV9j]K%ULY]c`'JD%/Y(WJ8*=jJ3PA"_t>d9MUWC<1DWo#=Q9A!ShP#)C_g<fn6MI&Iq*8L<(1!*Nq(h-tcKQK)4P%_$^o*o9jB)?OYD2nGVPAIOOCp,gj7<N"/#QLB9k3&pDqDX?aQH%W/i<3e>c3L1rjHSDAP!IpfPbl[aR.<<KKXY&XNgk#R(T<mlGk%NqYgnj:25ZeCKaTM?VbOWJ(e>$g>MUD*IVmKVVH<LH0c?++-%rEA1#KBiA=^&GO?LY,/Zsr*WQ,D%rJ+"E]_N0*u_J#!Eue7-=f]%\n\"m]Hkjp<K?'$1fssS?M37JK@tZ1++.BEkV,(J<fp?@<5T<\>l2A(^7#QrPDYa#"GZO5h1BoobbO2^X=qempL/Fj.\tp<&?00/%L`_T&q[bY=#t")=Lt&\hc4<D.I0c=/"K?Sa7dAXGk6E7)5)df\L"*^D,B[g4oRi9P+3%qkJLk$`Gd#sUQq,3l"J%d$U\A2E*\*uB%D%N[VRtr/Fd/+A40*su62MfkfNQr&(k^<`+QNX:3)b0,F`odROofe>\981m-%3p"3A+YD9H6:/i*9#pl6"]Mi!.%$Oj]63TW=CVf%KUuIbH5[RfN[#_L3dbRm$3UXuZ4^38gXCmkUY)ZlS=sX7R?8Tt1s9(!!m5uY)FSm.^1i=h'@B"YA8WjDkTLD>f^^HL(K^`@+G#WN%"+$2S]=i'Kk(E3="pBH$_,(i[;sHKmK>lFu.#%^;>bLsV&#Zc23"I*YA-(XjNo$PKgFS8#/TKut/3`Yt^gO=%po8lf-YQB<`keaj%RL_U#TaTu0N<MFA#oM<pW>6;F0?i^^q;<3d,+s8iJsV@RW`4onUE@_FX81]F;@t$A6VhA<W<bU9j%(5M^+cUkk(@T.ML_F"a[8Kb%AKcGKa2R6IZhnK$p^e/P!d%CY-+-Oa*)33^+&?n:@#jqNnTh+Dg*^9gVHo.p0Lu#8pkG_,g*^9gV?r310Lu#8pq0R2m1V0Ddk4*s%R%sUWHp^jQmCP&Re,R1kY?SO_8%*brHAB(GYV59_l<gj#Nq"h@2V84dI<TAIc$3XjN9M3rcJ)P8Os3ptqQP<]bi(6_Xj1/`.hnCU%R41QQisjJb5P`AmJ#]/;ULs-!PED`'qp'ul.4F5+10Qb#rd`*m"6CPf$of+`4-BVpa_2p\'pK[t)6Fq(!Pi6YJas:C(7^>Q*Q\B%%FMrb$$>LWPN92EQHU?g<48i<F^(GRpnBaoiXq'%RR-aG@5'gFMs4A\-[)0WiQNHP_UGr#IGEnHs./6-5qc*>`a#\>Emt9q]T@@/G%SLMl'27+?2:*1Bk>>jqo@/ob6Bi]VFdhhenErP:+ZO^$LMjL5-Qc9u*M%lsBbk%=>`H1Io4R[\PnV?(Woa++I6FqcEO-k39Ti;hA%T(bF9$p/;Sj9_q2i?OE9$IajUZebqJiTAH\8F<?BJRuDXj0\R+A#LDj;aBV3:;pG/$T(V*mlX;2$a$E__^UZWT'&PLm1W/`FD%p,%FA)kd&QH=\VSg!O=VEj#!m*DOgBH$1h79Tf)-oOM/=#UWaT-6aQ=#AK&04U/\m[A:)]/,;1O$'iX^X>iI1H9fH?jhUFJ'/Yc&*"=%@QL[7Gf+X)&&-;GNj`CP[RtdqFLVjic%ZY:69;\MGf+(1GIGbLN4D89^e/ggAC,NYo-9\kSf?a:+<Eb6_T`nbeSu%Mrl;Q?O.*s_%>6cdX7;[R(jdOoka\f;Z@_=[:I)_@k-hb:Dc"HDCLWY\8kQd((:mZVIHal[RT4p`#PIR8%5kuXY=TqjOSCm_Up7oC[<9'n(#CS.t%(p^'+)]ld2J6G9:cdiG\(Ii]'*ZT[[iSAOZ]/[5ZjBT4qqtN:W0.EEdM?LC1F5AUnjle0Knb,r_WRT8lJjHd\GbN^u>:71(N8k,?%S>?TeGr*t5k)nuZU89A":Oh7]G>n$a5<)eE^0`=/B>&ogo_4>d2apZE'!8-<5>$?]A\E]]o_4>d1R3=,]!.Zujp1f<J>TL-4T0]g%*7KoD1$YN!:'d`7+8I^lrrdt=3;BQi8-m1VkeYIXe9j4m2`mH;MWqVQjV?9U3#FS9RL4Y_TI]+=KM4?BXW>Ib`H9&7c5"hc3#L=D%J&nS<RDbnPJi`&mOm'n=ItBs-S;`p\a92KceA9QJe5SCfG>jq=!:%?%lP7oc3&u1]RL]bBfIQ8&KS2<F2cGeN!:''+W@Oo-EH:&f%]AL*Kru3O1ac/s!54R[,:6NA4@@pZdICk"_"(pg\1s/A,q%J0`=m'nd7gfaSU@SrZoe];K#C?C`T*jN"J5T2\:R?CE(XCpQnrJ+f%n>@3We/S6XW_rp7XL,#N'^AsO6^ce`Dp9s7Q59Wcc[Nm'5AFI;H1Q]@eaqW%*m]TW'_p#%7I\$ro%k/?V0rA!DT3TsDlgRU4$!])%2qH4j"h'(nNV01_DJj!!5=$[5qo62dC\/Vs(h8fq+cU8+C%%u3]Pjn&(gU6tc8*CEGO0U`J:3#%K(k7iNR8Q:k6Y@I!/el`AOHmo%F1S-.+rB+l*[D&dO:PafNbXkbG^"Lr-\t)]..\gb-H_&:Yc"IpW6#BT^8%&G(Z*CXAdb9!(i&N"6FpEHLHR,'3^/a:^*nl,&^!T`%[4Uhqk0(lYgV\C>'J]dWh,27[PBXKkq#VsTL,+716GAu&LHW]p5ttqso,T^aEq4,A9YMp4RA'?B.-A^pqmT?rHjQ@&qm97(Vh\>P%\.3ORIg'0b;Mh$9a&dUJI=^i+kP2<#&+AV)\.L*t1eZ@H?ErR,*\/D+ofa_LqM4Q?$Kd>7+H[R;\e1g$e(?J3;;RZji!ViRVEOe_%l1k^8?Wj;As*rbMp-5M*;`4Me'mp$Q5;93Odud\IpPmX>$Z)575E>[MY!$%2TStcj@fli5H.g"&cjZ=,9_AekTr&pH)R*S&Q%M]\%@iEts%@\`[DiD=Yf5T0\fZd7fB[d:&OP[3eo)$G:)tNXKD-'-Cr+t6IY^,g:`jcm9Xe4-%7>:#&4Md+cZ$Gp;`jcuQB*HrrZbZPO%1R_bQkma+0^Mf)/g!eDc2Ob))afnjXg/IbTP>jO;2CjprJB=/\ish273;GH_Op-BXJ-4g@P9`-`X;+G1^gsg;nVTmBS:$e@)1TG4%W.FJnambpMA>R^k,hUKL9LcV?k'J16_drC8^<MOo5%$.o^j*b-oM<3GMMs`,1=Es__drC85&3SW+#"RHA\;J-qBt0477J@Q)/3Kk%@5@[,TD=B8\+Zs2[/=Jt:.aoC5a*2."j"+I%"cp<#0rO[2(.FQ?Go$3U0m0a^YGT_cZj[Ee>F+hFO)Fo'Je4c1UE#)5%:+%f:Ki@%*N<qi9)uX*.Ko9Y5u*rsqrHc62203%/jfO;7B:I>R*^5c0W.!(^/jkt$C0O!]\8))c1j;/%=MjK1S?CZdS?VniB`3T^9>1*JhAsQ%`73-]E'`@#:o-MXQu\\HKKa[UnceY'bWfsWIcJkt%DWd1lq<8S_f`P@mi1GNY1j55M3sIk;iJ1U$9im8h8W*i4r]I+I=eSbh`"#2%2[l3><uP06:scW(+%]X)dMjM\^Mf(^&3UXh]P.^-qV92R/R[arNH<tn^<K8%oL@541Hj-,jNk,(H,\pfmi1;!W:Y$sD[2)i4rtfj%@,/#4o)$G:(A*quP0F+5@FV9I%X1FQK9-Hgk@P'A5sQE6@D.8[%4A&2"k`mCN]^FTJs$WLj(8Pe!C.ZPjh-57&LZaR$8MZJ*IVM4%K:3H$-\"KsL"^lSP7mr]nFn";g-Je("#VGYS=:tP#mFc4Q1YJN:0]c\.Er1;AGFR#'jNb=12_7l-P2O$#L5CZ3H=$59PI6E.)QRs%G>N>>_J(>\^Un<7Vq41Vbc]%DGgN@,G/6ZK?O#kXmt%P9i9:o&h`,1>nSkmDg(#rO'XRjn]koUJiAIC2p@C3m54!M?qEm,1<WcW2%Lf?L008!0+bo0&!"<gn*qo1\3melKZK!_48d+TOS-(*toQ(W`U8l3ff:4ajgmb-s#:M[Q%r#/XciPYOrDQO!s4ga]S%;QtijT+X+%(i#.(od!e<cZ?J][he8@dq@LYo>\3BIK/l?q!gN]O,Lpl%@]]5lLuq;7d?@7lXuG6&6ghh-Ual4GO%68Yh2^Qg.kIHl((u9YHD8]%J`%cT3>t(2`3qTVZtXDk<]7C(Zn0:3OlOr2@09'&![unSRqOdgNa?3&o>p;BQlo":CR>7qmP:<^W+l]k5DR_FL=;d4.;T!`<="/#%V]cT\LXn$[5$tU'JLIW?=lATl$c6sq6#]=0/BEK0N`0Z/"sKq3/5YdlT_ZZ\"`5CgiK=?P6tu24!\OHfr"]@FpgZ!$W(.USaG-?/%=WhM\WDrrYOThcDd(4oRhX1R;]GJNX?4_bG&f%4Cf7kE>pO[Y%(W>oO+D_%W<<1?l5s4T>nU<-I1TtU#-A^+FC,8\,QRk],aF\Mo%a+?tjj>`DOC]M"=(8uEq!mtt#h:`D1%qqf>hJUW'h"X%GF>g!&Gt`8ojjQ\-dsd@7hE(]DC?:j>,qcTUOT(agd*9HT=XedE8]C;O%k^pOT-P(';`oHVf.V+?k9a/Kp+]AQ"da;ilH?a#%T::P;f8ns.HGJXV:hg(Tou2IJZBC%sYmL!#2bP$kb@-u#(FA-/6qf'YXpLL'%fQF>lM^<#Na_r7UH4rF+Lshl(Ca]G#+R%rrP>$+U;:JtMFLF&J>bP52-C0ID9a/Kp+]AQ"da`*[(]LE>!MFcnI8bpM")Sm&)B&WI%SM;8aXCNMKNC!UH03^0_$+427*k;7^Mh6dq_PHTA109g]1:lCpqFF929_(\'`8_ik!(^BM+?M,ZW_#mYp@dJ#@umZ4.=39\&Q,a)%a;6UsJ*:,X(-RqP\+3J4K*?2cT/W-^]+N$BI\gR!9T;@=@\cacjsl4pWmKdse0&4!61I[j<5G7BIP[qL&G7WJDRHi-?p.l#Ne3O'%dbgY9kaAT#4KnM"NK#1`dXp?tG>EVk;k<`NW7!,sdOK%/4sAh(DZ5qP*p&2-)(L?;8NKed9_B1V=!49_^@_C0CbCN=("`(;'d.=J%d.JfA9"8`tGUK4`-3ue9m_3H[[_6CSH*l0g2R[M?2\;`PNY8O\8g,mfTX^k0,2a#)0`\^H@r$qK^Hg/r\A5S-_IY8;D0kVQMem*'%T8=E`Eg5cc.YY[6K&W5^M1@tWY.p"*R9'=j;-0M8,=J/WNq)k)UHq9Gr](0M+H-:?\"j%o6I-q]e2n+jBK3BQ&GRWD.3Ka*bBjTk%LDWtE69plc_987\3c::j5UHV[SE^hIKts^?H-ZQ=E+n&oi51lc!eN6FO">7=bDO]4]1&A68['<VJU/SmZ72S='oRDKJ:^/Q('&ip%%1!6^r,E\F501uBZ$<'p5OR_:R/m$BNXfk4WDUWpqZ&$(Pj\M-W<"PO$"uLa?Eb1i'rIam_>SA6^Hh[!':qFQE]Lo6UX&K+5(Dnm%+^VUQ=R7hiWgudiEOfmnT5!H]e?;i.+b\PGS!!/Eb-.Whj&(Ap4>I3umEp32d:.X0_"/+56Yd@/Zc"4O9)P8C]=.Cu$%+SQ)5>+6%JA<[MSdk^s(>c[dd?!*#8jbJ'XmZW`ht<r0X"jt_p-d=#8ReoohLr.Comk'$Wgs\LaWl!"ms:!-FVD)rdkObb1/d?R.:j+plj5Ru%P,Kt12doa($HLdo8<qP6(A%!:N\0qYf[SK#C_pR1epVA"8W\%SmIEhn_D\h9Y\NcNN9u9t8To8n1M:&PC,94r%FjOIO6o81XWFll%.$Gc]:G?G%<h/$"D/.D_2Xf77hQGW(kab="^=lD#3Nh+W\SfT1h("U2?r,9if59BJgO-VNbKLT`].hSu=34s6HB)oXqtSb&g9$]W%[iX/(1'pk)nPub<G2i>#DuW7aV+%P?;a[U\\Hsk-VOt<VIH/RgT(^?gL!:.;83K2^3pr"`^CW<DQ%E[M(;ona2F3dsea^28^3id:%*JEKtc@QT*e08+m<FF;i=KP?^41eC*E99,=US)E->#kZ/h>uBZE,+K[;R_rqc<CRk=Fc2N#dc&-R1LbL+[C"$5hVG[Yc8l1-[7-+%JB(MA@cn1>6=Nq\nP7b*_kE@!->EoV$g9;JNb`o&*^J=j"/BX>"<j?'(m(:X[ODZf8dG\Re854R5QqX649:QE#UZ]'PmB@&%fLt$%B893rVq%KkSF1+[9//mM!rWC"rQ6J`eLKdDrNc+L*#E;o9K$\mM,a_u4(T'7LK4lc]qNO#faq,#Y%pe1pD2.&1]ib"A&.%[YUsQs%<C>-LIP6WA\CR9/SnQaf&uu@sGKM6N%]prYrZe8h[LgfOWFepjmPY?%1WS;ZfgM94Kb+AjN+&lT%[Hkn_hO7T<D^>,2UQJW`?,pL%1[:a!mo?F)p=ONKr'tICLSKX6eAfNl>"0&ZDpDO"a!*[gjafQL7>ph#AY(!5!;0WUTBu[rU]5:qG;+[:M1$He3QDNAi(3-]4s!gk%;),G[W-YG%Woh[QDlm^[!*=p4i^$r.C9e7b/Aj3.'LSK,<UZ2M<N9np#;nH_p->'SO%3n1<")JOW_NnpC,o7SB[DVEa*W=k)Z1VY%(;o&D<F[q1'EX%('[M>*'S9a!Kr:L8g"R`cK6q<u;)'o0W;<HO.ch4)K0_RA:#LI@B]Equ^d.i*\a:D>!XsGX<4u@&<N3D]*q^cL%-QkOWh[nPRck`Bc(_9%m*m1GO3-:4+K`2oZAL;7Vp`j(N$mC*_WE;fD@6>5=mt">8Jo-<68,I,W?<$j=Y"$U5(tr"i]i7I$F6F\8%TYBPCCuO<uFtFVaGe$>`leO*umX)_t,1SM>UJYT<HX619]4u9/J718KeS$A+MV2"ia03qSkhK^+H<n,!of;l"Fk#SVgHs\1jVW%)%BA>\*dI0T!+r[_6`+M1F$e07;=6abgWCqO4)Z(a$D60BP"&E4?(XRY0q\)XTI;ULSoV\4B>ZDO?VPW`g'^G]k>=FdQ&PE*s'Bgg#%2fd.5GHpM'jLq+gH28%]0C?&)+n`t)1^S]Jp5Io$+a7Uh/:fC)h[9G!opG!@YR$nf7*>'ie1Z;q9e9>ho4Su7$W7RF"b-RP(nfg<%+AN]e&!0!\aR93V/-;arJX/5-Y3#,TaU%S$(srMD#bSR<p$ikr+1;dSIN-Z<TMWC_W3?O=NtE+FKV`K0\c<u)[:;T@,U-LL7as.k%7%oVobFh1-gdZAd+B4Di,(rAb[3ST)7TB<A2-HX92<smNeEtlOaLHskq;S-8ArC687*dB*^HdK^!FSArmMDhV02Ql)5\FE]NG'G\%ku%*2h]pa37)#a!i\t$o_+fm-O?t'(O'=X\QfP."PA>9O,kn%tng<Ys^uY?6L[.ghP/eo%PQFpUWqApu$WHZ_33Kl:<7oECVX%sV%!%k0mM)-Du_%!<0bLAb6-PP!#Z8dc(C/UiEm007l<+Y(;'g2rShF,)a%qSGDjet<%XA"4r4i!pr_Bb`AqSp_67[m#_;,&]8,H]^`%F#u-8F:(5Vb6u:TYKF6EW'*u%]6t?mVH9e#TP?bX2.0@j0T"u)^7dU9>?NJF]#Q&8lVf=9el0tHLhOUmZnR@#APP*]hiUN(K(U7d%!q/hT"9ERo9rEY9*8f8Nj?AKYj+FUOmLu#R+%Q])4Ej@5H:4&4MChnpBus5!.QUJrM1?C.7gd!l<@1#I*amGI@1pn1I7(E?ng)ng%pAN=Xj113,<]]:H7(a()Hke!U,PFBFInn*,07lBUje^3oZiI>-cu_im`9ghM9BJQ(3>os;0b#<os4hK.iGqj'a/s"&//`1o`R5"J%j>$Hl;Q,B_cj0]m!1PSIPIS:V_ag'W>N*$]eQ'*PMgs70k"^j0RAZ97]D(R;]dq:uD#GknQ/93>@CNDiPc]sb\YglA!b0L'lL?!G%5-7@$a>?EM#t@WD$HX!Z85()K:#Pmbn4=*&^P-?&-P%bd0N-`HYpWAL/keEde=Ei]KT018@t3he.YW`(6F[e]rp)kn>9smbbR#Uk%$'R?_W>h2C!o&NtOk`tGQ^IEH(^f9J+mX@Ka%B*HbE)n#A3FU_;'J<AS7(?@88_Xd/AOeOq&JLMJXEa(Eal=f,j/e^jm9EQ?3!UK%K9d?#&p[k[Yd0=q3khRLP&i`U3QHQ4F4s,E1RV6:="d98Q"[oAjE;$=*[HVs8.`0U:tirLmrs<d(r=2U%;bjN0\'(rU+lq;)8W]P%f*X-WbSPe]oq8-MM$-[k!f9Q:,]7PSXPc#)#tFF&<(l=G`ZX[d@9UKO)W#c**qO]go@DsIX$hQL@t`AY&M.g<g5^jl.4+D^;tJWe%r)$(\+4,d1T.;QoT:_$*J't$>a7Pg]b<8>@9bmHp*S"\!cuHB?hDrF`J2(ofb'=!OOd=l=#hr9keURB%<Yn0]9rWL\mu`amBX-T-%a:qL@L^ht#8d-2$a2c4!/68M&oM]Z8qUtqI#O7=RN.-FJ^Oi1efMoUf"oX]e</q,#Ea6@og=SA;C^P_n"K-I\VA]rH*!4hNOe]6+%TQN#4oJg*Rdgh>PHcO'\JX/(l/uOt/Uo@?"!H6L*+&+$a</[\e'*<k1":.ckKM=<D>"8kp@iFgR2'MIrS2Hba4nX.1`X"mD!X0kQ%_PSIfWu-Hf^c%WFl>a1'Xa7m^&6MA?H7*O/iR#^jTVC'n'H;W6\licVSPHpuN_Ao!&HaUt!*i8LRn-JY&;!S'R%rBU>VIF&Jq-;*%VIPf\SNfLPmJY]iKX>Hk>%Hb2P)oK6^>+_=ER,7E'dNu\G5oO+R^ksMeF2so9HgWsi,h]GeGhl_4u@t^W#K.E6$]CpeU1sIj]U\,%ci)7J\%STBlEpSoV0NTB=R/atI+e'S$U:M8XoDpkh+T7I12[,QC74?a]Wm8b!Xb,8e)'gPJE;hYgYA#BdG<1RYd]_!3b3K37u?De%l-Ldg:T>PaIi27$7DZpl[nI>'O$VEu<Br/1Gh&NDZ!A$JM4ao5CABARMPr\WQ<2594?rIt+3fKT*[@_3@B-6Ofnrd8_DuN4<Y_b%%Ef=55N*A<^9pcVlH\sDYP\GDlkhB(gF0$/^HJ1R6of:(()rJZHZEL3Q+fJS*>'binOlm^"nOcg5IB45o<V%2?;nXm3PP;>bR]21l%Q0e#ZD9kDs$UN<hP\=;qMSPK#=Ph)%4?rI@ea7B_\)Y&;a*$4$hU)J$X3mrMqcGMiW36#"$^2cL:U/rkDT?nUY1L(.B'Q%*!EG8/%p`d"?36.MTcWTM><c/jrJP\HK[ra&<5iE]*oa]W?L/[F;K[jQKk_XF]MF]%I;-e9+;lqFIZZ_#":$%A4!5-K&NE/d4K=<rl8C3Rl%X;Bpom*J#gP6`:Zmd?,P?\-ICI<1"Yl@QaV.r@tjoXM8]/"8e;<C-.MfMob^Po"N=fe^[%^f*J/)"D^J;38(R,64]!$B!<T-IUBn%KRaC]UgbN5K9pC:"i:Nn.*aD"<H'?,!=2raILC\(;PGLe<2<u7`AA_DaBt=7(FiE<-;f3dBTZrHH<e42>&o?l+>g*kpa0f,i"4'-%\Y.mpXF=@#=9BlXmCQ%8<AXc=3hr?-X_]1UX[3;lcq;CA>+l\$2&=(V&6`(1]G!3RE+g78n/jhWIL?1aD%7nF*.8>n-3jMPB*;23%Kh\D#<=FGV*LFkf(]$9O-Gq/A>#eD3'/nB[BH;F\W%YId^dEOPJiWWemkiAXNqAic/nG])b9k<.P*dj,F&[Y-b0euH'LJ8rMJpA/%$9"I0,4<iQ65FQR.Ni.X"7_d>N69*<,<om!jTtKUOk9:ZPd-[f^D9g19P)+HIuo$>1-e9B3T%?G.-!+M8##C-c/l&Z[;:nOW17_3%N/F<G7Fb%B<&KI!\NmQM\2\eA?p*Z%ZB(<FIKWi"BIkTe4t3Mg/#0+DgDH"L&aB7r3AQ"Za"ki:(tr"i]i7I$F6K2'<;XGYB[6bM%LpXh1gPAblYkh=/#r(iT;"5SD74$T@Gf9To@AD544uFgU:GK5XW;=%!<6:hZ`hNM(kFD6JE08X^)5s]hZXs>,Ifr`kPthL_@138R%kBlPA'f.^[fbbGkdu(/db,A2Jd3BKb2VmQ/"bS_sVVhjbmA>9$2jOFGT)]VpJPfBuD28FF^neudk"+cYmt51N$uIMp?7M_M3HWSl%oEU>DlQ2*V/cR@h^>,IRok'LC[ln+uQ"h8u;>\\jPO+G(Zf:A3"#,[hU)FPRe9DtE[i_=$>FOEtl_N#TS>]L%($$+*s/sjK381;&%;5gt>"e+Vf%jnHH]J+Y"UGX)Xs,BA)j6-uefWO-nq0hfO,N&@d1-N.?&S_\GT*!BZ%@a90:H!!?RR-\iKX"D<"mX*O_q)Be$_OiT%4ru1@KLQsS$]a()IDP'Fmur`*6qZZ,*RWhP#`NX#GtKsV)l1Bb0c>-OmKK#@?#3RRL3r)>7UW_0JtWnu2b]!RB<rpm\-7MY'ttUk%_gV#W.luJNN=N'OIDL$8GIGo'fMRPt#K+4d(gG%?M8KeNiSKq13t1k8bfDEF.gX&+o,/c,g]G==MN&RP_nEBZ'/83n_9`PH%>3V'%poG2NDY6JS<h6s43nugOWZ'ceC&/?U)jPRB]HbM7\G;'0#J!'fUiVXumBh5WE5or.hIlKd^7a*dYf^b"$^X%ak:Z+LiIa$F>fcns%Q>puX]dL6g2Em=Ke;7eFI/2n3Xb`%5OJ0kQ%%FsMeOGVA$[X&J+4OI8>q#C,$,1>:ULO/il7um"a&c'Q*qaIl<B0jJ9<<j46"\)B%MUBG6&1M_eb_<]*/r3`.!epU+Y,*sY.TcJr7ffFImTf(D_FEGYkf)Xpc$Q*PVPLjh&`o./]Ps)&*".*B`X=78Vm)[Af_`NE,8ih8%!K?Z!EhqW0G9h[nqCIEBdq2N&UcMCQJ_rtDK#n)-'VbH?0(DcA'*W\(>gp/[*_sKLoO$(;$h\5a1M0C%C`ID,0.D?%87*^C%S5\9%VMu6"D&Anl$R".@kdVqGS2d5:aYd>h=7X6F6q`U$(X]L,>P!W^M".'l7W"srAbB^:+`4Tu^XQ]1nIF8F'e18B`6r[u7lmj+b@8R0%DYShH1A8HOrCE8i:M"ai`0d-Q\]$(,rH?6+3dm$:&46=(S*.L=Ht*r"d/G`Lnn<$;=SQRiRKCVn37!%\(cOP496rUUG3Gp_ESi^J%]RoJ9pP%#Kkr7HWlC0<d]17l#mK2Jb>\Cf)N7JKHGV-I/44Ien>CiN>.lbk(?PnQhoKg1=[PUfWa.*onL\)GgH#PHTL+j8TKM`Q:%3s_g)E:0SG)$Im/(Y1*mfl1nJVD'(p`3C-0.u4LOE,MO,,nu$k=&W03EoQ!sVK2]^j6o*t'FJRV:h_;[.=B)W.1XAB&13*_0`Jq8%#9bN+cJ90[Kn)/^_KlA?.1XYJ'IJNa3<$d@"YhG9cHR%MKn;#XC?c-m;B22kcrA`JdOa8K7`DT(j:Mm9s56<K?O/^(I>p^IHMR^#%2pO9jXHgtZ4ha_BH/b)mc#$3*<jQ:>X@kd?jD3@N_Y>bJW3[X!6h@[,13sJhbCER(XHe'.Xj\Zm^2`G.YrlHBg2?QYqr,g#Ia5?6%)bU+G*g=RoJ+-ARMr<WZagj[;d\q/^?n]I87uX3UQ_$:DpP!P*Xn=,9ippe@BD/$A0l?:>WB@:cTAJN;0$/Oe)1A=D"b,pc8aZ:%%Z-T2_."s@[QX[=dY)EQmEpgg$2nn6opEO[rC5^RJ<M-^EZSEbF'b4SLEBeUl*E-sXTuD^'BI2U.7(tgo*nP$V,@p:T^`HYTo^jo:%:[iemr6Zm]nFQt1*9IXY8?9ISrDL/,Ik:Z7!,TCL_0ricm"N,kN9oWo^XRn6W]8e@onfH<AY505g&S_\d4tDO@.$gcH1[f[djOq)%ELNceIHDUHn_iB^DL?<?f(f(6,Hh%9cRa"HC,oQH_j0XBX-_bS@09JUg8*,;0@?!9k9-Dp55FtcX^L8H2p%MfC&KdgiuOYf^MfXS%.GDY&M`'&*^\""kA\E]]o_4>d1WB$DPM]%klC-Kd;cdq0rk<AU;uWKebJBXAYJdS_94VW4"IuC)Dk+^EIjRg`PD:E:688,?DRc!.%5tQllD_ltOTcf<-0]#)dLkBb-"UQ=pNkMZ'5tm)eF#/LVTcf<-R_"*4&-o*jAJ.<q)#M;K#m^iWE"5gSh^;K<adE\Il.@pE^>M3\%,p>1\bm5YLJi`VJGR#B8%aNlE,_U\%p<%[b0d.%PbnMLXJi`U5l3]jE*1YTE8I,KBm"P*G&/+!\ZqWiYa(P7^WNih[\?:-LZ&[`9%k!qF8Idd"#d"^a]_au2#Frb(d[@4EMRnLE1N]nekKejBi+m985K&Qp[dhhenEK4a(EiuO1j.Z*jhY;09P"/GLEgN?`0o4jg1p+A]%UJl3*3qPF;!UsYc8"WZ!9M\HVi;:MS>D8qBD8uE7.4=sS0jb74$/GC7AmT:^$r`]+bNP53j11FMTN+X[nC@YJ!7Ir#1k'eSV[N:6%ENVe&`H,7/;UW'hqcJ,3NTThW2>F7uLfEjNi&f5WW4GA*D17MjM(enIV*k<1!S/"X)%DMOP8F#.0i#K!nD"GF`VuePGbuG^,:PRC%ME[e8/H"J+NGQ:^S2rq?Y(Y/8#:*St4jW>K-ij#DO?8BO]OoZ@[UAP3,J84B9aggYF>UO63P;*@_dE?;8]@$F`HX!B]NX.c]V#]]%cW]kSi6-Y2Siuii%]<+lIH160HL]!W.;q0KdYjG1R3sVW#H`(Ke5!Yq\p!)HE([Uoj;t<Dq/D8P4C^cj<8D5%Cq`NpNCUf2l643+%-YUra7b;P^q^muF-\_Q4?JTi81s=q`>1XU=!pFtqQ'PNk_-fFo=`*Gg9qc9d:)1"j$mXTDJ?@!*fbg7cSLD4o;'J9)%\[YG&dk<]%AK1$X<QG<jlV)M$$aJqj88@d=Qr-CdlR69f7Yi%\?43#b?rB:19h.k[*'u(YkR*=&Y()"q/&rB)L!jNTF'/UJCr\g'b<Y3"+I,PB%0WC_TVIUn/&A%*ZcXm"j#eGmT`kR2Mpm65aInBP4:W2I`UI:GH.24DpYHB>-F,^-NG5_(hrX2,"m25jqN:S*`+>%=toel*257sYs%NY5?M8-(EBg=n@UlMMfGdp?tEIQan5aqpF(:t>H8K)L9Yg=pW/\'(&oN[oSk.0/KE'XooXkB1/#f6s-VA@+!$1c<"W/<hdIhT@bE%mC;H9jf37><PO>(8=+<t\!0LT5=Ah(g4!?Qgs5-I-M4A`b-T6-aL&4h@9qML1SZB:(=P]CIk:\k"_j*9eu_BA;W*kV>,+$seL;6c%'EY<BMKd2i)@im>1gGC)e1Cg1Z,.f.3dk?GhAB)qS5E+Q<]6);<ZqU;W\KmYBO?H(L.iaEWh;=!A>8!YaoU]jYl/i,gAoUOBBQK1%E1eMmfpGT(4]-#U$rfk8QrN`!lkAGlNh_";X/,Z(;[A=3.)%."#WRJIrQd%4@.a%7$?J8Q][A8D4cBB:c2]7f/"9(.Wt5>&/#pk%%d\/kn[;619#S`L7.%>nJd)mMfBpN2C&4G7=opF4mgLg)sKKp[dJV)'Z?sD'pWeR1!rFTWD($^k:>W-C*JQ2lm4(T'7LK4lc'uNec%7Ng&aY6P_qT`%n)DRZE\hR\5S.8uuQ!;\/YbiKK%M8u$r.R4OF"XO/k-5(Ku[`#XN]]uLD+*cI@MP9V8MUJ+.q4jE1]6e/c][\k;%g@gi@jDc3/5RiP)B_a,cpWr#OCS^*D/[tPXR[:V_r[X@*rK\k4hl3BDInDT=d6hJ>L/"=PFnEm`@/3?#JL^<9W=CLTA@+mtNlb-J%C%*)T[Ge5[TUdr-]IFa8$8B1a2RrQ(BksCumaK1?4^o'[!q\I3^T]-i<Y_u/ZlIubNV8ZidN*!;4Y]d_T;%>3`*D0AVDgr5D!JsH%a^1'kXiH8<AQ&l9.QC[3.^peJ7!@ONlg!pA5uetAoaJclS,3+ohM3PTqAbM]?]\-ga,)9W;[BHS.,JY<7)P^@$UL@uA4!LcPZHu_%[>!nuKk<YJptBU&JoZgi6qdUA.++kj.MYW,.'@8@7DL'gdpKs<"Vup*dZFTb'6_u'=/n4Ml[BRD`6)FWWVj`2#T-Mp*M]h++#5eJ%eQkXoJY7n3*Gt'lA?g`._&E">\7aF:4hDd0Cgg3E$nCJ%YugZ1R?pFJs6C/%q]s1"qP)g%)Z&8MF-/9[$$'9C9f@JE,eoNKcL#/`%2Kt^c<S<s5'A+Zrd2^c8@UN+?X=>XT.@Y!1[#S:fn$A&$[Ld]K1Ru_SrAhm,BT+>Bc6t)9/"9(.Wt9m0+'Qnn:7As^UW&G&.0NZd%'^q8\1`T]>/@87NQ"!*Gom(U5&Yr<dY2RApK[^k>Qd`aYUk)MT!L4rh!MG/jUZ[ta.0MOD']0[mpj_KIo%aQ>;6]V*M10I,oS9GX%)@M.I,D(ce8gULe,\X*6heZj6<,mWXW<&JT?rTG^:"_qM+dDXuj_>m3eaF//EPbZ]>T(05L2M[o)$$#P^p^%i<=M5!)guD;isKq<%.Y^Y@Yc=@@Vei*dcoOM_bVriT"S<![S($2=VfB1-Our,;^a@LZ.YPT7"kI4Eo@36Qg]RV/&1AqM:c8WrTlp?pcmto)Ht9D!(OFZT%fg#DjQ63hc5>UG09t6g.m.R*#:nCu!n^<PKWAR`bms0BYm;KY/>Nfim3s0p'ZigfODlhu?D=1T\KAu47CEBg[l@@rFaSc0:kIC)a%?Y_I42(DAB:ZDscLCBULFL8of2F(UbV(hDUB-`l&qo8K-.iWcU8:UPs<3Mj!Y^4?]HC@KHU%O,R&EPkNPs9$dK:qZ`mp&'QFOtcX%9J)[!'I60PI`LKWk9of4*l._X7iLUGnn#QWX[6b"6U4Au.3X3>;WC7Ji$AB:H06iiGhN;X2m+6_DWhb;64s#/*n_5T>N-^WgU84W%`0:p`cA$BDI:!k34&V*14Y/c4Wb+7@HE@q7SefMYb<elP/P,=k`lp1srkneEUFI%l6gIt<`@UF5E1R!BEK[6@)Q:K+gJ$.Y8BW$T%W@Kr(J)<5f.Ct<B]t+$jJGh-9=,j;RJFiF-NH7$I(J3CU3Vol=IB:51"kW#-)s:hUou+#dD5O7mB<%H#.l^=Sh`0:'/TQ2YZtZ3V%A3_BjZ!-Ju6<]nLRjgl9!&Xkoe.pK?3'")i9FChX",-=\:t+FbgeDKd-jU]`XB,t]ioJlg6!=8e)$$P:TVf]MaefumcIoR$&2Jcc%K]?04Hpo25:=dZ,,R/df").%]C209?eek7gJ=6X6q\cEUEO,#P1cZ8'494(s$L)Q9DT3e^!7X\-@s:lcjCJ5D2_EF(gp-+5?9g`;%G8L!f`%7$1Tbfun,;`_/Ml0>>IH-e]kc'O;cT]kK_\i9PKU3;EakW8DqUmoh8kb0a`^t?;;n:;kS*VRhcE55N[&\-$D&Ib)PT"?/%PR5VWf_`\aUV"VCNEG3"7R]4ua0gt5Ya8hK@CaQ%j1S2'n9ngEh,C-KL_qAO,b[7_Ok2@-d77@i]<E)\+cW5#00"/amupQ@d6&ks%dD<4e6`2XTRYrV+Mu0*!hl(tie&%W`\GYjS;@iY$&UYIXX"JADi:I&aYFK[YD%2bs/=0V@(Z7+LmlHu,T![^&qtM:'G7-#@S*2rd%_Hqc?_CL(EIDO#,^+YG[J&9ri2Yp-"S&^:LlNd7)&Bt(fKSKdq*M+9(S?dh=n)(/>gF+buAHEF=m@NsE;n>'ee[J2`5^I,*-/Bd<%\CFFhfDq@@U%@>(g1'<="q=Km`*F[IYrX&p4UK0.L;e=N4du.pj2/.iWF(-4=sf%h<o28]:gi%I(:l2TAml'`h.TrQdA"[<j2)"^%=p9K#4,D,/E,%8d6g%`d&&A<E>,K)=W*G(@5)jJ(M!&`sgMk/R3/%ea[0kj_%Ka3uS6EB57"<=1"bO)uN\$"NOp*Q^=V/c="UhUZ%-q>$Y)aNYN"l^Q,q'-7_["TVcQRl5]85&BlK#EW$L*6$*D_C=>N\":o$%X-FdY&&P[0iQgZ9U7:>5&T`mKMjf(F6`K)FF8I>G?^s%opQHQo3RMspO[eL$\Ss3[0e'ZhE_FmHU57#$hDLl'7pC^1qqZp<%_=8q<G(!JoZmlJkQIB37YXn!%O<d&FUa79>d`O]queZLAqa;%TUo@6W95]8KeL1$Cj>>i1B)]6o(H:!J(i.CN+Q6h4$VGTP0V5_>a'IrHVNcYN.8=b:b\g!i_V<\<tK!:E]-VV:I^ahq57hr@eEu^%/q7.qeAd6.ohr4Cf-O=WpY*jQ-7t0>Fc&U;N"WnRbLXU+FQlXOdO#q0V<_(B!YEn\Vql*qRH)`\^SP`R%AT]4s2#am18QJq8k(i$%RkZrI3`V_Ta+8o_FsrW0;F"E!(%`oTVoC*?/iHmkD'3#.].;!&J"$TL)(h01_RCY_7#k3TKaf.Z$L5Pg%>uVoPk*6/n0O%oRK+lM%Q/skm$5$ce>6NXuEa^KEO[':0&Wl$<mU?8hXTBp-Bfsk,5muC5;#DUE('r?eQe<,UH9ln2T]@=(8i`&B5rJl-8-33%8?Dq1O"=*:%LXn$[Fek:Z^r/K?V(9_.K^"BE?hp_*W5"quOI@dN+NLH6@09'&!k=b!Z6`nF\Vi-,4pVW/$rt\TB#HXRf1gYQCY%:ag,TQL1?.CT%'d[YrWDsMES5\rN^b0[AhpOOU'15cF+8H-*WutcP.%XbIDO7%^-shr:V2Gd*[0g<u7pZ>b1A;PG:J"NXE4"9^e#13DODCk=r+<,!%b/a5/4tt5-I^IA,^mQG"5p'5%!bi0nDIXPBpJ\J]?31*rgAXh45a<qLDgqVA<[T_iX`<5H4>*^;/"8k5<C-.MfgN`OQ#intV`q6a%%M@pVD],26jm3JfqF%[kOST%:nep)G1,Z'4T]p36hAfR00ig&?$@u%X`AqKC$+nWZT5-%//HGDqZf86s/%SO(4k]m,I0!/l<]3gP%<ZqOoL;c/oS>Wbs_6>?k&Pu:JTPP6l6S!qbrt#@:oo(&eXd7a[(IAZtS@Jh,!;R"+mK1]I"nkoCTb]2?\PB+%o0Odl+CJ&#ED*:L%og9oRceRY<>34OO]9q(E'4IcD%:B;]o``.m19`?9?kr>.8#Q!HX/*85&k`>"&4AcL$%]C=L-t846)5=-ILAGDX$64Ko-TZ>2ktcW%["(k;TN3oQ>e/8;('p?ZZ'7s+Yc=@@Vei*dcoQYJrpuJKromeg_f(&'GCTPif0B91:I"mQcX6]pL]1$Js"Ed*^\F.&s4`&%o(oh&%Ienj"OT+Jds7G2U5QC=.^O?"QjenaMe'EO=jhL`eo,ll)r:]4_J,/nirUTXE5Q0imJ,T2H^\lFW?bZNu[pT.*f0B</bLaN,O$EY_%6M`.sn=P1+a8br'^\f2220-h~>%AI9_PrivateDataEnd